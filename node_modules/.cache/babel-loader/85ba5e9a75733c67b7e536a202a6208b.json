{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\star\\\\erpfrontend\\\\src\\\\views\\\\components\\\\modal\\\\ModalThemes.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ModalConfig = [{\n  id: 1,\n  title: 'Primary',\n  modalColor: 'modal-primary',\n  btnColor: 'primary'\n}, {\n  id: 2,\n  title: 'Secondary',\n  modalColor: 'modal-secondary',\n  btnColor: 'secondary'\n}, {\n  id: 3,\n  title: 'Success',\n  modalColor: 'modal-success',\n  btnColor: 'success'\n}, {\n  id: 4,\n  title: 'Danger',\n  modalColor: 'modal-danger',\n  btnColor: 'danger'\n}, {\n  id: 5,\n  title: 'Warning',\n  modalColor: 'modal-warning',\n  btnColor: 'warning'\n}, {\n  id: 6,\n  title: 'Info',\n  modalColor: 'modal-info',\n  btnColor: 'info'\n}, {\n  id: 7,\n  title: 'Dark',\n  modalColor: 'modal-dark',\n  btnColor: 'dark'\n}];\n\nvar ModalTheme = function ModalTheme() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggleModal = function toggleModal(id) {\n    if (modal !== id) {\n      setModal(id);\n    } else {\n      setModal(null);\n    }\n  };\n\n  var renderModal = ModalConfig.map(function (item) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-\".concat(item.modalColor),\n      children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n        color: item.btnColor,\n        onClick: function onClick() {\n          return toggleModal(item.id);\n        },\n        outline: true,\n        children: item.title\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal === item.id,\n        toggle: function toggle() {\n          return toggleModal(item.id);\n        },\n        className: \"modal-dialog-centered\",\n        modalClassName: item.modalColor,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: function toggle() {\n            return toggleModal(item.id);\n          },\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: \"Tart lemon drops macaroon oat cake chocolate toffee chocolate bar icing. Pudding jelly beans carrot cake pastry gummies cheesecake lollipop. I love cookie lollipop cake I love sweet gummi bears cupcake dessert.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: item.btnColor,\n            onClick: function onClick() {\n              return toggleModal(item.id);\n            },\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-inline-spacing\",\n    children: renderModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(ModalTheme, \"+2xwMS3J0RcBA0qWw62dnTGSPTE=\");\n\n_c = ModalTheme;\nexport default ModalTheme;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTheme\");","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/src/views/components/modal/ModalThemes.js"],"names":["useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalConfig","id","title","modalColor","btnColor","ModalTheme","modal","setModal","toggleModal","renderModal","map","item"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\nconst ModalConfig = [\r\n  {\r\n    id: 1,\r\n    title: 'Primary',\r\n    modalColor: 'modal-primary',\r\n    btnColor: 'primary'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Secondary',\r\n    modalColor: 'modal-secondary',\r\n    btnColor: 'secondary'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Success',\r\n    modalColor: 'modal-success',\r\n    btnColor: 'success'\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Danger',\r\n    modalColor: 'modal-danger',\r\n    btnColor: 'danger'\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Warning',\r\n    modalColor: 'modal-warning',\r\n    btnColor: 'warning'\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Info',\r\n    modalColor: 'modal-info',\r\n    btnColor: 'info'\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Dark',\r\n    modalColor: 'modal-dark',\r\n    btnColor: 'dark'\r\n  }\r\n]\r\n\r\nconst ModalTheme = () => {\r\n  const [modal, setModal] = useState(null)\r\n\r\n  const toggleModal = id => {\r\n    if (modal !== id) {\r\n      setModal(id)\r\n    } else {\r\n      setModal(null)\r\n    }\r\n  }\r\n\r\n  const renderModal = ModalConfig.map(item => {\r\n    return (\r\n      <div className={`theme-${item.modalColor}`} key={item.id}>\r\n        <Button.Ripple color={item.btnColor} onClick={() => toggleModal(item.id)} key={item.title} outline>\r\n          {item.title}\r\n        </Button.Ripple>\r\n        <Modal\r\n          isOpen={modal === item.id}\r\n          toggle={() => toggleModal(item.id)}\r\n          className='modal-dialog-centered'\r\n          modalClassName={item.modalColor}\r\n          key={item.id}\r\n        >\r\n          <ModalHeader toggle={() => toggleModal(item.id)}>{item.title}</ModalHeader>\r\n          <ModalBody>\r\n            Tart lemon drops macaroon oat cake chocolate toffee chocolate bar icing. Pudding jelly beans carrot cake\r\n            pastry gummies cheesecake lollipop. I love cookie lollipop cake I love sweet gummi bears cupcake dessert.\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color={item.btnColor} onClick={() => toggleModal(item.id)}>\r\n              Accept\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return <div className='demo-inline-spacing'>{renderModal}</div>\r\n}\r\nexport default ModalTheme\r\n"]},"metadata":{},"sourceType":"module"}