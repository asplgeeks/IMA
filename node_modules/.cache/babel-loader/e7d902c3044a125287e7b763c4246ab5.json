{"ast":null,"code":"import _objectSpread from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\star\\\\erpfrontend\\\\src\\\\views\\\\pages\\\\mom\\\\MOM.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { React, useState, useContext, Fragment, useEffect } from 'react';\nimport { Col, Row, Card, CardBody, CardTitle, CardText, Form, FormGroup, UncontrolledTooltip, Label, Input, Tooltip, InputGroup, InputGroupAddon, ListGroup, ListGroupItem, InputGroupText, CustomInput, Button } from 'reactstrap';\n\nvar moment = require('moment');\n\nimport { useForm, Controller } from 'react-hook-form';\nimport classnames from 'classnames';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { TextField } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport { useDispatch } from 'react-redux';\nimport { handleMaster, handleMasterUpdate } from '@store/actions/masteruser';\nimport axios from 'axios';\nimport '@styles/base/pages/page-auth.scss';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { uploadFile } from 'react-s3';\nimport IconButton from \"@material-ui/core/IconButton\"; // import InputAdornment from \"@material-ui/core/InputAdornment\"\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport Divider from '@material-ui/core/Divider';\nimport Icon from '@material-ui/core/Icon';\nimport { green, red } from '@material-ui/core/colors';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar loginAuthID = sessionStorage.getItem('id_token');\nvar animatedComponents = makeAnimated();\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      padding: 10\n    },\n    container: {\n      maxHeight: 440\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    TimeSpan: {\n      fontWeight: 200,\n      padding: \"10px\",\n      lightingColor: \"#E62E2D\"\n    },\n    chip: {\n      margin: 2\n    },\n    noLabel: {\n      marginTop: theme.spacing(3)\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    },\n    titleColor: {\n      color: \"#d52528\"\n    }\n  };\n});\nvar Agenda = [{}];\n\nvar OtherAttendies = function OtherAttendies(props) {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      reset = _useForm.reset,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit;\n\n  var theme = useTheme();\n  var classes = useStyles();\n  var fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var onSubmit = function onSubmit(data) {\n    // e.preventDefault()\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    fullScreen: fullScreen,\n    className: classes.modal,\n    open: props.open,\n    toggle: props.handleClose,\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Other Attendees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"auth-login-form mt-2\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-label\",\n                for: \"login-email\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"name\",\n                className: classnames({\n                  'is-invalid': errors['name']\n                }),\n                innerRef: register({\n                  required: true,\n                  validate: function validate(value) {\n                    return value !== '';\n                  }\n                }),\n                placeholder: \"Enter your name\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, _this), errors.name && errors.name.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"name is require\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 69\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-label\",\n                for: \"login-email\",\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                name: \"phone\",\n                className: classnames({\n                  'is-invalid': errors['phone']\n                }),\n                innerRef: register({\n                  required: true,\n                  pattern: {\n                    value: /[1-9]{1}[0-9]{9}/,\n                    message: \"please enter your 10 digit mobile number\"\n                  },\n                  validate: function validate(value) {\n                    return value !== '';\n                  }\n                }),\n                placeholder: \"Enter your mobile  number\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, _this), errors.phone && errors.phone.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"phone is require\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 71\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-label\",\n                for: \"login-email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"mail\",\n                className: classnames({\n                  'is-invalid': errors['mail']\n                }),\n                innerRef: register({\n                  required: true,\n                  validate: function validate(value) {\n                    return value !== '';\n                  }\n                }),\n                placeholder: \"Enter your email\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, _this), errors.mail && errors.mail.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"mail is require\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 69\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-label\",\n                for: \"login-email\",\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"address\",\n                className: classnames({\n                  'is-invalid': errors['address']\n                }),\n                innerRef: register({\n                  required: true,\n                  validate: function validate(value) {\n                    return value !== '';\n                  }\n                }),\n                placeholder: \"Enter your location\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, _this), errors.address && errors.address.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"location is require\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 75\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-label\",\n                for: \"login-email\",\n                children: \"Company name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"address\",\n                className: classnames({\n                  'is-invalid': errors['address']\n                }),\n                innerRef: register({\n                  required: true,\n                  validate: function validate(value) {\n                    return value !== '';\n                  }\n                }),\n                placeholder: \"Enter your company name\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, _this), errors.address && errors.address.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Company name is require\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 75\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          color: \"secondary\",\n          onClick: props.handleClose,\n          size: \"sm\",\n          style: {\n            float: \"right\",\n            margin: \"6px\"\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          className: \"ripple-button\",\n          type: \"submit\",\n          size: \"sm\",\n          style: {\n            float: \"right\",\n            margin: \"6px\"\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 16\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 8\n  }, _this);\n};\n\n_s(OtherAttendies, \"HIzX0eLcoirigCa8C62AODLxXbg=\", false, function () {\n  return [useForm, useTheme, useStyles, useMediaQuery];\n});\n\n_c = OtherAttendies;\n\nvar MinuteOfMeetings = function MinuteOfMeetings(props) {\n  _s2();\n\n  var _jsxDEV2, _jsxDEV3;\n\n  // const { register, errors, reset, setValue, handleSubmit, control } = useForm()\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      ajendaz = _useState2[0],\n      setAjenda = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      personName = _useState6[0],\n      setPersonName = _useState6[1];\n\n  var _useState7 = useState(new Date().toLocaleTimeString('en-US', {\n    hour12: false\n  })),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentTime = _useState8[0],\n      setCurrentTime = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      stopTime = _useState10[0],\n      setStopTime = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      type = _useState12[0],\n      setType = _useState12[1];\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var theme = useTheme();\n  var item = props.item,\n      id = props.id;\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      tooltipOpen = _useState14[0],\n      setTooltipOpen = _useState14[1];\n\n  var _useForm2 = useForm({\n    defaultValues: props ? props && props.preloadValue && props.preloadValue.detail : \"\"\n  }),\n      register = _useForm2.register,\n      errors = _useForm2.errors,\n      reset = _useForm2.reset,\n      setValue = _useForm2.setValue,\n      handleSubmit = _useForm2.handleSubmit,\n      control = _useForm2.control;\n\n  var _useState15 = useState([].concat(Agenda)),\n      _useState16 = _slicedToArray(_useState15, 2),\n      addAjenda = _useState16[0],\n      setAddAjenda = _useState16[1];\n\n  console.log(currentTime);\n\n  var onSelect = function onSelect(e) {\n    setType(e.target.value);\n  };\n\n  var toggle = function toggle() {\n    return setTooltipOpen(!tooltipOpen);\n  };\n\n  var handleAddAgenda = function handleAddAgenda() {\n    console.log(Agenda, {});\n    setAddAjenda([].concat(Agenda, [{}]));\n  };\n\n  var onStartMeeting = function onStartMeeting() {\n    setStopTime(setInterval(function () {\n      return setCurrentTime(new Date().toLocaleTimeString('en-US', {\n        hour12: false\n      }));\n    }, 1000));\n  };\n\n  var EndTime = function EndTime() {\n    clearInterval(stopTime);\n  };\n\n  var handleRemoveAgenda = function handleRemoveAgenda(I) {\n    // console.log(e.target.id)\n    // const removeAgenda = Agenda.filter((item, index) => {\n    //   console.log(Agenda, index)\n    //   return Agenda !== e.target.id\n    // })\n    var value = _toConsumableArray(addAjenda);\n\n    value.splice(I, 1);\n    setAddAjenda(value); // console.log(removeAgenda)\n    // setAddAjenda({Agenda : [Agenda.filter()]})\n  }; // console.log(errors)\n\n\n  var options = [{\n    value: 'chocolate',\n    label: 'Chocolate'\n  }, {\n    value: 'strawberry',\n    label: 'Strawberry'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  }; //entering a list on change\n\n\n  var handleChange = function handleChange(e) {\n    // console.log(e.target.value)\n    // if (e.key === 'Enter') {\n    var ajenda = e.target.value;\n    setAjenda(ajenda); //  e.preventDefault()\n    // personName.push(ajenda)\n    // setValue(\"ajenda\", personName)\n    // setPersonName(personName)\n    //   reset()\n    // }\n  }; //add ajenda\n  // const addAjenda = () => {\n  //   personName.push(ajendaz)\n  //   setValue(\"ajenda\", personName)\n  //   // setPersonName('')\n  //   reset({ajenda:[]})\n  // }\n  //multiselect attendies value\n\n\n  var changeValue = function changeValue(selected) {\n    // console.log(stuff)\n    // console.log(selected)\n    setValue(\"attendies\", selected);\n  }; //multiselect other attendies\n\n\n  var changeOtherAttendies = function changeOtherAttendies(selected) {\n    // console.log(stuff)\n    // console.log(selected)\n    setValue(\"other_attendies\", selected);\n  }; //delete the list\n\n\n  var onDelete = function onDelete(e) {\n    var ajendas = personName.filter(function (item, index) {\n      // console.log(index)\n      return index !== e;\n    }); // console.log(ajendas)\n\n    setPersonName(ajendas);\n  }; // handle submit \n\n\n  var onSubmit = function onSubmit(data, e) {\n    // e.preventDefault()\n    console.log(data);\n  }; // console.log(props)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper auth-v1 px-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner py-2\",\n      children: [/*#__PURE__*/_jsxDEV(OtherAttendies, {\n        open: open,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"auth-login-form mt-2\",\n        onSubmit: handleSubmit(function (data, e) {\n          return onSubmit(data, e);\n        }),\n        onKeyPress: function onKeyPress(event) {\n          if (event.which === 13\n          /* Enter */\n          ) {\n              event.preventDefault();\n            }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"mb-1\",\n              style: {\n                display: \"flex\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: classes.titleColor,\n                  children: \"Meeting Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 14\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"button\",\n                  outline: true,\n                  onClick: function onClick() {\n                    return onStartMeeting();\n                  },\n                  children: \"Start Meeting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 11\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.TimeSpan,\n                  children: currentTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 12\n                }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"button\",\n                  outline: true,\n                  style: {\n                    margin: \"0px 0px 0px 3px\"\n                  },\n                  onClick: function onClick() {\n                    return EndTime();\n                  },\n                  children: \"End Meeting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 12\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 11\n            }, _this), /*#__PURE__*/_jsxDEV(Row, {\n              style: {\n                marginTop: \"25px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    children: \"Type of Meeting\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"select\",\n                    name: \"Location\",\n                    autoComplete: \"on\",\n                    className: classnames({\n                      'is-invalid': errors['Location']\n                    }) // onClick={() => props.history.push('/master_of_meeting/googlemap')}\n                    ,\n                    innerRef: register({\n                      required: true,\n                      validate: function validate(value) {\n                        return value !== '';\n                      }\n                    }),\n                    placeholder: \"Enter your Location\",\n                    autoFocus: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"DAILY MEETING\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 18\n                    }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"ADJECENT MEETING\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 18\n                    }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"KKS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 18\n                    }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"JW MEET\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 18\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 17\n                  }, _this), errors.Location && errors.Location.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"Location id is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 77\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 13\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 13\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    children: \"Meeting Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"select\",\n                    name: \"Meeting_type\",\n                    className: classnames({\n                      'is-invalid': errors['Meeting_type']\n                    }),\n                    onChange: function onChange(e) {\n                      return onSelect(e);\n                    },\n                    innerRef: register({\n                      required: true,\n                      validate: function validate(value) {\n                        return value !== '';\n                      }\n                    }),\n                    placeholder: \"Enter your Unit\",\n                    autoFocus: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      selected: true,\n                      children: \"Select\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 20\n                    }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Join Now\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 18\n                    }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Scheduled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 18\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 17\n                  }, _this), errors.Meeting_type && errors.Meeting_type.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"Meeting type  is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 85\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 13\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 15\n              }, _this), type === \"Join Now\" ? /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"exampleDate\",\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 11\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"date\",\n                    name: \"date\",\n                    id: \"exampleDate\",\n                    placeholder: \"date placeholder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 12\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 11\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 35\n              }, _this) : \" \", type === \"Scheduled\" ? /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"exampleDate\",\n                    children: \"From Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 11\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"date\",\n                    name: \"date\",\n                    id: \"exampleDate\",\n                    placeholder: \"date placeholder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 12\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 11\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 26\n              }, _this) : \"\", type === \"Scheduled\" ? /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"exampleDate\",\n                    children: \"To Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 11\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"date\",\n                    name: \"date\",\n                    id: \"exampleDate\",\n                    placeholder: \"date placeholder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 12\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 11\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 40\n              }, _this) : \"\", /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"exampleTime\",\n                    children: \"Start Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 9\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"time\",\n                    name: \"start_time\",\n                    id: \"exampleTime\",\n                    placeholder: \"time placeholder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 9\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 7\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 7\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"exampleTime\",\n                    children: \"End Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 9\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"time\",\n                    name: \"end_time\",\n                    id: \"exampleTime\",\n                    placeholder: \"time placeholder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 9\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 7\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 7\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    children: \"Select Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"select\",\n                    name: \"Unit\",\n                    className: classnames({\n                      'is-invalid': errors['Unit']\n                    }) // onClick={() => props.history.push('/master_of_meeting/googlemap')}\n                    ,\n                    innerRef: register({\n                      required: true,\n                      validate: function validate(value) {\n                        return value !== '';\n                      }\n                    }),\n                    placeholder: \"Enter your Unit\",\n                    autoFocus: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Neharu Park\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 18\n                    }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Nana peth\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 18\n                    }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Sadashiv peth\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 18\n                    }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Jm road\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 18\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 17\n                  }, _this), errors.Unit && errors.Unit.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"Unit  is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 69\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 13\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 13\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"form-label\",\n                    for: \"login-email\",\n                    children: \"Venue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    name: \"Venue\",\n                    className: classnames({\n                      'is-invalid': errors['Venue']\n                    }),\n                    innerRef: register({\n                      required: true,\n                      validate: function validate(value) {\n                        return value !== '';\n                      }\n                    }),\n                    placeholder: \"Enter your venue\",\n                    autoFocus: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 17\n                  }, _this), errors.Venue && errors.Venue.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"Venue id is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 68\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 13\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 13\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    children: \"Meeting called by\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"select\",\n                    id: \"Meeting_called_by\",\n                    name: \"Meeting_called_by\" //  onChange={e => setEmail(e.target.value)}\n                    ,\n                    className: classnames({\n                      'is-invalid': errors['Meeting_called_by']\n                    }),\n                    innerRef: register({\n                      required: true,\n                      validate: function validate(value) {\n                        return value !== '';\n                      }\n                    }),\n                    placeholder: \"Meeting call by\",\n                    autoFocus: true,\n                    children: /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Mr.Ramkrishnana chanchalwiraj\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 20\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 17\n                  }, _this), errors.Meeting_called_by && errors.Meeting_called_by.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"Meeting called is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 95\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 15\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      for: \"login-password\",\n                      children: \"Meeting Organized by\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 19\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"select\",\n                    id: \"Meeting_Organised_by\",\n                    name: \"Meeting_Organised_by\",\n                    className: classnames({\n                      'is-invalid': errors['Meeting_Organised_by']\n                    }),\n                    innerRef: register({\n                      required: true,\n                      pattern: {\n                        message: \"Enter your Meeting Organised by\"\n                      },\n                      validate: function validate(value) {\n                        return value !== '';\n                      }\n                    }),\n                    placeholder: \"Meeting Organized by  \",\n                    autoFocus: true,\n                    children: /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Mr.Ramkrishnana chanchalwiraj\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 21\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 17\n                  }, _this), errors.Meeting_Organised_by && errors.Meeting_Organised_by.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"Meeting Organized is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 101\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 15\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"exampleText\",\n                    children: \"Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 14\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, (_jsxDEV2 = {\n                    type: \"textarea\",\n                    innerRef: register({\n                      required: true,\n                      validate: function validate(value) {\n                        return value !== '';\n                      }\n                    }),\n                    name: \"text\"\n                  }, _defineProperty(_jsxDEV2, \"innerRef\", register({\n                    required: true,\n                    validate: function validate(value) {\n                      return value !== '';\n                    }\n                  })), _defineProperty(_jsxDEV2, \"id\", \"exampleSelect\"), _jsxDEV2), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 19\n                  }, _this), errors.text && errors.text.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"text called is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 67\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 15\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"exampleText\",\n                    children: \"Meeting Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 19\n                  }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"textarea\",\n                    innerRef: register({\n                      required: true,\n                      validate: function validate(value) {\n                        return value !== '';\n                      }\n                    }),\n                    name: \"text\",\n                    id: \"exampleText\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 18\n                  }, _this), errors.text && errors.text.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"text called is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 74\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 15\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 14\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 5,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    id: \"demo-mutiple-chip-label\",\n                    children: \"Attendees with in organization\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 18\n                  }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n                    name: \"attendies\",\n                    render: function render(_ref) {\n                      var field = _ref.field;\n                      return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, field), {}, {\n                        isMulti: true,\n                        innerRef: register({\n                          required: true,\n                          validate: function validate(value) {\n                            return value !== '';\n                          }\n                        }) // value={stuff}\n                        ,\n                        options: [{\n                          value: \"ms.rupa dixit\",\n                          label: \"ms.rupa dixit\"\n                        }, {\n                          value: \"ms.ragini sawant\",\n                          label: \"ms.ragini sawant\"\n                        }, {\n                          value: \"mr.Avinash\",\n                          label: \"mr.Avinash\"\n                        }],\n                        onChange: changeValue\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 568,\n                        columnNumber: 18\n                      }, _this);\n                    },\n                    control: control,\n                    defaultValue: []\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 18\n                  }, _this), errors.attendies && errors.attendies.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"attendies called is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 83\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 15\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    id: \"demo-mutiple-chip-label\",\n                    children: \"Attendees outside organization\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n                    name: \"other_attendies\",\n                    render: function render(_ref2) {\n                      var field = _ref2.field;\n                      return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, field), {}, {\n                        isMulti: true,\n                        innerRef: register({\n                          required: true,\n                          validate: function validate(value) {\n                            return value !== '';\n                          }\n                        }) // value={stuff}\n                        ,\n                        options: [{\n                          value: \"mr.tejpal\",\n                          label: \"mr.tejpal\"\n                        }, {\n                          value: \"mr.sadanand\",\n                          label: \"mr.sadanand\"\n                        }, {\n                          value: \"mr.ekrupa\",\n                          label: \"mr.ekrupa\"\n                        }],\n                        onChange: changeOtherAttendies\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 18\n                      }, _this);\n                    },\n                    control: control,\n                    defaultValue: [{\n                      value: \"mr.tejpal\",\n                      label: \"mr.tejpal\"\n                    }]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 17\n                  }, _this), errors.text && errors.text.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"Click on the add button to add your attendance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 66\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"28px\",\n                  position: \"relative\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleClickOpen,\n                  color: \"success\",\n                  children: \"Add Other Attendees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 15\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 13\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 1\n        }, _this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-0\",\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, (_jsxDEV3 = {\n              tag: \"h4\",\n              className: \"mb-1\"\n            }, _defineProperty(_jsxDEV3, \"className\", classes.titleColor), _defineProperty(_jsxDEV3, \"children\", /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: classes.titleColor,\n                children: \"Add MOM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 14\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 11\n            }, _this)), _jsxDEV3), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 11\n            }, _this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [addAjenda.map(function (agenda, index) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"javascript:;\",\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        className: \"fa fa-trash\",\n                        id: index,\n                        onClick: function onClick() {\n                          return handleRemoveAgenda(index);\n                        },\n                        style: {\n                          color: red[500],\n                          fontSize: \"20px\",\n                          float: \"right\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 639,\n                        columnNumber: 18\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 13\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 11\n                  }, _this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: 6,\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          children: \"Agenda / Point discussed\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 646,\n                          columnNumber: 12\n                        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"textarea\",\n                          value: agenda.label,\n                          innerRef: register({\n                            required: true,\n                            validate: function validate(value) {\n                              return value !== '';\n                            }\n                          }),\n                          name: \"text\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 647,\n                          columnNumber: 17\n                        }, _this), errors.text && errors.text.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \"text called is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 653,\n                          columnNumber: 70\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 645,\n                        columnNumber: 13\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 15\n                    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 6,\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          children: \"Action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 659,\n                          columnNumber: 12\n                        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"textarea\",\n                          innerRef: register({\n                            required: true,\n                            validate: function validate(value) {\n                              return value !== '';\n                            }\n                          }),\n                          name: \"action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 660,\n                          columnNumber: 17\n                        }, _this), errors.text && errors.text.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \"text called is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 665,\n                          columnNumber: 70\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 658,\n                        columnNumber: 13\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 15\n                    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 3,\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          children: \"Target Date\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 671,\n                          columnNumber: 17\n                        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"date\",\n                          id: \"code\",\n                          name: \"Target_year_start_date\",\n                          className: classnames({\n                            'is-invalid': errors['Target_year_start_date']\n                          }),\n                          innerRef: register({\n                            required: true,\n                            validate: function validate(value) {\n                              return value !== '';\n                            }\n                          }),\n                          autoFocus: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 674,\n                          columnNumber: 17\n                        }, _this), errors.Target_year_start_date && errors.Target_year_start_date.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \"Financial year end date is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 679,\n                          columnNumber: 102\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 670,\n                        columnNumber: 13\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 669,\n                      columnNumber: 15\n                    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 3,\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          children: \"Responsibility with in organization\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 686,\n                          columnNumber: 16\n                        }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n                          name: \"attendies\",\n                          render: function render(_ref3) {\n                            var field = _ref3.field;\n                            return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, field), {}, {\n                              isMulti: true // value={stuff}\n                              ,\n                              options: [{\n                                value: \"ms.rupa dixit\",\n                                label: \"ms.rupa dixit\"\n                              }, {\n                                value: \"ms.ragini sawant\",\n                                label: \"ms.ragini sawant\"\n                              }, {\n                                value: \"mr.Avinash\",\n                                label: \"mr.Avinash\"\n                              }, {\n                                value: \"All\",\n                                label: \"All\"\n                              }] //  onChange = {changeValue}\n                              ,\n                              defaultValue: []\n                            }), void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 690,\n                              columnNumber: 16\n                            }, _this);\n                          },\n                          control: control\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 687,\n                          columnNumber: 16\n                        }, _this), errors.attendies && errors.attendies.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \"attendies called is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 706,\n                          columnNumber: 81\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 685,\n                        columnNumber: 13\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 684,\n                      columnNumber: 15\n                    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 3,\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          children: \"Responsibility of outside organization\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 712,\n                          columnNumber: 16\n                        }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n                          name: \"other_responsibility\",\n                          render: function render(_ref4) {\n                            var field = _ref4.field;\n                            return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, field), {}, {\n                              isMulti: true // value={stuff}\n                              ,\n                              options: [{\n                                value: \"ms.rupa dixit\",\n                                label: \"ms.rupa dixit\"\n                              }, {\n                                value: \"ms.ragini sawant\",\n                                label: \"ms.ragini sawant\"\n                              }, {\n                                value: \"mr.Avinash\",\n                                label: \"mr.Avinash\"\n                              }, {\n                                value: \"All\",\n                                label: \"All\"\n                              }] //  onChange = {changeValue}\n                              ,\n                              defaultValue: []\n                            }), void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 716,\n                              columnNumber: 16\n                            }, _this);\n                          },\n                          control: control\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 713,\n                          columnNumber: 16\n                        }, _this), errors.other_responsibility && errors.other_responsibility.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \"other_responsibility is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 732,\n                          columnNumber: 103\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 711,\n                        columnNumber: 13\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 710,\n                      columnNumber: 11\n                    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 3,\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          children: \"Status\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 738,\n                          columnNumber: 12\n                        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"select\",\n                          innerRef: register({\n                            required: true,\n                            validate: function validate(value) {\n                              return value !== '';\n                            }\n                          }),\n                          name: \"Status\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            children: \"INFO. Schedule\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 744,\n                            columnNumber: 17\n                          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            children: \"Schedule\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 745,\n                            columnNumber: 17\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 739,\n                          columnNumber: 17\n                        }, _this), errors.text && errors.text.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \"text called is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 747,\n                          columnNumber: 70\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 737,\n                        columnNumber: 13\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 736,\n                      columnNumber: 11\n                    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 3,\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        check: true,\n                        inline: true,\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          type: \"checkbox\",\n                          style: {\n                            width: \"20px\",\n                            height: \"20px\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 752,\n                          columnNumber: 11\n                        }, _this), \" Assign as task\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 751,\n                        columnNumber: 15\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 750,\n                      columnNumber: 15\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 11\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: 12,\n                        children: /*#__PURE__*/_jsxDEV(Button.Ripple, {\n                          color: \"success\",\n                          onClick: handleAddAgenda,\n                          size: \"sm\",\n                          style: {\n                            color: green[500],\n                            float: \"right\",\n                            margin: \"5px\"\n                          },\n                          children: \"Add Agenda\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 766,\n                          columnNumber: 15\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 759,\n                        columnNumber: 15\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 758,\n                      columnNumber: 15\n                    }, _this), /*#__PURE__*/_jsxDEV(Divider, {\n                      style: {\n                        backgroundColor: \"#EC8A37\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 776,\n                      columnNumber: 15\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 757,\n                    columnNumber: 15\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 17\n                }, _this);\n              }), /*#__PURE__*/_jsxDEV(Col, {\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(Button.Ripple, {\n                  color: \"danger\",\n                  className: \"ripple-button\",\n                  type: \"submit\",\n                  size: \"sm\",\n                  style: {\n                    float: \"right\"\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 15\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 12\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 11\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 3\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 3\n  }, _this);\n};\n\n_s2(MinuteOfMeetings, \"ExJ3Cs2zr+09oaf1XrfiOk1OAhs=\", false, function () {\n  return [useStyles, useDispatch, useTheme, useForm];\n});\n\n_c2 = MinuteOfMeetings;\nexport default MinuteOfMeetings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OtherAttendies\");\n$RefreshReg$(_c2, \"MinuteOfMeetings\");","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/src/views/pages/mom/MOM.js"],"names":["React","useState","useContext","Fragment","useEffect","Col","Row","Card","CardBody","CardTitle","CardText","Form","FormGroup","UncontrolledTooltip","Label","Input","Tooltip","InputGroup","InputGroupAddon","ListGroup","ListGroupItem","InputGroupText","CustomInput","Button","moment","require","useForm","Controller","classnames","Modal","Backdrop","Fade","TextField","Dialog","useDispatch","handleMaster","handleMasterUpdate","axios","makeStyles","useTheme","useMediaQuery","uploadFile","IconButton","SearchIcon","InputAdornment","Select","makeAnimated","Divider","Icon","green","red","Paper","loginAuthID","sessionStorage","getItem","animatedComponents","useStyles","theme","root","width","padding","container","maxHeight","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","TimeSpan","fontWeight","lightingColor","chip","noLabel","marginTop","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","titleColor","color","Agenda","OtherAttendies","props","register","errors","reset","setValue","handleSubmit","classes","fullScreen","breakpoints","down","onSubmit","data","console","log","open","handleClose","timeout","required","validate","value","name","type","pattern","message","phone","mail","address","float","MinuteOfMeetings","ajendaz","setAjenda","setOpen","personName","setPersonName","Date","toLocaleTimeString","hour12","currentTime","setCurrentTime","stopTime","setStopTime","setType","dispatch","item","id","tooltipOpen","setTooltipOpen","defaultValues","preloadValue","detail","control","addAjenda","setAddAjenda","onSelect","e","target","toggle","handleAddAgenda","onStartMeeting","setInterval","EndTime","clearInterval","handleRemoveAgenda","I","splice","options","label","handleClickOpen","handleChange","ajenda","changeValue","selected","changeOtherAttendies","onDelete","ajendas","filter","index","event","which","preventDefault","textAlign","Location","Meeting_type","Unit","Venue","Meeting_called_by","Meeting_Organised_by","text","field","attendies","position","map","agenda","fontSize","Target_year_start_date","other_responsibility","height"],"mappings":"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","sourcesContent":["import {React, useState, useContext, Fragment, useEffect } from 'react'\r\nimport {Col, Row, Card, CardBody, CardTitle, CardText, Form, FormGroup, UncontrolledTooltip, Label, Input, Tooltip, InputGroup, InputGroupAddon, ListGroup, ListGroupItem, InputGroupText, CustomInput, Button } from 'reactstrap'\r\nconst moment = require('moment')\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport classnames from 'classnames'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport Backdrop from '@material-ui/core/Backdrop'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport { TextField } from '@material-ui/core'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleMaster, handleMasterUpdate } from '@store/actions/masteruser'\r\nimport axios from 'axios'\r\nimport '@styles/base/pages/page-auth.scss'\r\nimport { makeStyles, useTheme  } from '@material-ui/core/styles'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { uploadFile } from 'react-s3'\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n// import InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Select from 'react-select'\r\nimport makeAnimated from 'react-select/animated'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport { green, red } from '@material-ui/core/colors'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst loginAuthID = sessionStorage.getItem('id_token')\r\n\r\nconst animatedComponents = makeAnimated()\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    padding:10\r\n  },\r\n  container: {\r\n    maxHeight: 440\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  TimeSpan : {\r\n    fontWeight : 200,\r\n    padding:\"10px\",\r\n    lightingColor:\"#E62E2D\"\r\n  },\r\n  chip: {\r\n    margin: 2\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3)\r\n  },\r\n  titleColor :{\r\n    color: \"#d52528\"\r\n  }\r\n}))\r\n\r\nconst Agenda = [{}]\r\n\r\nconst OtherAttendies = (props) => {\r\n  const { register, errors, reset, setValue, handleSubmit } = useForm()\r\n  const theme = useTheme()\r\n  const classes = useStyles()\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n  const onSubmit = (data) => {\r\n    // e.preventDefault()\r\n    console.log(data)\r\n    }\r\n  return (\r\n       <Modal \r\n        fullScreen={fullScreen}\r\n        className={classes.modal}\r\n        open={props.open}\r\n        toggle={props.handleClose}\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 1000\r\n        }}\r\n      >\r\n        <div className={classes.paper}>\r\n          <h4>Other Attendees</h4>\r\n    <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n      <Row>\r\n       <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Name\r\n                </Label>\r\n                <Input type='text' \r\n                name=\"name\"\r\n                  className={classnames({ 'is-invalid': errors['name'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your name' autoFocus />\r\n                 {errors.name && errors.name.type === 'required' && <p style={{color:\"red\"}}>name is require</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Mobile Number\r\n                </Label>\r\n                <Input type='number'\r\n                name=\"phone\"\r\n                  className={classnames({ 'is-invalid': errors['phone'] })}\r\n                  innerRef={register({ required: true,\r\n                    pattern:{value:/[1-9]{1}[0-9]{9}/,\r\n                    message:\"please enter your 10 digit mobile number\"},\r\n                     validate: value => value !== '' })}\r\n                 placeholder='Enter your mobile  number' autoFocus />\r\n                 {errors.phone && errors.phone.type === 'required' && <p style={{color:\"red\"}}>phone is require</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Email\r\n                </Label>\r\n                <Input type='email' \r\n                name=\"mail\"\r\n                  className={classnames({ 'is-invalid': errors['mail'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your email' autoFocus />\r\n                 {errors.mail && errors.mail.type === 'required' && <p style={{color:\"red\"}}>mail is require</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Location\r\n                </Label>\r\n                <Input type='text' \r\n                name=\"address\"\r\n                  className={classnames({ 'is-invalid': errors['address'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your location' autoFocus />\r\n                 {errors.address && errors.address.type === 'required' && <p style={{color:\"red\"}}>location is require</p>}\r\n              </FormGroup>\r\n              </Col>\r\n\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Company name\r\n                </Label>\r\n                <Input type='text' \r\n                name=\"address\"\r\n                  className={classnames({ 'is-invalid': errors['address'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your company name' autoFocus />\r\n                 {errors.address && errors.address.type === 'required' && <p style={{color:\"red\"}}>Company name is require</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              </Row>\r\n\r\n  \r\n              <Button.Ripple color='secondary' onClick={props.handleClose} size=\"sm\" style={{float:\"right\", margin:\"6px\"}} >\r\n                Close\r\n              </Button.Ripple>\r\n\r\n               <Button.Ripple  className='ripple-button' type=\"submit\" size=\"sm\" style={{float:\"right\", margin:\"6px\"}} >\r\n                Save\r\n              </Button.Ripple>\r\n\r\n      </Form>\r\n      </div>\r\n      </Modal >\r\n  )\r\n}\r\n\r\nconst MinuteOfMeetings = (props) => {\r\n    // const { register, errors, reset, setValue, handleSubmit, control } = useForm()\r\n    const [ajendaz, setAjenda] = useState()\r\n    const [open, setOpen] = useState(false)\r\n    const [personName, setPersonName] = useState([])\r\n    const [currentTime, setCurrentTime] = useState(new Date().toLocaleTimeString('en-US', { hour12: false }))\r\n    const [stopTime, setStopTime] = useState()\r\n    const [type, setType] = useState()\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const theme = useTheme()\r\n    const { item, id } = props\r\n    const [tooltipOpen, setTooltipOpen] = useState(false)\r\n\r\n    const { register, errors, reset, setValue, handleSubmit, control } = useForm({defaultValues: props ? props && props.preloadValue && props.preloadValue.detail : \"\"})\r\n    const [addAjenda, setAddAjenda] = useState([...Agenda])\r\n    \r\n  console.log(currentTime)\r\n   \r\n  const onSelect = (e) => {\r\n    setType(e.target.value)\r\n}\r\n\r\n  const toggle = () => setTooltipOpen(!tooltipOpen)\r\n    const handleAddAgenda = () => {\r\n      console.log(Agenda, {})\r\n      setAddAjenda([...Agenda, {}])\r\n    }\r\n \r\n\r\nconst onStartMeeting = () => {\r\n  setStopTime(setInterval(() => setCurrentTime(new Date().toLocaleTimeString('en-US', { hour12: false })), 1000))\r\n}\r\n\r\nconst EndTime = () => {\r\nclearInterval(stopTime)\r\n}\r\n\r\n\r\n    const handleRemoveAgenda = (I) => {\r\n      // console.log(e.target.id)\r\n      // const removeAgenda = Agenda.filter((item, index) => {\r\n      //   console.log(Agenda, index)\r\n      //   return Agenda !== e.target.id\r\n      // })\r\n      const value = [...addAjenda]\r\n      value.splice(I, 1)\r\n      setAddAjenda(value)\r\n      // console.log(removeAgenda)\r\n      // setAddAjenda({Agenda : [Agenda.filter()]})\r\n    }\r\n// console.log(errors)\r\n\r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' }\r\n]\r\n\r\nconst handleClickOpen = () => {\r\n  setOpen(true)\r\n}\r\n\r\nconst handleClose = () => {\r\n  setOpen(false)\r\n}\r\n//entering a list on change\r\nconst handleChange = (e) => {\r\n  // console.log(e.target.value)\r\n  // if (e.key === 'Enter') {\r\n  \r\n  const ajenda = e.target.value\r\n    setAjenda(ajenda)\r\n    //  e.preventDefault()\r\n  // personName.push(ajenda)\r\n  // setValue(\"ajenda\", personName)\r\n  // setPersonName(personName)\r\n//   reset()\r\n// }\r\n}\r\n\r\n//add ajenda\r\n// const addAjenda = () => {\r\n//   personName.push(ajendaz)\r\n//   setValue(\"ajenda\", personName)\r\n//   // setPersonName('')\r\n//   reset({ajenda:[]})\r\n// }\r\n\r\n//multiselect attendies value\r\nconst changeValue = (selected) => {\r\n  // console.log(stuff)\r\n// console.log(selected)\r\nsetValue(\"attendies\", selected)\r\n}\r\n\r\n//multiselect other attendies\r\nconst changeOtherAttendies = (selected) => {\r\n  // console.log(stuff)\r\n// console.log(selected)\r\nsetValue(\"other_attendies\", selected)\r\n}\r\n\r\n//delete the list\r\nconst onDelete = (e) => {\r\n  const ajendas = personName.filter((item, index) => {\r\n    // console.log(index)\r\n    return index !== e\r\n  })\r\n  // console.log(ajendas)\r\n  setPersonName(ajendas)\r\n}\r\n\r\n\r\n// handle submit \r\n    const onSubmit = (data, e) => {   \r\n      // e.preventDefault()\r\n      console.log(data)\r\n\r\n      }\r\n\r\n\r\n    // console.log(props)\r\nreturn (\r\n  <div className='auth-wrapper auth-v1 px-2'>\r\n  <div className='auth-inner py-2'>\r\n      <OtherAttendies open={open} handleClose={handleClose}/>            \r\n          <Form className='auth-login-form mt-2'\r\n          onSubmit={handleSubmit((data, e) => onSubmit(data, e))}  \r\n          onKeyPress={event => {\r\n            if (event.which === 13 /* Enter */) {\r\n              event.preventDefault()\r\n            }\r\n          }}>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle className='mb-1' style={{display:\"flex\"}}>\r\n          <Col md={6}>\r\n             <h5 className={classes.titleColor}>Meeting Details</h5>\r\n          </Col> \r\n          <Col md={6} style={{textAlign:\"right\"}}>\r\n          <Button color=\"primary\" type= \"button\" outline onClick={() => onStartMeeting()}>\r\n                  Start Meeting\r\n           </Button>\r\n           <span className={classes.TimeSpan}>{currentTime}</span>\r\n           <Button color=\"primary\" type= \"button\" outline style={{margin:\"0px 0px 0px 3px\"}} onClick={() => EndTime()}>\r\n                  End Meeting\r\n           </Button>\r\n           </Col>\r\n          </CardTitle>\r\n            <Row  style={{marginTop:\"25px\"}}>\r\n            <Col md={3}>\r\n            <FormGroup>\r\n                <Label>\r\n                Type of Meeting               \r\n                </Label>\r\n                <Input type='select' \r\n                name=\"Location\"\r\n                autoComplete=\"on\"\r\n                  className={classnames({ 'is-invalid': errors['Location'] })}\r\n                  // onClick={() => props.history.push('/master_of_meeting/googlemap')}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your Location' autoFocus>\r\n                 <option>DAILY MEETING</option>\r\n                 <option>ADJECENT MEETING</option>\r\n                 <option>KKS</option>\r\n                 <option>JW MEET</option>\r\n                 </Input>\r\n                 {errors.Location && errors.Location.type === 'required' && <p style={{color:\"red\"}}>Location id is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Label>\r\n                Meeting Type               \r\n                </Label>\r\n                <Input type='select' \r\n                name=\"Meeting_type\"\r\n                  className={classnames({ 'is-invalid': errors['Meeting_type'] })}\r\n                  onChange ={(e) => onSelect(e)}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your Unit' autoFocus>\r\n                   <option selected >Select</option>\r\n                 <option >Join Now</option>\r\n                 <option>Scheduled</option>\r\n                 </Input>\r\n                 {errors.Meeting_type && errors.Meeting_type.type === 'required' && <p style={{color:\"red\"}}>Meeting type  is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n          { type === \"Join Now\" ? <Col md={2}>\r\n          <FormGroup>\r\n          <Label for=\"exampleDate\">Date</Label>\r\n           <Input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          id=\"exampleDate\"\r\n          placeholder=\"date placeholder\"\r\n           />\r\n           </FormGroup>\r\n            </Col>  : \" \"\r\n           }\r\n\r\n{ type === \"Scheduled\" ? <Col md={4}>\r\n          <FormGroup>\r\n          <Label for=\"exampleDate\">From Date</Label>\r\n           <Input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          id=\"exampleDate\"\r\n          placeholder=\"date placeholder\"\r\n           />\r\n           </FormGroup>\r\n            </Col> : \"\" }\r\n            \r\n            { type === \"Scheduled\" ?   <Col md={4}>\r\n          <FormGroup>\r\n          <Label for=\"exampleDate\">To Date</Label>\r\n           <Input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          id=\"exampleDate\"\r\n          placeholder=\"date placeholder\"\r\n           />\r\n           </FormGroup>\r\n            </Col> : \"\"\r\n           }\r\n      <Col md={2}>\r\n      <FormGroup>\r\n        <Label for=\"exampleTime\">Start Time</Label>\r\n        <Input\r\n          type=\"time\"\r\n          name=\"start_time\"\r\n          id=\"exampleTime\"\r\n          placeholder=\"time placeholder\"\r\n        />\r\n      </FormGroup>\r\n      </Col>\r\n      <Col md={2}>\r\n      <FormGroup>\r\n        <Label for=\"exampleTime\">End Time</Label>\r\n        <Input\r\n          type=\"time\"\r\n          name=\"end_time\"\r\n          id=\"exampleTime\"\r\n          placeholder=\"time placeholder\"\r\n        />\r\n      </FormGroup>\r\n      </Col>\r\n\r\n          {/* <Col md={3}>\r\n          <FormGroup>\r\n            <Controller\r\n            name=\"datetime\"\r\n          render={(props) => <TextField\r\n              ref={register({ required: true })}\r\n              {...props}\r\n              type=\"datetime-local\"\r\n              label=\"End Date/Time\"\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n            />\r\n          }\r\n          defaultValue={moment.utc(new Date()).format('YYYY-MM-DDThh:mm')}\r\n          control={control}\r\n        >\r\n        </Controller>\r\n           {errors.occurrenceTimestamp && errors.occurrenceTimestamp.type === 'required' && <p style={{color:\"red\"}}>End date date is require</p>}\r\n          </FormGroup>\r\n        </Col> */}\r\n            <Col md={3}>\r\n            <FormGroup>\r\n                <Label>\r\n                Select Unit               \r\n                </Label>\r\n                <Input type='select' \r\n                name=\"Unit\"\r\n                  className={classnames({ 'is-invalid': errors['Unit'] })}\r\n                  // onClick={() => props.history.push('/master_of_meeting/googlemap')}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your Unit' autoFocus>\r\n                 <option>Neharu Park</option>\r\n                 <option>Nana peth</option>\r\n                 <option>Sadashiv peth</option>\r\n                 <option>Jm road</option>\r\n                 </Input>\r\n                 {errors.Unit && errors.Unit.type === 'required' && <p style={{color:\"red\"}}>Unit  is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n            <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Venue\r\n                </Label>\r\n                <Input type='text' \r\n                name=\"Venue\"\r\n                  className={classnames({ 'is-invalid': errors['Venue'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your venue' autoFocus />\r\n              {errors.Venue && errors.Venue.type === 'required' && <p style={{color:\"red\"}}>Venue id is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n              <FormGroup>\r\n                <Label>\r\n                Meeting called by\r\n                </Label>\r\n                <Input\r\n                 type='select'\r\n                 id='Meeting_called_by'\r\n                 name='Meeting_called_by'\r\n                //  onChange={e => setEmail(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['Meeting_called_by'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                placeholder='Meeting call by'\r\n                 autoFocus >\r\n                   <option>Mr.Ramkrishnana chanchalwiraj</option>\r\n                   </Input>\r\n                 {errors.Meeting_called_by && errors.Meeting_called_by.type === 'required' && <p style={{color:\"red\"}}>Meeting called is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n              <FormGroup>\r\n                <div>\r\n                  <Label className='form-label' for='login-password'>\r\n                  Meeting Organized by\r\n                  </Label>\r\n                </div>\r\n                <Input type='select'\r\n                 id='Meeting_Organised_by'\r\n                 name=\"Meeting_Organised_by\"\r\n                 className={classnames({ 'is-invalid': errors['Meeting_Organised_by'] })}\r\n                 innerRef={register({ \r\n                  required: true,\r\n                  pattern:{\r\n                  message:\"Enter your Meeting Organised by\"},\r\n                   validate: value => value !== '' })}\r\n                 placeholder='Meeting Organized by  ' autoFocus >\r\n                    <option>Mr.Ramkrishnana chanchalwiraj</option>\r\n                   </Input>\r\n                 {errors.Meeting_Organised_by && errors.Meeting_Organised_by.type === 'required' && <p style={{color:\"red\"}}>Meeting Organized is required</p>}\r\n                {/* <InputPasswordToggle className='input-group-merge' id='login-password' /> */}\r\n              </FormGroup>\r\n              </Col>\r\n\r\n              <Col md={6}>\r\n              <FormGroup>\r\n             <Label for=\"exampleText\" >Subject</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    innerRef={register({ required: true, validate: value => value !== '' })}\r\n                     name=\"text\"\r\n             innerRef={register({ required: true, validate: value => value !== '' })}\r\n               id=\"exampleSelect\"/>\r\n               {errors.text && errors.text.type === 'required' && <p style={{color:\"red\"}}>text called is required</p>}\r\n             </FormGroup>\r\n                </Col>\r\n\r\n             <Col md={6}>\r\n              <FormGroup>\r\n                  <Label for=\"exampleText\" >Meeting Details</Label>\r\n                 <Input\r\n                  type=\"textarea\"\r\n                    innerRef={register({ required: true, validate: value => value !== '' })}\r\n                     name=\"text\"\r\n                      id=\"exampleText\" />\r\n                      {errors.text && errors.text.type === 'required' && <p style={{color:\"red\"}}>text called is required</p>}\r\n               </FormGroup>\r\n             </Col>\r\n\r\n              <Col md={5}>\r\n              <FormGroup>\r\n                 <Label id=\"demo-mutiple-chip-label\">Attendees with in organization</Label>\r\n                 <Controller\r\n                   name=\"attendies\"\r\n                       render={({ field }) => (\r\n                 <Select\r\n                       {...field}\r\n                        isMulti\r\n                        innerRef={register({ required: true, validate: value => value !== '' })}\r\n                    // value={stuff}\r\n                    options={[\r\n                        { value: \"ms.rupa dixit\", label: \"ms.rupa dixit\" },\r\n                        { value: \"ms.ragini sawant\", label: \"ms.ragini sawant\" },\r\n                        { value: \"mr.Avinash\", label: \"mr.Avinash\" }\r\n                             ]}\r\n                     onChange = {changeValue}\r\n                 />\r\n                  )}\r\n                  control={control}\r\n                  defaultValue={[]}\r\n                />\r\n                     {errors.attendies && errors.attendies.type === 'required' && <p style={{color:\"red\"}}>attendies called is required</p>}\r\n              </FormGroup>\r\n            </Col>\r\n                <Col md={4}>\r\n                      <FormGroup>\r\n                <Label  id=\"demo-mutiple-chip-label\">Attendees outside organization</Label>\r\n                {/* <InputGroup> */}\r\n                <Controller\r\n                   name=\"other_attendies\"\r\n                       render={({ field }) => (\r\n                 <Select\r\n                       {...field}\r\n                        isMulti\r\n                        innerRef={register({ required: true, validate: value => value !== '' })}\r\n                    // value={stuff}\r\n                    options={[\r\n                        { value: \"mr.tejpal\", label: \"mr.tejpal\" },\r\n                        { value: \"mr.sadanand\", label: \"mr.sadanand\" },\r\n                        { value: \"mr.ekrupa\", label: \"mr.ekrupa\" }\r\n                             ]}\r\n                     onChange = {changeOtherAttendies}\r\n                    \r\n                 />\r\n                  )}\r\n                  control={control}\r\n                  defaultValue={[{ value: \"mr.tejpal\", label: \"mr.tejpal\" }]}\r\n                />\r\n                \r\n              {/* </InputGroup> */}\r\n              {errors.text && errors.text.type === 'required' && <p style={{color:\"red\"}}>Click on the add button to add your attendance</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <div style={{marginTop:\"28px\", position:\"relative\"}}>\r\n              <Button onClick={handleClickOpen} color=\"success\" >Add Other Attendees</Button>\r\n              </div>\r\n</Row>\r\n</CardBody>\r\n</Card>\r\n<div style={{marginTop:\"5px\"}}>\r\n\r\n</div>\r\n      <Card className='mb-0'>\r\n        <CardBody>\r\n          <CardTitle tag='h4' className='mb-1' className={classes.titleColor}>\r\n          <Col md={6}>\r\n             <h5 className={classes.titleColor}>Add MOM</h5>\r\n          </Col> \r\n          </CardTitle>\r\n          <Row>\r\n              \r\n             {addAjenda.map((agenda, index) => {\r\n               return (\r\n                <div>\r\n          <Col md={12}>\r\n            <a href=\"javascript:;\">\r\n                 <Icon className=\"fa fa-trash\" id={index} onClick={() => handleRemoveAgenda(index)}  style={{ color: red[500], fontSize:\"20px\", float:\"right\" }}/>\r\n            </a>\r\n          </Col>\r\n\r\n          <Row>\r\n              <Col md={6}>\r\n            <FormGroup>\r\n           <Label>Agenda / Point discussed</Label>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  value={agenda.label}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                   name=\"text\"\r\n              />\r\n                  {errors.text && errors.text.type === 'required' && <p style={{color:\"red\"}}>text called is required</p>}\r\n           </FormGroup>\r\n              </Col>\r\n\r\n              <Col md={6}>\r\n            <FormGroup>\r\n           <Label>Action</Label>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                   name=\"action\"\r\n              />\r\n                  {errors.text && errors.text.type === 'required' && <p style={{color:\"red\"}}>text called is required</p>}\r\n           </FormGroup>\r\n              </Col>\r\n\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Label>\r\n                Target Date\r\n                </Label>\r\n                <Input type='date' id='code'\r\n                name=\"Target_year_start_date\"\r\n                  className={classnames({ 'is-invalid': errors['Target_year_start_date'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  autoFocus />\r\n              {errors.Target_year_start_date && errors.Target_year_start_date.type === 'required' && <p style={{color:\"red\"}}>Financial year end date is required</p>}\r\n\r\n              </FormGroup>\r\n              </Col>\r\n\r\n              <Col md={3}>\r\n            <FormGroup>\r\n               <Label >Responsibility with in organization</Label>\r\n               <Controller\r\n                 name=\"attendies\"\r\n                     render={({ field }) => (\r\n               <Select\r\n                     {...field}\r\n                      isMulti\r\n                  // value={stuff}\r\n                  options={[\r\n                      { value: \"ms.rupa dixit\", label: \"ms.rupa dixit\" },\r\n                      { value: \"ms.ragini sawant\", label: \"ms.ragini sawant\" },\r\n                      { value: \"mr.Avinash\", label: \"mr.Avinash\" },\r\n                      {value: \"All\", label:\"All\"} \r\n                           ]}\r\n                  //  onChange = {changeValue}\r\n                   defaultValue={[]}\r\n               />\r\n                )}\r\n                control={control}\r\n              />\r\n                   {errors.attendies && errors.attendies.type === 'required' && <p style={{color:\"red\"}}>attendies called is required</p>}\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col md={3}>\r\n            <FormGroup>\r\n               <Label >Responsibility of outside organization</Label>\r\n               <Controller\r\n                 name=\"other_responsibility\"\r\n                     render={({ field }) => (\r\n               <Select\r\n                     {...field}\r\n                      isMulti\r\n                  // value={stuff}\r\n                  options={[\r\n                      { value: \"ms.rupa dixit\", label: \"ms.rupa dixit\" },\r\n                      { value: \"ms.ragini sawant\", label: \"ms.ragini sawant\" },\r\n                      { value: \"mr.Avinash\", label: \"mr.Avinash\" },\r\n                      {value: \"All\", label:\"All\"} \r\n                           ]}\r\n                  //  onChange = {changeValue}\r\n                   defaultValue={[]}\r\n               />\r\n                )}\r\n                control={control}\r\n              />\r\n                   {errors.other_responsibility && errors.other_responsibility.type === 'required' && <p style={{color:\"red\"}}>other_responsibility is required</p>}\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col md={3}>\r\n            <FormGroup>\r\n           <Label>Status</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                   name=\"Status\"\r\n              >\r\n                <option>INFO. Schedule</option>\r\n                <option>Schedule</option>\r\n              </Input>\r\n                  {errors.text && errors.text.type === 'required' && <p style={{color:\"red\"}}>text called is required</p>}\r\n           </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n              <FormGroup check inline >\r\n          <Input type=\"checkbox\"  style={{width:\"20px\", height:\"20px\"}} /> Assign as task\r\n          </FormGroup>\r\n              </Col>\r\n\r\n              </Row>\r\n              <div> \r\n              <Row>\r\n              <Col md={12}>\r\n              {/* <Button color=\"primary\" type= \"button\" outline>\r\n                  Start Meeting\r\n           </Button>\r\n           <Button color=\"primary\" type= \"button\" outline style={{margin:\"0px 0px 0px 3px\"}}>\r\n                  End Meeting\r\n           </Button> */}\r\n              <Button.Ripple color=\"success\"\r\n              onClick={handleAddAgenda}\r\n              size=\"sm\"\r\n               style={{ color: green[500], float:\"right\", margin:\"5px\" }}\r\n              >\r\n                Add Agenda\r\n              </Button.Ripple>  \r\n                 {/* <Icon className=\"fa fa-plus-circle\" onClick={handleAddAgenda}  style={{ color: green[500], fontSize:\"35px\", float:\"right\" }}/> */}\r\n            </Col>\r\n            </Row>\r\n              <Divider style={{backgroundColor:\"#EC8A37\"}}/>\r\n              </div>\r\n                </div>\r\n               )\r\n             })} \r\n\r\n           <Col md={12}>\r\n            {/* <Button color=\"primary\" type= \"button\" outline onClick={() => onStartMeeting()}>\r\n                  Start Meeting\r\n           </Button>\r\n           <span className={classes.TimeSpan}>{currentTime}</span>\r\n           <Button color=\"primary\" type= \"button\" outline style={{margin:\"0px 0px 0px 3px\"}} onClick={() => EndTime()}>\r\n                  End Meeting\r\n           </Button> */}\r\n              {/* <Button.Ripple color=\"success\" className='ripple-button' \r\n              onClick={handleAddAgenda} \r\n              size=\"sm\"\r\n               style={{ color: green[500], float:\"right\" }}\r\n              >\r\n                Add Agenda\r\n              </Button.Ripple>   */}\r\n              <Button.Ripple color='danger' className='ripple-button' type=\"submit\" size=\"sm\" style={{float:\"right\"}} >\r\n                Submit\r\n              </Button.Ripple>  \r\n            </Col>\r\n            </Row>\r\n            </CardBody>\r\n          </Card>\r\n     \r\n            </Form>\r\n            </div>\r\n  </div>\r\n)\r\n}\r\n\r\nexport default MinuteOfMeetings"]},"metadata":{},"sourceType":"module"}