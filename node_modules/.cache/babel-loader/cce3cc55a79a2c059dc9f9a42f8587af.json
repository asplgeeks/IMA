{"ast":null,"code":"import axios from 'axios';\nimport axiosConfig from './../../../../../axiosConfig'; // localStorage.setItem('token', r.data.token)\n\nvar User_id = localStorage.getItem('user_id'); // ** Get tread list \n\nexport var gettreads = function gettreads(searchDetail) {\n  return function (dispatch) {\n    return axiosConfig.post('/admin/getThreadUnreadCount', {\n      userid: \"40\",\n      status: \"\",\n      page_no: 0,\n      page_limit: 10,\n      sort_by: \"status\",\n      search_by: searchDetail,\n      thread_categoryid: \"1\"\n    }).then(function (res) {\n      dispatch({\n        type: 'GET_TREAD',\n        data: res.data\n      });\n    });\n  };\n}; // add new tread\n\nexport var addNewtreads = function addNewtreads(formValue, props) {\n  return function (dispatch) {\n    return axiosConfig.post('/admin/addThread', {\n      userid: \"40\",\n      threadcategory_id: \"1\",\n      admin_note: \"note\",\n      display_name: formValue.title,\n      display_desc: formValue.thread,\n      moderator_ids: \"40\"\n    }, {\n      headers: {\n        Authorization: Token\n      }\n    }).then(function (res) {\n      console.log(res);\n      axiosConfig.post('/admin/addThread', {\n        threadid: res.data.data[0].thread_id,\n        selection_type: \"0\",\n        selected_ids: \"40\"\n      }, {\n        headers: {\n          Authorization: Token\n        }\n      }).then(function (r) {\n        return console.log(r);\n      });\n      props.setSentPop(true);\n      props.toggleModal();\n    });\n  };\n}; // ** GET Mails\n\nexport var getTopics = function getTopics(params) {\n  console.log(params);\n  return function (dispatch) {\n    return axiosConfig.post('/admin/getCommentIdList', {\n      thread_id: params.folder.thread_id,\n      comment_id: \"\"\n    }, {\n      headers: {\n        Authorization: Token\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'GET_MAILS',\n        data: res.data,\n        params: params\n      });\n    });\n  };\n}; // ** SELECT Current Mail\n\nexport var selectCurrentMail = function selectCurrentMail(id) {\n  return function (dispatch) {\n    return axiosConfig.post('/admin/getCommentDetails', {\n      id: id\n    }, {\n      headers: {\n        Authorization: Token\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'SELECT_CURRENT_MAIL',\n        mail: res.data\n      });\n    });\n  };\n}; // add comment and subComment \n\nexport var addCommentSubComment = function addCommentSubComment(title, images, detail, props) {\n  console.log(props);\n  return function (dispatch) {\n    return axiosConfig.post('/admin/addUpdateThreadComment', {\n      // comment_id:detail.topic_id,\n      thread_id: detail.thread_id,\n      comment: title.comment,\n      userid: User_id,\n      parent_id: detail.parent_id,\n      files: JSON.stringify(images)\n    }).then(function (res) {\n      if (res.data.success === 1) {\n        console.log(res);\n        props.setOpenMail(false);\n        props.resetSelectedMail();\n      } else {\n        console.log(res);\n      }\n    });\n  };\n}; // add comment and subComment \n\nexport var addTopic = function addTopic(comment_data, images, detail, props) {\n  console.log(\"details\", detail);\n  console.log(\"props\", props);\n  return function (dispatch) {\n    return axiosConfig.post('/admin/addUpdateThreadComment', {\n      thread_id: detail.thread_id,\n      comment: comment_data,\n      userid: detail.userid,\n      parent_id: 0,\n      comment_id: 0,\n      files: JSON.stringify(images)\n    }).then(function (res) {\n      if (res.data.success === 1) {\n        console.log(res); // props.setOpenMail(false)\n        // props.resetSelectedMail()\n      } else {\n        console.log(res);\n      }\n    });\n  };\n}; // ** UPDATE Mails\n\nexport var updateMails = function updateMails(emailIds, dataToUpdate) {\n  return function (dispatch, getState) {\n    return axios.post('/apps/email/update-emails', {\n      emailIds: emailIds,\n      dataToUpdate: dataToUpdate\n    }).then(function (res) {\n      dispatch({\n        type: 'UPDATE_MAILS',\n        emailIds: emailIds,\n        dataToUpdate: dataToUpdate,\n        data: res.data\n      });\n      dispatch(getTopics(getState().email.params));\n    });\n  };\n}; // ** Update Mail Label\n\nexport var updateMailLabel = function updateMailLabel(emailIds, label) {\n  return function (dispatch, getState) {\n    return axios.post('/apps/email/update-emails-label', {\n      emailIds: emailIds,\n      label: label\n    }).then(function (res) {\n      dispatch({\n        type: 'UPDATE_MAIL_LABEL',\n        data: res.data\n      });\n      dispatch(getTopics(getState().email.params));\n    });\n  };\n}; // ** GET Next/Prev mail\n\nexport var paginateMail = function paginateMail(dir, emailId) {\n  return function (dispatch) {\n    return axios.get('/apps/email/paginate-email', {\n      params: {\n        dir: dir,\n        emailId: emailId\n      }\n    }).then(function (res) {\n      dispatch({\n        type: 'PAGINATE_MAIL',\n        data: res.data\n      });\n    });\n  };\n}; // ** SELECT Mail\n\nexport var selectMail = function selectMail(id) {\n  return function (dispatch) {\n    return dispatch({\n      type: 'SELECT_MAIL',\n      id: id\n    });\n  };\n}; // ** SELECT All Mails\n\nexport var selectAllMail = function selectAllMail(val) {\n  return function (dispatch) {\n    return dispatch({\n      type: 'SELECT_ALL_MAIL',\n      val: val\n    });\n  };\n}; // ** RESET Selected Mails\n\nexport var resetSelectedMail = function resetSelectedMail() {\n  return function (dispatch) {\n    return dispatch({\n      type: 'RESET_SELECT_MAILS'\n    });\n  };\n};","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/apps/email/store/actions/index.js"],"names":["axios","axiosConfig","User_id","localStorage","getItem","gettreads","searchDetail","dispatch","post","userid","status","page_no","page_limit","sort_by","search_by","thread_categoryid","then","res","type","data","addNewtreads","formValue","props","threadcategory_id","admin_note","display_name","title","display_desc","thread","moderator_ids","headers","Authorization","Token","console","log","threadid","thread_id","selection_type","selected_ids","r","setSentPop","toggleModal","getTopics","params","folder","comment_id","selectCurrentMail","id","mail","addCommentSubComment","images","detail","comment","parent_id","files","JSON","stringify","success","setOpenMail","resetSelectedMail","addTopic","comment_data","updateMails","emailIds","dataToUpdate","getState","email","updateMailLabel","label","paginateMail","dir","emailId","get","selectMail","selectAllMail","val"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport axiosConfig from './../../../../../axiosConfig'\r\n// localStorage.setItem('token', r.data.token)\r\n\r\nconst User_id = localStorage.getItem('user_id')\r\n// ** Get tread list \r\nexport const gettreads = (searchDetail) => {\r\n  return dispatch => {\r\n    return axiosConfig.post('/admin/getThreadUnreadCount', {\r\n      userid:\"40\",\r\n      status:\"\",\r\n      page_no:0,\r\n      page_limit:10,\r\n      sort_by:\"status\",\r\n      search_by:searchDetail,\r\n      thread_categoryid:\"1\"\r\n  }).then(res => {\r\n      dispatch({ type: 'GET_TREAD', data: res.data })\r\n    })\r\n  }\r\n}\r\n\r\n// add new tread\r\nexport const addNewtreads = (formValue, props) => {\r\n  return dispatch => {\r\n    return axiosConfig.post('/admin/addThread', {\r\n      userid:\"40\",\r\n      threadcategory_id:\"1\",\r\n      admin_note:\"note\",\r\n      display_name:formValue.title,\r\n      display_desc:formValue.thread,\r\n      moderator_ids:\"40\"\r\n  }, \r\n  {\r\n  headers: {\r\n    Authorization: Token\r\n  }}).then(res => {\r\n      console.log(res)\r\n      axiosConfig.post('/admin/addThread', {\r\n    threadid:res.data.data[0].thread_id,\r\n    selection_type:\"0\",\r\n    selected_ids:\"40\"\r\n    }, \r\n    {\r\n    headers: {\r\n      Authorization: Token\r\n    }}).then(r => console.log(r))\r\n      props.setSentPop(true)\r\n      props.toggleModal()\r\n    })\r\n  }\r\n}\r\n\r\n// ** GET Mails\r\nexport const getTopics = (params) => {\r\n  console.log(params)\r\n  return dispatch => {\r\n    return axiosConfig.post('/admin/getCommentIdList', {\r\n      thread_id:params.folder.thread_id,\r\n      comment_id:\"\"\r\n  }, \r\n  {\r\n  headers: {\r\n    Authorization: Token\r\n  }}).then(res => {\r\n      console.log(res)\r\n      dispatch({ type: 'GET_MAILS', data: res.data, params })\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// ** SELECT Current Mail\r\nexport const selectCurrentMail = id => dispatch => {\r\n  return axiosConfig.post('/admin/getCommentDetails', { id }, {\r\n    headers: {\r\n      Authorization: Token\r\n    }}).then(res => {\r\n    console.log(res)\r\n    dispatch({ type: 'SELECT_CURRENT_MAIL', mail: res.data })\r\n  })\r\n}\r\n\r\n// add comment and subComment \r\nexport const addCommentSubComment = (title, images, detail, props) => {\r\n  console.log(props)\r\n  return dispatch => {\r\n    return axiosConfig.post('/admin/addUpdateThreadComment', {\r\n      // comment_id:detail.topic_id,\r\n      thread_id:detail.thread_id,\r\n      comment:title.comment,\r\n      userid:User_id,\r\n      parent_id:detail.parent_id,\r\n      files:JSON.stringify(images)\r\n  }).then(res => {\r\n    if (res.data.success === 1) {\r\n    console.log(res)\r\n    props.setOpenMail(false)\r\n    props.resetSelectedMail()\r\n  } else {\r\n    console.log(res)\r\n  }\r\n    })\r\n  }\r\n}\r\n\r\n// add comment and subComment \r\nexport const addTopic = (comment_data, images, detail, props) => {\r\n  console.log(\"details\", detail)\r\n  console.log(\"props\", props)\r\n  return dispatch => {\r\n    return axiosConfig.post('/admin/addUpdateThreadComment', {\r\n      thread_id:detail.thread_id,\r\n      comment:comment_data,\r\n      userid:detail.userid,\r\n      parent_id:0,\r\n      comment_id:0,\r\n      files:JSON.stringify(images)\r\n  }).then(res => {\r\n    if (res.data.success === 1) {\r\n    console.log(res)\r\n    // props.setOpenMail(false)\r\n    // props.resetSelectedMail()\r\n  } else {\r\n    console.log(res)\r\n  }\r\n    })\r\n  }\r\n}\r\n\r\n// ** UPDATE Mails\r\nexport const updateMails = (emailIds, dataToUpdate) => {\r\n  return (dispatch, getState) => {\r\n    return axios.post('/apps/email/update-emails', { emailIds, dataToUpdate }).then(res => {\r\n      dispatch({ type: 'UPDATE_MAILS', emailIds, dataToUpdate, data: res.data })\r\n      dispatch(getTopics(getState().email.params))\r\n    })\r\n  }\r\n}\r\n\r\n// ** Update Mail Label\r\nexport const updateMailLabel = (emailIds, label) => {\r\n  return (dispatch, getState) => {\r\n    return axios.post('/apps/email/update-emails-label', { emailIds, label }).then(res => {\r\n      dispatch({ type: 'UPDATE_MAIL_LABEL', data: res.data })\r\n      dispatch(getTopics(getState().email.params))\r\n    })\r\n  }\r\n}\r\n\r\n// ** GET Next/Prev mail\r\nexport const paginateMail = (dir, emailId) => {\r\n  return dispatch => {\r\n    return axios.get('/apps/email/paginate-email', { params: { dir, emailId } }).then(res => {\r\n      dispatch({ type: 'PAGINATE_MAIL', data: res.data })\r\n    })\r\n  }\r\n}\r\n\r\n// ** SELECT Mail\r\nexport const selectMail = id => dispatch => dispatch({ type: 'SELECT_MAIL', id })\r\n\r\n// ** SELECT All Mails\r\nexport const selectAllMail = val => dispatch => dispatch({ type: 'SELECT_ALL_MAIL', val })\r\n\r\n// ** RESET Selected Mails\r\nexport const resetSelectedMail = () => dispatch => dispatch({ type: 'RESET_SELECT_MAILS' })\r\n"]},"metadata":{},"sourceType":"module"}