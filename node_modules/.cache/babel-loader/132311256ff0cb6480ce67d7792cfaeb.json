{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\views\\\\apps\\\\email\\\\Mails.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// // ** React Imports\n// import { Fragment, useState } from 'react'\n// // ** Mail Components Imports\n// import MailCard from './MailCard'\n// import MailDetails from './MailDetails'\n// import ComposePopUp from './ComposePopup'\n// import * as Icon from 'react-feather'\n// // ** Utils\n// import { formatDateToMonthShort } from '@utils'\n// import InputAdornment from \"@material-ui/core/InputAdornment\"\n// import TextField from \"@material-ui/core/TextField\"\n// import SearchIcon from \"@material-ui/icons/Search\"\n// // import PlusIcon from \"@material-ui/icons/Plus\"\n// import { IconButton } from \"@material-ui/core\"\n// import CancelRoundedIcon from \"@material-ui/icons/CancelRounded\"\n// // ** Third Party Components\n// import PerfectScrollbar from 'react-perfect-scrollbar'\n// import {\n//   InputGroup,\n//   InputGroupAddon,\n//   Input,\n//   InputGroupText,\n//   CustomInput,\n//   DropdownMenu,\n//   DropdownItem,\n//   DropdownToggle,\n//   UncontrolledDropdown,\n//   Row,\n//   Col\n// } from 'reactstrap'\n// import { Menu, ArrowLeftCircle, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\n// import Search from \"../../../Images/Search.svg\"\n// import Refresh from \"../../../Images/refresh.svg\"\n// import Back_arrow from \"../../../Images/backarrow.svg\"\n// import Plus from \"../../../Images/add.svg\"\n// import Delete from \"../../../Images/delete.svg\"\n// const Mails = props => {\n//   // ** Props\n//   const {\n//     query,\n//     store,\n//     setQuery,\n//     dispatch,\n//     selectMail,\n//     composeOpen,\n//     updateMails,\n//     paginateMail,\n//     selectAllMail,\n//     toggleCompose,\n//     setSidebarOpen,\n//     updateMailLabel,\n//     resetSelectedMail,\n//     selectCurrentMail\n//   } = props\n//   const { mails, selectedMails, params, currentMail } = store\n// console.log(params)\n//   // ** States\n//   const [openMail, setOpenMail] = useState(false)\n//   const [search, setSearchVisible] = useState(false)\n//   const [threadDetails, setThreadDetails] = useState(mails)\n//   const [searchField, setSearchField] = useState(\"\")\n//   const filteredPersons = mails && mails.data && mails.data.filter(\n//     person => {\n//       return (\n//         person\n//         .commentor_designation\n//         .toLowerCase()\n//         .includes(searchField.toLowerCase())\n//       )\n//     }\n//   )\n//   // console.log(\"searchable items\", filteredPersons)\n//   // ** Variables\n//   const labelColors = {\n//     personal: 'success',\n//     company: 'primary',\n//     important: 'warning',\n//     private: 'danger'\n//   }\n//   // ** Handles Update Functions\n//   const handleMailClick = id => {\n//     console.log(id)\n//     dispatch(selectCurrentMail(id))\n//     setOpenMail(true)\n//   }\n//   /*eslint-disable */\n//   // ** Handles Folder Update\n//   const handleFolderUpdate = (e, folder, ids = selectedMails) => {\n//     e.preventDefault()\n//     dispatch(updateMails(ids, { folder }))\n//     dispatch(resetSelectedMail())\n//   }\n//   // ** Handles Label Update\n//   const handleLabelsUpdate = (e, label, ids = selectedMails) => {\n//     e.preventDefault()\n//     dispatch(updateMailLabel(ids, label))\n//     dispatch(resetSelectedMail())\n//   }\n//   // ** Handles Mail Read Update\n//   const handleMailReadUpdate = (arr, bool) => {\n//     // dispatch(updateMails(arr, { isRead: bool })).then(() => dispatch(resetSelectedMail()))\n//     dispatch(selectAllMail(false))\n//   }\n//   // ** Handles Move to Trash\n//   const handleMailToTrash = ids => {\n//     dispatch(updateMails(ids, { folder: 'trash' }))\n//     dispatch(resetSelectedMail())\n//   }\n//   /*eslint-enable */\n//   // ** Renders Mail\n//   const renderMails = () => {\n//     // if (mails && mails.length) {\n//       console.log(mails)\n//       return filteredPersons.map((mail, index) => {\n//         console.log(mail)\n//         return (\n//           <MailCard\n//             mail={mail}\n//             key={index}\n//             dispatch={dispatch}\n//             selectMail={selectMail}\n//             updateMails={updateMails}\n//             labelColors={labelColors}\n//             selectedMails={selectedMails}\n//             handleMailClick={handleMailClick}\n//             handleMailReadUpdate={handleMailReadUpdate}\n//             formatDateToMonthShort={formatDateToMonthShort}\n//           />\n//         )\n//       })\n//     // }\n//   }\n//   return (\n//     <Fragment>\n//      <Row>\n//        <Col xs='12' sm='12' lg='12' xl={openMail === true ? '6' : '12'}>\n//       <div className='email-app-list'>\n//         <div className='app-fixed-search d-flex align-items-center topic_navbar'>\n//           <div className='sidebar-toggle d-block d-lg-none ml-1' onClick={() => setSidebarOpen(true)}>\n//            <span  style={{padding: \"4px 1px\"}}  ><img className='back_arrow' src={Back_arrow}  /> </span>\n//           </div>\n//           <div className='align-content-center menu justify-content-between w-100 details_navbar'>\n//           <span className='title'> TOPIC </span> \n//           { search === false ? <span className='broadcom_align float-right'>\n//           <div className='sidebar_search'>\n//           {/* <span className='align-middle dropdown_icon mr20'   ><Icon.RotateCw  style={{padding:\"4px\"}} /> </span>\n//           <span className='align-middle dropdown_icon mr20'  ><Icon.Plus /> </span>\n//           <span className='align-middle dropdown_icon '   onClick={() => [setSearchVisible(!search)] }>  <SearchIcon /> </span> */}\n//           <span className='align-middle  mr20'   ><img className='img' src={Refresh}  /></span>\n//           <span className='align-middle  mr20'  ><img className='img' src={Plus}  /> </span>\n//           <span className='align-middle ' onClick={() => [setSearchVisible(!search)] }> <img className='img' src={Search}  /> </span>\n//           </div>\n//           </span> : <TextField\n//           placeholder=\"Search\"\n//           type=\"text\"\n//           variant=\"outlined\"\n//           fullWidth\n//           size=\"small\"\n//           onChange={(e) => setSearchField(e.target.value)}\n//           value={searchField}\n//           InputProps={{\n//                   startAdornment: (\n//                     <InputAdornment position=\"start\">\n//                       <SearchIcon />\n//                     </InputAdornment>\n//                   ),\n//                   endAdornment:(\n//                   <IconButton\n//                     className='delete_btn'\n//                     aria-label=\"toggle password visibility\"\n//                     onClick={() => [setSearchVisible(!search), setSearchField(\"\")] }\n//                   >\n//                    <img img className='img' src={Delete} />\n//                   </IconButton>\n//                 )\n//               }}\n//             /> }\n//           </div>\n//         </div>\n//         <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\n//         <div className='app-action light-gray-bg'>\n//           <div className='action-left' style={{width:\"100%\"}}>\n//           <p className='text-truncate mb-0 topic_title'>{params && params.folder && params.folder.display_name}</p>\n//           </div>\n//             <div className='action-right'>\n//             <Info size={18} />\n//             </div>\n//         </div>\n//           {mails && mails.data && mails.data.length ? (\n//             <ul className='email-media-list'>{renderMails()}</ul>\n//           ) : (\n//             <div className='no-results d-block'>\n//               <h5>No Items Found</h5>\n//             </div>\n//         )} \n//         </PerfectScrollbar>\n//       </div>\n//       </Col>\n//       <Col xs='6' style={openMail === true ? {} : {borderLeft:\"1px solid\", display:\"none\"}}>\n//       <MailDetails\n//         openMail={openMail}\n//         dispatch={dispatch}\n//         mail={currentMail}\n//         labelColors={labelColors}\n//         setOpenMail={setOpenMail}\n//         updateMails={updateMails}\n//         paginateMail={paginateMail}\n//         updateMailLabel={updateMailLabel}\n//         handleMailToTrash={handleMailToTrash}\n//         handleFolderUpdate={handleFolderUpdate}\n//         handleLabelsUpdate={handleLabelsUpdate}\n//         handleMailReadUpdate={handleMailReadUpdate}\n//         formatDateToMonthShort={formatDateToMonthShort}\n//       />\n//       <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\n//       </Col>\n//       </Row>\n//       {/* <MailDetails\n//         openMail={openMail}\n//         dispatch={dispatch}\n//         mail={store.currentMail}\n//         labelColors={labelColors}\n//         setOpenMail={setOpenMail}\n//         updateMails={updateMails}\n//         paginateMail={paginateMail}\n//         updateMailLabel={updateMailLabel}\n//         handleMailToTrash={handleMailToTrash}\n//         handleFolderUpdate={handleFolderUpdate}\n//         handleLabelsUpdate={handleLabelsUpdate}\n//         handleMailReadUpdate={handleMailReadUpdate}\n//         formatDateToMonthShort={formatDateToMonthShort}\n//       /> */}\n//     </Fragment>\n//   )\n// }\n// export default Mails\n// ** React Imports\nimport { Fragment, useState } from 'react'; // ** Mail Components Imports\n\nimport MailCard from './MailCard';\nimport MailDetails from './MailDetails';\nimport ComposePopUp from './ComposePopup';\nimport * as Icon from 'react-feather'; // ** Utils\n\nimport { formatDateToMonthShort } from '@utils';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\"; // import PlusIcon from \"@material-ui/icons/Plus\"\n\nimport { IconButton } from \"@material-ui/core\";\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\"; // ** Third Party Components\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, CustomInput, DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown, Row, Col } from 'reactstrap';\nimport { Menu, ArrowLeftCircle, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather';\nimport Search from \"../../../Images/Search.svg\";\nimport Refresh from \"../../../Images/refresh.svg\";\nimport Back_arrow from \"../../../Images/backarrow.svg\";\nimport Plus from \"../../../Images/add.svg\";\nimport Delete from \"../../../Images/delete.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Mails = function Mails(props) {\n  _s();\n\n  // ** Props\n  var query = props.query,\n      store = props.store,\n      setQuery = props.setQuery,\n      dispatch = props.dispatch,\n      selectMail = props.selectMail,\n      composeOpen = props.composeOpen,\n      updateMails = props.updateMails,\n      paginateMail = props.paginateMail,\n      selectAllMail = props.selectAllMail,\n      toggleCompose = props.toggleCompose,\n      setSidebarOpen = props.setSidebarOpen,\n      updateMailLabel = props.updateMailLabel,\n      resetSelectedMail = props.resetSelectedMail,\n      selectCurrentMail = props.selectCurrentMail;\n  var mails = store.mails,\n      selectedMails = store.selectedMails; // ** States\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openMail = _useState2[0],\n      setOpenMail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearchVisible = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1]; // ** Variables\n\n\n  var labelColors = {\n    personal: 'success',\n    company: 'primary',\n    important: 'warning',\n    private: 'danger'\n  }; // ** Handles Update Functions\n\n  var handleMailClick = function handleMailClick(id) {\n    dispatch(selectCurrentMail(id));\n    setOpenMail(true);\n  };\n  /*eslint-disable */\n  // ** Handles Folder Update\n\n\n  var handleFolderUpdate = function handleFolderUpdate(e, folder) {\n    var ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : selectedMails;\n    e.preventDefault();\n    dispatch(updateMails(ids, {\n      folder: folder\n    }));\n    dispatch(resetSelectedMail());\n  }; // ** Handles Label Update\n\n\n  var handleLabelsUpdate = function handleLabelsUpdate(e, label) {\n    var ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : selectedMails;\n    e.preventDefault();\n    dispatch(updateMailLabel(ids, label));\n    dispatch(resetSelectedMail());\n  }; // ** Handles Mail Read Update\n\n\n  var handleMailReadUpdate = function handleMailReadUpdate(arr, bool) {\n    dispatch(updateMails(arr, {\n      isRead: bool\n    })).then(function () {\n      return dispatch(resetSelectedMail());\n    });\n    dispatch(selectAllMail(false));\n  }; // ** Handles Move to Trash\n\n\n  var handleMailToTrash = function handleMailToTrash(ids) {\n    dispatch(updateMails(ids, {\n      folder: 'trash'\n    }));\n    dispatch(resetSelectedMail());\n  };\n  /*eslint-enable */\n  // ** Renders Mail\n\n\n  var renderMails = function renderMails() {\n    if (mails.length) {\n      return mails.map(function (mail, index) {\n        return /*#__PURE__*/_jsxDEV(MailCard, {\n          mail: mail,\n          dispatch: dispatch,\n          selectMail: selectMail,\n          updateMails: updateMails,\n          labelColors: labelColors,\n          selectedMails: selectedMails,\n          handleMailClick: handleMailClick,\n          handleMailReadUpdate: handleMailReadUpdate,\n          formatDateToMonthShort: formatDateToMonthShort\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, _this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-app-list topic_navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-fixed-search d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-toggle d-block d-lg-none ml-1\",\n          onClick: function onClick() {\n            return setSidebarOpen(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dropdown_icon\",\n            style: {\n              padding: \"4px 1px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"back_arrow\",\n              src: Back_arrow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 75\n            }, _this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 12\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-content-center menu justify-content-between w-100 details_navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \" TOPIC \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 11\n          }, _this), search === false ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"broadcom_align float-right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar_search\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"align-middle  mr20\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"img\",\n                  src: Refresh\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 51\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"align-middle  mr20\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"img\",\n                  src: Plus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 50\n                }, _this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"align-middle \",\n                onClick: function onClick() {\n                  return [setSearchVisible(!search)];\n                },\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"img\",\n                  src: Search\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 89\n                }, _this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 32\n          }, _this) : /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"Search\",\n            type: \"text\",\n            variant: \"outlined\",\n            fullWidth: true,\n            size: \"small\",\n            onChange: function onChange(e) {\n              return setValue(e.target.value);\n            },\n            value: value,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, _this),\n              endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                className: \"delete_btn\",\n                \"aria-label\": \"toggle password visibility\",\n                onClick: function onClick() {\n                  return [setSearchVisible(!search), setValue(\"\")];\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  img: true,\n                  className: \"img\",\n                  src: Delete\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 20\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, _this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        className: \"email-user-list\",\n        options: {\n          wheelPropagation: false\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-action light-gray-bg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-left\",\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-truncate mb-0 topic_title\",\n              children: \"Tread name display for longer text eclips....\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-right\",\n            children: /*#__PURE__*/_jsxDEV(Info, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 9\n        }, _this), mails.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"email-media-list\",\n          children: renderMails()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results d-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"No Items Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MailDetails, {\n      openMail: openMail,\n      dispatch: dispatch,\n      mail: store.currentMail,\n      labelColors: labelColors,\n      setOpenMail: setOpenMail,\n      updateMails: updateMails,\n      paginateMail: paginateMail,\n      updateMailLabel: updateMailLabel,\n      handleMailToTrash: handleMailToTrash,\n      handleFolderUpdate: handleFolderUpdate,\n      handleLabelsUpdate: handleLabelsUpdate,\n      handleMailReadUpdate: handleMailReadUpdate,\n      formatDateToMonthShort: formatDateToMonthShort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ComposePopUp, {\n      composeOpen: composeOpen,\n      toggleCompose: toggleCompose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Mails, \"inPC7gC9m81X9tSbLZyTqxj1bK0=\");\n\n_c = Mails;\nexport default Mails;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mails\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/apps/email/Mails.js"],"names":["Fragment","useState","MailCard","MailDetails","ComposePopUp","Icon","formatDateToMonthShort","InputAdornment","TextField","SearchIcon","IconButton","CancelRoundedIcon","PerfectScrollbar","InputGroup","InputGroupAddon","Input","InputGroupText","CustomInput","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","Row","Col","Menu","ArrowLeftCircle","Folder","Tag","Mail","Trash","Edit2","Info","Mails","props","query","store","setQuery","dispatch","selectMail","composeOpen","updateMails","paginateMail","selectAllMail","toggleCompose","setSidebarOpen","updateMailLabel","resetSelectedMail","selectCurrentMail","mails","selectedMails","openMail","setOpenMail","search","setSearchVisible","value","setValue","labelColors","personal","company","important","private","handleMailClick","id","handleFolderUpdate","e","folder","ids","preventDefault","handleLabelsUpdate","label","handleMailReadUpdate","arr","bool","isRead","then","handleMailToTrash","renderMails","length","map","mail","index","padding","Back_arrow","Refresh","Plus","Search","target","startAdornment","endAdornment","Delete","wheelPropagation","width","currentMail"],"mappings":";;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA,SAAS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","sourcesContent":["// // ** React Imports\r\n// import { Fragment, useState } from 'react'\r\n\r\n// // ** Mail Components Imports\r\n// import MailCard from './MailCard'\r\n// import MailDetails from './MailDetails'\r\n// import ComposePopUp from './ComposePopup'\r\n// import * as Icon from 'react-feather'\r\n\r\n// // ** Utils\r\n// import { formatDateToMonthShort } from '@utils'\r\n\r\n// import InputAdornment from \"@material-ui/core/InputAdornment\"\r\n// import TextField from \"@material-ui/core/TextField\"\r\n// import SearchIcon from \"@material-ui/icons/Search\"\r\n// // import PlusIcon from \"@material-ui/icons/Plus\"\r\n\r\n// import { IconButton } from \"@material-ui/core\"\r\n// import CancelRoundedIcon from \"@material-ui/icons/CancelRounded\"\r\n\r\n// // ** Third Party Components\r\n// import PerfectScrollbar from 'react-perfect-scrollbar'\r\n// import {\r\n//   InputGroup,\r\n//   InputGroupAddon,\r\n//   Input,\r\n//   InputGroupText,\r\n//   CustomInput,\r\n//   DropdownMenu,\r\n//   DropdownItem,\r\n//   DropdownToggle,\r\n//   UncontrolledDropdown,\r\n//   Row,\r\n//   Col\r\n// } from 'reactstrap'\r\n// import { Menu, ArrowLeftCircle, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\r\n\r\n\r\n// import Search from \"../../../Images/Search.svg\"\r\n// import Refresh from \"../../../Images/refresh.svg\"\r\n// import Back_arrow from \"../../../Images/backarrow.svg\"\r\n// import Plus from \"../../../Images/add.svg\"\r\n// import Delete from \"../../../Images/delete.svg\"\r\n\r\n// const Mails = props => {\r\n//   // ** Props\r\n//   const {\r\n//     query,\r\n//     store,\r\n//     setQuery,\r\n//     dispatch,\r\n//     selectMail,\r\n//     composeOpen,\r\n//     updateMails,\r\n//     paginateMail,\r\n//     selectAllMail,\r\n//     toggleCompose,\r\n//     setSidebarOpen,\r\n//     updateMailLabel,\r\n//     resetSelectedMail,\r\n//     selectCurrentMail\r\n//   } = props\r\n\r\n//   const { mails, selectedMails, params, currentMail } = store\r\n// console.log(params)\r\n//   // ** States\r\n//   const [openMail, setOpenMail] = useState(false)\r\n//   const [search, setSearchVisible] = useState(false)\r\n//   const [threadDetails, setThreadDetails] = useState(mails)\r\n//   const [searchField, setSearchField] = useState(\"\")\r\n\r\n//   const filteredPersons = mails && mails.data && mails.data.filter(\r\n//     person => {\r\n//       return (\r\n//         person\r\n//         .commentor_designation\r\n//         .toLowerCase()\r\n//         .includes(searchField.toLowerCase())\r\n//       )\r\n//     }\r\n//   )\r\n\r\n\r\n//   // console.log(\"searchable items\", filteredPersons)\r\n//   // ** Variables\r\n//   const labelColors = {\r\n//     personal: 'success',\r\n//     company: 'primary',\r\n//     important: 'warning',\r\n//     private: 'danger'\r\n//   }\r\n\r\n//   // ** Handles Update Functions\r\n//   const handleMailClick = id => {\r\n//     console.log(id)\r\n//     dispatch(selectCurrentMail(id))\r\n//     setOpenMail(true)\r\n//   }\r\n\r\n//   /*eslint-disable */\r\n\r\n//   // ** Handles Folder Update\r\n//   const handleFolderUpdate = (e, folder, ids = selectedMails) => {\r\n//     e.preventDefault()\r\n//     dispatch(updateMails(ids, { folder }))\r\n//     dispatch(resetSelectedMail())\r\n//   }\r\n\r\n//   // ** Handles Label Update\r\n//   const handleLabelsUpdate = (e, label, ids = selectedMails) => {\r\n//     e.preventDefault()\r\n//     dispatch(updateMailLabel(ids, label))\r\n//     dispatch(resetSelectedMail())\r\n//   }\r\n\r\n//   // ** Handles Mail Read Update\r\n//   const handleMailReadUpdate = (arr, bool) => {\r\n//     // dispatch(updateMails(arr, { isRead: bool })).then(() => dispatch(resetSelectedMail()))\r\n//     dispatch(selectAllMail(false))\r\n//   }\r\n\r\n//   // ** Handles Move to Trash\r\n//   const handleMailToTrash = ids => {\r\n//     dispatch(updateMails(ids, { folder: 'trash' }))\r\n//     dispatch(resetSelectedMail())\r\n//   }\r\n//   /*eslint-enable */\r\n\r\n//   // ** Renders Mail\r\n//   const renderMails = () => {\r\n//     // if (mails && mails.length) {\r\n//       console.log(mails)\r\n//       return filteredPersons.map((mail, index) => {\r\n//         console.log(mail)\r\n//         return (\r\n//           <MailCard\r\n//             mail={mail}\r\n//             key={index}\r\n//             dispatch={dispatch}\r\n//             selectMail={selectMail}\r\n//             updateMails={updateMails}\r\n//             labelColors={labelColors}\r\n//             selectedMails={selectedMails}\r\n//             handleMailClick={handleMailClick}\r\n//             handleMailReadUpdate={handleMailReadUpdate}\r\n//             formatDateToMonthShort={formatDateToMonthShort}\r\n//           />\r\n//         )\r\n//       })\r\n//     // }\r\n//   }\r\n\r\n//   return (\r\n//     <Fragment>\r\n//      <Row>\r\n//        <Col xs='12' sm='12' lg='12' xl={openMail === true ? '6' : '12'}>\r\n//       <div className='email-app-list'>\r\n//         <div className='app-fixed-search d-flex align-items-center topic_navbar'>\r\n//           <div className='sidebar-toggle d-block d-lg-none ml-1' onClick={() => setSidebarOpen(true)}>\r\n//            <span  style={{padding: \"4px 1px\"}}  ><img className='back_arrow' src={Back_arrow}  /> </span>\r\n\r\n//           </div>\r\n//           <div className='align-content-center menu justify-content-between w-100 details_navbar'>\r\n//           <span className='title'> TOPIC </span> \r\n//           { search === false ? <span className='broadcom_align float-right'>\r\n//           <div className='sidebar_search'>\r\n//           {/* <span className='align-middle dropdown_icon mr20'   ><Icon.RotateCw  style={{padding:\"4px\"}} /> </span>\r\n//           <span className='align-middle dropdown_icon mr20'  ><Icon.Plus /> </span>\r\n//           <span className='align-middle dropdown_icon '   onClick={() => [setSearchVisible(!search)] }>  <SearchIcon /> </span> */}\r\n//           <span className='align-middle  mr20'   ><img className='img' src={Refresh}  /></span>\r\n//           <span className='align-middle  mr20'  ><img className='img' src={Plus}  /> </span>\r\n//           <span className='align-middle ' onClick={() => [setSearchVisible(!search)] }> <img className='img' src={Search}  /> </span>\r\n//           </div>\r\n//           </span> : <TextField\r\n//           placeholder=\"Search\"\r\n//           type=\"text\"\r\n//           variant=\"outlined\"\r\n//           fullWidth\r\n//           size=\"small\"\r\n//           onChange={(e) => setSearchField(e.target.value)}\r\n//           value={searchField}\r\n//           InputProps={{\r\n//                   startAdornment: (\r\n//                     <InputAdornment position=\"start\">\r\n//                       <SearchIcon />\r\n//                     </InputAdornment>\r\n//                   ),\r\n//                   endAdornment:(\r\n//                   <IconButton\r\n//                     className='delete_btn'\r\n//                     aria-label=\"toggle password visibility\"\r\n//                     onClick={() => [setSearchVisible(!search), setSearchField(\"\")] }\r\n//                   >\r\n//                    <img img className='img' src={Delete} />\r\n//                   </IconButton>\r\n//                 )\r\n//               }}\r\n//             /> }\r\n\r\n//           </div>\r\n//         </div>\r\n\r\n\r\n//         <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\r\n//         <div className='app-action light-gray-bg'>\r\n//           <div className='action-left' style={{width:\"100%\"}}>\r\n//           <p className='text-truncate mb-0 topic_title'>{params && params.folder && params.folder.display_name}</p>\r\n//           </div>\r\n//             <div className='action-right'>\r\n//             <Info size={18} />\r\n//             </div>\r\n//         </div>\r\n\r\n//           {mails && mails.data && mails.data.length ? (\r\n//             <ul className='email-media-list'>{renderMails()}</ul>\r\n//           ) : (\r\n//             <div className='no-results d-block'>\r\n//               <h5>No Items Found</h5>\r\n//             </div>\r\n//         )} \r\n//         </PerfectScrollbar>\r\n//       </div>\r\n//       </Col>\r\n//       <Col xs='6' style={openMail === true ? {} : {borderLeft:\"1px solid\", display:\"none\"}}>\r\n//       <MailDetails\r\n//         openMail={openMail}\r\n//         dispatch={dispatch}\r\n//         mail={currentMail}\r\n//         labelColors={labelColors}\r\n//         setOpenMail={setOpenMail}\r\n//         updateMails={updateMails}\r\n//         paginateMail={paginateMail}\r\n//         updateMailLabel={updateMailLabel}\r\n//         handleMailToTrash={handleMailToTrash}\r\n//         handleFolderUpdate={handleFolderUpdate}\r\n//         handleLabelsUpdate={handleLabelsUpdate}\r\n//         handleMailReadUpdate={handleMailReadUpdate}\r\n//         formatDateToMonthShort={formatDateToMonthShort}\r\n//       />\r\n//       <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\r\n//       </Col>\r\n//       </Row>\r\n//       {/* <MailDetails\r\n//         openMail={openMail}\r\n//         dispatch={dispatch}\r\n//         mail={store.currentMail}\r\n//         labelColors={labelColors}\r\n//         setOpenMail={setOpenMail}\r\n//         updateMails={updateMails}\r\n//         paginateMail={paginateMail}\r\n//         updateMailLabel={updateMailLabel}\r\n//         handleMailToTrash={handleMailToTrash}\r\n//         handleFolderUpdate={handleFolderUpdate}\r\n//         handleLabelsUpdate={handleLabelsUpdate}\r\n//         handleMailReadUpdate={handleMailReadUpdate}\r\n//         formatDateToMonthShort={formatDateToMonthShort}\r\n//       /> */}\r\n//     </Fragment>\r\n//   )\r\n// }\r\n\r\n// export default Mails\r\n\r\n\r\n\r\n\r\n// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Mail Components Imports\r\nimport MailCard from './MailCard'\r\nimport MailDetails from './MailDetails'\r\nimport ComposePopUp from './ComposePopup'\r\nimport * as Icon from 'react-feather'\r\n\r\n// ** Utils\r\nimport { formatDateToMonthShort } from '@utils'\r\n\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\n// import PlusIcon from \"@material-ui/icons/Plus\"\r\n\r\nimport { IconButton } from \"@material-ui/core\"\r\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\"\r\n\r\n// ** Third Party Components\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  InputGroupText,\r\n  CustomInput,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Row,\r\n  Col\r\n} from 'reactstrap'\r\nimport { Menu, ArrowLeftCircle, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\r\n\r\n\r\nimport Search from \"../../../Images/Search.svg\"\r\nimport Refresh from \"../../../Images/refresh.svg\"\r\nimport Back_arrow from \"../../../Images/backarrow.svg\"\r\nimport Plus from \"../../../Images/add.svg\"\r\nimport Delete from \"../../../Images/delete.svg\"\r\n\r\nconst Mails = props => {\r\n  // ** Props\r\n  const {\r\n    query,\r\n    store,\r\n    setQuery,\r\n    dispatch,\r\n    selectMail,\r\n    composeOpen,\r\n    updateMails,\r\n    paginateMail,\r\n    selectAllMail,\r\n    toggleCompose,\r\n    setSidebarOpen,\r\n    updateMailLabel,\r\n    resetSelectedMail,\r\n    selectCurrentMail\r\n  } = props\r\n\r\n  const { mails, selectedMails } = store\r\n\r\n  // ** States\r\n  const [openMail, setOpenMail] = useState(false)\r\n  const [search, setSearchVisible] = useState(false)\r\n  const [value, setValue] = useState(\"\")\r\n\r\n  // ** Variables\r\n  const labelColors = {\r\n    personal: 'success',\r\n    company: 'primary',\r\n    important: 'warning',\r\n    private: 'danger'\r\n  }\r\n\r\n  // ** Handles Update Functions\r\n  const handleMailClick = id => {\r\n    dispatch(selectCurrentMail(id))\r\n    setOpenMail(true)\r\n  }\r\n\r\n  /*eslint-disable */\r\n\r\n  // ** Handles Folder Update\r\n  const handleFolderUpdate = (e, folder, ids = selectedMails) => {\r\n    e.preventDefault()\r\n    dispatch(updateMails(ids, { folder }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  // ** Handles Label Update\r\n  const handleLabelsUpdate = (e, label, ids = selectedMails) => {\r\n    e.preventDefault()\r\n    dispatch(updateMailLabel(ids, label))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  // ** Handles Mail Read Update\r\n  const handleMailReadUpdate = (arr, bool) => {\r\n    dispatch(updateMails(arr, { isRead: bool })).then(() => dispatch(resetSelectedMail()))\r\n    dispatch(selectAllMail(false))\r\n  }\r\n\r\n  // ** Handles Move to Trash\r\n  const handleMailToTrash = ids => {\r\n    dispatch(updateMails(ids, { folder: 'trash' }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n  /*eslint-enable */\r\n\r\n  // ** Renders Mail\r\n  const renderMails = () => {\r\n    if (mails.length) {\r\n      return mails.map((mail, index) => {\r\n        return (\r\n          <MailCard\r\n            mail={mail}\r\n            key={index}\r\n            dispatch={dispatch}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            labelColors={labelColors}\r\n            selectedMails={selectedMails}\r\n            handleMailClick={handleMailClick}\r\n            handleMailReadUpdate={handleMailReadUpdate}\r\n            formatDateToMonthShort={formatDateToMonthShort}\r\n          />\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n     \r\n      <div className='email-app-list topic_navbar'>\r\n        <div className='app-fixed-search d-flex align-items-center'>\r\n          <div className='sidebar-toggle d-block d-lg-none ml-1' onClick={() => setSidebarOpen(true)}>\r\n           <span className='dropdown_icon' style={{padding: \"4px 1px\"}}  ><img className='back_arrow' src={Back_arrow}  /> </span>\r\n\r\n          </div>\r\n          <div className='align-content-center menu justify-content-between w-100 details_navbar'>\r\n          <span className='title'> TOPIC </span> \r\n          { search === false ? <span className='broadcom_align float-right'>\r\n          <div className='sidebar_search'>\r\n          {/* <span className='align-middle dropdown_icon mr20'   ><Icon.RotateCw  style={{padding:\"4px\"}} /> </span>\r\n          <span className='align-middle dropdown_icon mr20'  ><Icon.Plus /> </span>\r\n          <span className='align-middle dropdown_icon '   onClick={() => [setSearchVisible(!search)] }>  <SearchIcon /> </span> */}\r\n          <span className='align-middle  mr20'   ><img className='img' src={Refresh}  /></span>\r\n          <span className='align-middle  mr20'  ><img className='img' src={Plus}  /> </span>\r\n          <span className='align-middle ' onClick={() => [setSearchVisible(!search)] }> <img className='img' src={Search}  /> </span>\r\n          </div>\r\n          </span> : <TextField\r\n          placeholder=\"Search\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n          InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment:(\r\n                  <IconButton\r\n                    className='delete_btn'\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => [setSearchVisible(!search), setValue(\"\")] }\r\n                  >\r\n                   <img img className='img' src={Delete} />\r\n                  </IconButton>\r\n                )\r\n              }}\r\n            /> }\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\r\n        <div className='app-action light-gray-bg'>\r\n          <div className='action-left' style={{width:\"100%\"}}>\r\n          <p className='text-truncate mb-0 topic_title'>Tread name display for longer text eclips....</p>\r\n          </div>\r\n            <div className='action-right'>\r\n            <Info size={18} />\r\n            </div>\r\n        </div>\r\n\r\n          {mails.length ? (\r\n            <ul className='email-media-list'>{renderMails()}</ul>\r\n          ) : (\r\n            <div className='no-results d-block'>\r\n              <h5>No Items Found</h5>\r\n            </div>\r\n        )} \r\n        </PerfectScrollbar>\r\n      </div>\r\n      \r\n      <MailDetails\r\n        openMail={openMail}\r\n        dispatch={dispatch}\r\n        mail={store.currentMail}\r\n        labelColors={labelColors}\r\n        setOpenMail={setOpenMail}\r\n        updateMails={updateMails}\r\n        paginateMail={paginateMail}\r\n        updateMailLabel={updateMailLabel}\r\n        handleMailToTrash={handleMailToTrash}\r\n        handleFolderUpdate={handleFolderUpdate}\r\n        handleLabelsUpdate={handleLabelsUpdate}\r\n        handleMailReadUpdate={handleMailReadUpdate}\r\n        formatDateToMonthShort={formatDateToMonthShort}\r\n      />\r\n      <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\r\n  \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Mails\r\n"]},"metadata":{},"sourceType":"module"}