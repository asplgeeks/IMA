{"ast":null,"code":"import _objectSpread from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// ** Initial State\nvar initialState = {\n  suggestions: [],\n  bookmarks: [],\n  query: ''\n};\n\nvar navbarReducer = function navbarReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'HANDLE_SEARCH_QUERY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        query: action.val\n      });\n\n    case 'GET_BOOKMARKS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        suggestions: action.data,\n        bookmarks: action.bookmarks\n      });\n\n    case 'UPDATE_BOOKMARKED':\n      var objectToUpdate; // ** find & update object\n\n      state.suggestions.find(function (item) {\n        if (item.id === action.id) {\n          item.isBookmarked = !item.isBookmarked;\n          objectToUpdate = item;\n        }\n      }); // ** Get index to add or remove bookmark from array\n\n      var bookmarkIndex = state.bookmarks.findIndex(function (x) {\n        return x.id === action.id;\n      });\n\n      if (bookmarkIndex === -1) {\n        state.bookmarks.push(objectToUpdate);\n      } else {\n        state.bookmarks.splice(bookmarkIndex, 1);\n      }\n\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default navbarReducer;","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/src/redux/reducers/navbar/index.js"],"names":["initialState","suggestions","bookmarks","query","navbarReducer","state","action","type","val","data","objectToUpdate","find","item","id","isBookmarked","bookmarkIndex","findIndex","x","push","splice"],"mappings":";AAAA;AACA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,6CAAYF,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAAjC;;AACF,SAAK,eAAL;AACE,6CAAYH,KAAZ;AAAmBJ,QAAAA,WAAW,EAAEK,MAAM,CAACG,IAAvC;AAA6CP,QAAAA,SAAS,EAAEI,MAAM,CAACJ;AAA/D;;AACF,SAAK,mBAAL;AACE,UAAIQ,cAAJ,CADF,CAGE;;AACAL,MAAAA,KAAK,CAACJ,WAAN,CAAkBU,IAAlB,CAAuB,UAAAC,IAAI,EAAI;AAC7B,YAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACO,EAAvB,EAA2B;AACzBD,UAAAA,IAAI,CAACE,YAAL,GAAoB,CAACF,IAAI,CAACE,YAA1B;AACAJ,UAAAA,cAAc,GAAGE,IAAjB;AACD;AACF,OALD,EAJF,CAWE;;AACA,UAAMG,aAAa,GAAGV,KAAK,CAACH,SAAN,CAAgBc,SAAhB,CAA0B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACJ,EAAF,KAASP,MAAM,CAACO,EAApB;AAAA,OAA3B,CAAtB;;AAEA,UAAIE,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBV,QAAAA,KAAK,CAACH,SAAN,CAAgBgB,IAAhB,CAAqBR,cAArB;AACD,OAFD,MAEO;AACLL,QAAAA,KAAK,CAACH,SAAN,CAAgBiB,MAAhB,CAAuBJ,aAAvB,EAAsC,CAAtC;AACD;;AAED,+BAAYV,KAAZ;;AACF;AACE,aAAOA,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,aAAf","sourcesContent":["// ** Initial State\r\nconst initialState = {\r\n  suggestions: [],\r\n  bookmarks: [],\r\n  query: ''\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'HANDLE_SEARCH_QUERY':\r\n      return { ...state, query: action.val }\r\n    case 'GET_BOOKMARKS':\r\n      return { ...state, suggestions: action.data, bookmarks: action.bookmarks }\r\n    case 'UPDATE_BOOKMARKED':\r\n      let objectToUpdate\r\n\r\n      // ** find & update object\r\n      state.suggestions.find(item => {\r\n        if (item.id === action.id) {\r\n          item.isBookmarked = !item.isBookmarked\r\n          objectToUpdate = item\r\n        }\r\n      })\r\n\r\n      // ** Get index to add or remove bookmark from array\r\n      const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.id)\r\n\r\n      if (bookmarkIndex === -1) {\r\n        state.bookmarks.push(objectToUpdate)\r\n      } else {\r\n        state.bookmarks.splice(bookmarkIndex, 1)\r\n      }\r\n\r\n      return { ...state }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default navbarReducer\r\n"]},"metadata":{},"sourceType":"module"}