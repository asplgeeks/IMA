{"ast":null,"code":"import _objectSpread from \"D:/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\IMA\\\\src\\\\views\\\\apps\\\\email\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom'; // ** Email App Component Imports\n\nimport Mails from './Mails';\nimport Sidebar from './Sidebar';\nimport Navbar from './Navbar'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { useNavbarType } from '@hooks/useNavbarType';\nimport { useFooterType } from '@hooks/useFooterType';\nimport { useNavbarColor } from '@hooks/useNavbarColor'; // ** Store & Actions\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTopics, selectMail, updateMails, paginateMail, selectAllMail, resetSelectedMail, selectCurrentMail, updateMailLabel, gettreads } from './store/actions'; // ** Styles\n\nimport '@styles/react/apps/app-email.scss';\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar EmailApp = function EmailApp() {\n  _s();\n\n  // ** States\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sidebarOpen = _useState4[0],\n      setSidebarOpen = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      composeOpen = _useState6[0],\n      setComposeOpen = _useState6[1];\n\n  var _useNavbarType = useNavbarType(),\n      _useNavbarType2 = _slicedToArray(_useNavbarType, 2),\n      navbarType = _useNavbarType2[0],\n      setNavbarType = _useNavbarType2[1];\n\n  var _useFooterType = useFooterType(),\n      _useFooterType2 = _slicedToArray(_useFooterType, 2),\n      footerType = _useFooterType2[0],\n      setFooterType = _useFooterType2[1];\n\n  var _useNavbarColor = useNavbarColor(),\n      _useNavbarColor2 = _slicedToArray(_useNavbarColor, 2),\n      navbarColor = _useNavbarColor2[0],\n      setNavbarColor = _useNavbarColor2[1];\n\n  var _useState7 = useState(window.innerWidth),\n      _useState8 = _slicedToArray(_useState7, 2),\n      windowWidth = _useState8[0],\n      setWindowWidth = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      menuVisibility = _useState10[0],\n      setMenuVisibility = _useState10[1];\n\n  var dispatch = useDispatch(); // ** Toggle Compose Function\n\n  var toggleCompose = function toggleCompose() {\n    return setComposeOpen(!composeOpen);\n  };\n\n  var handleWindowWidth = function handleWindowWidth() {\n    setWindowWidth(window.innerWidth);\n  }; //** Sets Window Size & Layout Props\n\n\n  useEffect(function () {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth);\n    }\n  }, [windowWidth]);\n  var layoutStore = useSelector(function (state) {\n    return state.layout;\n  }); // ** Vars\n\n  var location = useLocation();\n  var contentWidth = layoutStore.contentWidth;\n  var menuCollapsed = layoutStore.menuCollapsed;\n  var isHidden = layoutStore.menuHidden; // ** Toggles Menu Collapsed\n\n  var setMenuCollapsed = function setMenuCollapsed(val) {\n    return dispatch(handleMenuCollapsed(val));\n  }; // ** Store Variables\n\n\n  var store = useSelector(function (state) {\n    return state.email;\n  }); //** This function will detect the Route Change and will hide the menu on menu item click\n\n  useEffect(function () {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false);\n    }\n  }, [location]); // ** Vars\n\n  var params = useParams(); // ** UseEffect: GET initial data on Mount\n\n  useEffect(function () {\n    dispatch(getTopics({\n      q: query || '',\n      folder: params.folder || 'inbox',\n      label: params.label || ''\n    }));\n  }, [query, params.folder, params.label]); // ** Vars\n\n  var footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  };\n  var navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  };\n  var navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  };\n  var bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white';\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n      className: classnames(\"wrapper vertical-layout \".concat(navbarWrapperClasses[navbarType] || 'navbar-floating', \" \").concat(footerClasses[footerType] || 'footer-static'), {\n        // Modern Menu\n        'vertical-menu-modern': windowWidth >= 1200,\n        'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n        'menu-expanded': !menuCollapsed && windowWidth > 1200,\n        // Overlay Menu\n        'vertical-overlay-menu': windowWidth < 1200,\n        'menu-hide': !menuVisibility && windowWidth < 1200,\n        'menu-open': menuVisibility && windowWidth < 1200\n      })\n    }, isHidden ? {\n      'data-col': '1-column'\n    } : {}), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Sidebar, {\n        store: store,\n        dispatch: dispatch,\n        getTopics: getTopics,\n        gettreads: gettreads,\n        sidebarOpen: sidebarOpen,\n        toggleCompose: toggleCompose,\n        setSidebarOpen: setSidebarOpen,\n        resetSelectedMail: resetSelectedMail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames('body-content-overlay', {\n              show: sidebarOpen\n            }),\n            onClick: function onClick() {\n              return setSidebarOpen(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Mails, {\n            store: store,\n            query: query,\n            setQuery: setQuery,\n            dispatch: dispatch,\n            getTopics: getTopics,\n            selectMail: selectMail,\n            updateMails: updateMails,\n            composeOpen: composeOpen,\n            paginateMail: paginateMail,\n            selectAllMail: selectAllMail,\n            toggleCompose: toggleCompose,\n            setSidebarOpen: setSidebarOpen,\n            updateMailLabel: updateMailLabel,\n            selectCurrentMail: selectCurrentMail,\n            resetSelectedMail: resetSelectedMail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EmailApp, \"HUSr1dP+pTkeg5PZaK4HgvpFknA=\", false, function () {\n  return [useNavbarType, useFooterType, useNavbarColor, useDispatch, useSelector, useLocation, useSelector, useParams];\n});\n\n_c = EmailApp;\nexport default EmailApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailApp\");","map":{"version":3,"sources":["D:/IMA/src/views/apps/email/index.js"],"names":["Fragment","useEffect","useState","useParams","useLocation","Mails","Sidebar","Navbar","classnames","useNavbarType","useFooterType","useNavbarColor","useDispatch","useSelector","getTopics","selectMail","updateMails","paginateMail","selectAllMail","resetSelectedMail","selectCurrentMail","updateMailLabel","gettreads","handleMenuCollapsed","handleContentWidth","handleMenuHidden","EmailApp","query","setQuery","sidebarOpen","setSidebarOpen","composeOpen","setComposeOpen","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","window","innerWidth","windowWidth","setWindowWidth","menuVisibility","setMenuVisibility","dispatch","toggleCompose","handleWindowWidth","undefined","addEventListener","layoutStore","state","layout","location","contentWidth","menuCollapsed","isHidden","menuHidden","setMenuCollapsed","val","store","email","params","q","folder","label","footerClasses","static","sticky","hidden","navbarWrapperClasses","floating","navbarClasses","bgColorCondition","show"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport { useParams, useLocation } from 'react-router-dom'\r\n\r\n// ** Email App Component Imports\r\nimport Mails from './Mails'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getTopics,\r\n  selectMail,\r\n  updateMails,\r\n  paginateMail,\r\n  selectAllMail,\r\n  resetSelectedMail,\r\n  selectCurrentMail,\r\n  updateMailLabel,\r\n  gettreads\r\n} from './store/actions'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-email.scss'\r\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\r\n\r\nconst EmailApp = () => {\r\n  // ** States\r\n  const [query, setQuery] = useState('')\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [composeOpen, setComposeOpen] = useState(false)\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const dispatch = useDispatch()\r\n  // ** Toggle Compose Function\r\n  const toggleCompose = () => setComposeOpen(!composeOpen)\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  \r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n  const layoutStore = useSelector(state => state.layout)\r\n    // ** Vars\r\n    const location = useLocation()\r\n    const contentWidth = layoutStore.contentWidth\r\n    const menuCollapsed = layoutStore.menuCollapsed\r\n    const isHidden = layoutStore.menuHidden\r\n  \r\n    // ** Toggles Menu Collapsed\r\n    const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n  // ** Store Variables\r\n  const store = useSelector(state => state.email)\r\n\r\n\r\n    //** This function will detect the Route Change and will hide the menu on menu item click\r\n    useEffect(() => {\r\n      if (menuVisibility && windowWidth < 1200) {\r\n        setMenuVisibility(false)\r\n      }\r\n    }, [location])\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** UseEffect: GET initial data on Mount\r\n  useEffect(() => {\r\n    dispatch(getTopics({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\r\n  }, [query, params.folder, params.label])\r\n\r\n    // ** Vars\r\n    const footerClasses = {\r\n      static: 'footer-static',\r\n      sticky: 'footer-fixed',\r\n      hidden: 'footer-hidden'\r\n    }\r\n  \r\n    const navbarWrapperClasses = {\r\n      floating: 'navbar-floating',\r\n      sticky: 'navbar-sticky',\r\n      static: 'navbar-static',\r\n      hidden: 'navbar-hidden'\r\n    }\r\n  \r\n    const navbarClasses = {\r\n      floating: 'floating-nav',\r\n      sticky: 'fixed-top',\r\n      static: 'navbar-static-top',\r\n      hidden: 'd-none'\r\n    }\r\n  \r\n    const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n  return (\r\n    <Fragment>\r\n          <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      <Navbar />\r\n      <Sidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        getTopics={getTopics}\r\n        gettreads={gettreads}\r\n        sidebarOpen={sidebarOpen}\r\n        toggleCompose={toggleCompose}\r\n        setSidebarOpen={setSidebarOpen}\r\n        resetSelectedMail={resetSelectedMail}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-body'>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: sidebarOpen\r\n            })}\r\n            onClick={() => setSidebarOpen(false)}\r\n          ></div>\r\n          <Mails\r\n            store={store}\r\n            query={query}\r\n            setQuery={setQuery}\r\n            dispatch={dispatch}\r\n            getTopics={getTopics}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            composeOpen={composeOpen}\r\n            paginateMail={paginateMail}\r\n            selectAllMail={selectAllMail}\r\n            toggleCompose={toggleCompose}\r\n            setSidebarOpen={setSidebarOpen}\r\n            updateMailLabel={updateMailLabel}\r\n            selectCurrentMail={selectCurrentMail}\r\n            resetSelectedMail={resetSelectedMail}\r\n          />\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmailApp\r\n"]},"metadata":{},"sourceType":"module"}