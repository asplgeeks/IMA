{"ast":null,"code":"var PropTypes = require('prop-types');\n\nvar UppyCore = require('@uppy/core').Uppy; // The `uppy` prop receives the Uppy core instance.\n\n\nvar uppy = PropTypes.instanceOf(UppyCore).isRequired; // A list of plugins to mount inside this component.\n\nvar plugins = PropTypes.arrayOf(PropTypes.string); // Language strings for this component.\n\nvar locale = PropTypes.shape({\n  strings: PropTypes.object,\n  pluralize: PropTypes.func\n}); // List of meta fields for the editor in the Dashboard.\n\nvar metaField = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string\n});\nvar metaFields = PropTypes.arrayOf(metaField); // A size in pixels (number) or with some other unit (string).\n\nvar cssSize = PropTypes.oneOfType([PropTypes.string, PropTypes.number]); // Common props for dashboardy components (Dashboard and DashboardModal).\n\nvar dashboard = {\n  uppy: uppy,\n  inline: PropTypes.bool,\n  plugins: plugins,\n  width: cssSize,\n  height: cssSize,\n  showProgressDetails: PropTypes.bool,\n  hideUploadButton: PropTypes.bool,\n  hideProgressAfterFinish: PropTypes.bool,\n  note: PropTypes.string,\n  metaFields: metaFields,\n  proudlyDisplayPoweredByUppy: PropTypes.bool,\n  disableStatusBar: PropTypes.bool,\n  disableInformer: PropTypes.bool,\n  disableThumbnailGenerator: PropTypes.bool,\n  // pass-through to ThumbnailGenerator\n  thumbnailWidth: PropTypes.number,\n  locale: locale\n};\nmodule.exports = {\n  uppy: uppy,\n  locale: locale,\n  dashboard: dashboard\n};","map":{"version":3,"sources":["D:/nodejs/IMA/node_modules/@uppy/react/lib/propTypes.js"],"names":["PropTypes","require","UppyCore","Uppy","uppy","instanceOf","isRequired","plugins","arrayOf","string","locale","shape","strings","object","pluralize","func","metaField","id","name","placeholder","metaFields","cssSize","oneOfType","number","dashboard","inline","bool","width","height","showProgressDetails","hideUploadButton","hideProgressAfterFinish","note","proudlyDisplayPoweredByUppy","disableStatusBar","disableInformer","disableThumbnailGenerator","thumbnailWidth","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBE,IAArC,C,CAA2C;;;AAG3C,IAAIC,IAAI,GAAGJ,SAAS,CAACK,UAAV,CAAqBH,QAArB,EAA+BI,UAA1C,C,CAAsD;;AAEtD,IAAIC,OAAO,GAAGP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACS,MAA5B,CAAd,C,CAAmD;;AAEnD,IAAIC,MAAM,GAAGV,SAAS,CAACW,KAAV,CAAgB;AAC3BC,EAAAA,OAAO,EAAEZ,SAAS,CAACa,MADQ;AAE3BC,EAAAA,SAAS,EAAEd,SAAS,CAACe;AAFM,CAAhB,CAAb,C,CAGI;;AAEJ,IAAIC,SAAS,GAAGhB,SAAS,CAACW,KAAV,CAAgB;AAC9BM,EAAAA,EAAE,EAAEjB,SAAS,CAACS,MAAV,CAAiBH,UADS;AAE9BY,EAAAA,IAAI,EAAElB,SAAS,CAACS,MAAV,CAAiBH,UAFO;AAG9Ba,EAAAA,WAAW,EAAEnB,SAAS,CAACS;AAHO,CAAhB,CAAhB;AAKA,IAAIW,UAAU,GAAGpB,SAAS,CAACQ,OAAV,CAAkBQ,SAAlB,CAAjB,C,CAA+C;;AAE/C,IAAIK,OAAO,GAAGrB,SAAS,CAACsB,SAAV,CAAoB,CAACtB,SAAS,CAACS,MAAX,EAAmBT,SAAS,CAACuB,MAA7B,CAApB,CAAd,C,CAAyE;;AAEzE,IAAIC,SAAS,GAAG;AACdpB,EAAAA,IAAI,EAAEA,IADQ;AAEdqB,EAAAA,MAAM,EAAEzB,SAAS,CAAC0B,IAFJ;AAGdnB,EAAAA,OAAO,EAAEA,OAHK;AAIdoB,EAAAA,KAAK,EAAEN,OAJO;AAKdO,EAAAA,MAAM,EAAEP,OALM;AAMdQ,EAAAA,mBAAmB,EAAE7B,SAAS,CAAC0B,IANjB;AAOdI,EAAAA,gBAAgB,EAAE9B,SAAS,CAAC0B,IAPd;AAQdK,EAAAA,uBAAuB,EAAE/B,SAAS,CAAC0B,IARrB;AASdM,EAAAA,IAAI,EAAEhC,SAAS,CAACS,MATF;AAUdW,EAAAA,UAAU,EAAEA,UAVE;AAWda,EAAAA,2BAA2B,EAAEjC,SAAS,CAAC0B,IAXzB;AAYdQ,EAAAA,gBAAgB,EAAElC,SAAS,CAAC0B,IAZd;AAadS,EAAAA,eAAe,EAAEnC,SAAS,CAAC0B,IAbb;AAcdU,EAAAA,yBAAyB,EAAEpC,SAAS,CAAC0B,IAdvB;AAed;AACAW,EAAAA,cAAc,EAAErC,SAAS,CAACuB,MAhBZ;AAiBdb,EAAAA,MAAM,EAAEA;AAjBM,CAAhB;AAmBA4B,MAAM,CAACC,OAAP,GAAiB;AACfnC,EAAAA,IAAI,EAAEA,IADS;AAEfM,EAAAA,MAAM,EAAEA,MAFO;AAGfc,EAAAA,SAAS,EAAEA;AAHI,CAAjB","sourcesContent":["var PropTypes = require('prop-types');\r\n\r\nvar UppyCore = require('@uppy/core').Uppy; // The `uppy` prop receives the Uppy core instance.\r\n\r\n\r\nvar uppy = PropTypes.instanceOf(UppyCore).isRequired; // A list of plugins to mount inside this component.\r\n\r\nvar plugins = PropTypes.arrayOf(PropTypes.string); // Language strings for this component.\r\n\r\nvar locale = PropTypes.shape({\r\n  strings: PropTypes.object,\r\n  pluralize: PropTypes.func\r\n}); // List of meta fields for the editor in the Dashboard.\r\n\r\nvar metaField = PropTypes.shape({\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string\r\n});\r\nvar metaFields = PropTypes.arrayOf(metaField); // A size in pixels (number) or with some other unit (string).\r\n\r\nvar cssSize = PropTypes.oneOfType([PropTypes.string, PropTypes.number]); // Common props for dashboardy components (Dashboard and DashboardModal).\r\n\r\nvar dashboard = {\r\n  uppy: uppy,\r\n  inline: PropTypes.bool,\r\n  plugins: plugins,\r\n  width: cssSize,\r\n  height: cssSize,\r\n  showProgressDetails: PropTypes.bool,\r\n  hideUploadButton: PropTypes.bool,\r\n  hideProgressAfterFinish: PropTypes.bool,\r\n  note: PropTypes.string,\r\n  metaFields: metaFields,\r\n  proudlyDisplayPoweredByUppy: PropTypes.bool,\r\n  disableStatusBar: PropTypes.bool,\r\n  disableInformer: PropTypes.bool,\r\n  disableThumbnailGenerator: PropTypes.bool,\r\n  // pass-through to ThumbnailGenerator\r\n  thumbnailWidth: PropTypes.number,\r\n  locale: locale\r\n};\r\nmodule.exports = {\r\n  uppy: uppy,\r\n  locale: locale,\r\n  dashboard: dashboard\r\n};"]},"metadata":{},"sourceType":"script"}