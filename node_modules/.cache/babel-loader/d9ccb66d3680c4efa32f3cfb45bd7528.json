{"ast":null,"code":"import _objectSpread from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\horizontal-menu\\\\HorizontalNavMenuLink.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom'; // ** Horizontal menu items array\n\nimport navigation from '@src/navigation/horizontal'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { DropdownItem } from 'reactstrap';\nimport { FormattedMessage } from 'react-intl'; // ** Utils\n\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar HorizontalNavMenuLink = function HorizontalNavMenuLink(_ref) {\n  _s();\n\n  var item = _ref.item,\n      setOpenDropdown = _ref.setOpenDropdown,\n      setGroupActive = _ref.setGroupActive,\n      activeItem = _ref.activeItem,\n      setActiveItem = _ref.setActiveItem,\n      routerProps = _ref.routerProps,\n      currentActiveItem = _ref.currentActiveItem,\n      isChild = _ref.isChild;\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  var LinkTag = item.externalLink ? 'a' : NavLink; // ** URL Vars\n\n  var location = useLocation();\n  var currentURL = location.pathname;\n  var navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps); // ** Get parents of current items\n\n  var searchParents = function searchParents(navigation, currentURL) {\n    var parents = search(navigation, currentURL, routerProps); // Search for parent object\n\n    var allParents = getAllParents(parents, 'id'); // Parents Object to Parents Array\n\n    allParents.pop();\n    return allParents;\n  }; // ** Remove all items from OpenDropdown array\n\n\n  var resetOpenDropdowns = function resetOpenDropdowns() {\n    return setOpenDropdown([]);\n  }; // ** On mount update active group array\n\n\n  useEffect(function () {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem);\n      var arr = searchParents(navigation, currentURL);\n      setGroupActive(_toConsumableArray(arr));\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames('nav-item', {\n      active: item.navLink === activeItem,\n      disabled: item.disabled\n    }),\n    onClick: resetOpenDropdowns,\n    children: /*#__PURE__*/_jsxDEV(LinkTag, _objectSpread(_objectSpread({\n      className: classnames('d-flex align-items-center', {\n        'dropdown-item': isChild,\n        'nav-link': !isChild\n      }),\n      tag: LinkTag,\n      target: item.newTab ? '_blank' : undefined\n      /*eslint-disable */\n\n    }, item.externalLink === true ? {\n      href: item.navLink || '/'\n    } : {\n      to: item.navLink || '/',\n      isActive: function isActive(match, location) {\n        if (!match) {\n          return false;\n        }\n\n        if (match.url && match.url !== '' && match.url === item.navLink) {\n          currentActiveItem = item.navLink;\n        }\n      }\n    }), {}, {\n      children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(HorizontalNavMenuLink, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n\n_c = HorizontalNavMenuLink;\nexport default HorizontalNavMenuLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalNavMenuLink\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js"],"names":["useEffect","NavLink","useLocation","navigation","classnames","DropdownItem","FormattedMessage","isNavLinkActive","search","getAllParents","HorizontalNavMenuLink","item","setOpenDropdown","setGroupActive","activeItem","setActiveItem","routerProps","currentActiveItem","isChild","LinkTag","externalLink","location","currentURL","pathname","navLinkActive","navLink","searchParents","parents","allParents","pop","resetOpenDropdowns","arr","active","disabled","newTab","undefined","href","to","isActive","match","url","icon","title"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Horizontal menu items array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { DropdownItem } from 'reactstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuLink = ({\r\n  item,\r\n  setOpenDropdown,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  routerProps,\r\n  currentActiveItem,\r\n  isChild\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\r\n\r\n  // ** Get parents of current items\r\n  const searchParents = (navigation, currentURL) => {\r\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    allParents.pop()\r\n    return allParents\r\n  }\r\n\r\n  // ** Remove all items from OpenDropdown array\r\n  const resetOpenDropdowns = () => setOpenDropdown([])\r\n\r\n  // ** On mount update active group array\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(navigation, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item', {\r\n        active: item.navLink === activeItem,\r\n        disabled: item.disabled\r\n      })}\r\n      onClick={resetOpenDropdowns}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        tag={LinkTag}\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n      >\r\n        {item.icon}\r\n        <span>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n"]},"metadata":{},"sourceType":"module"}