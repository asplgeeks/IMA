{"ast":null,"code":"import _slicedToArray from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// ** React Imports\nimport{Fragment,useEffect,useState}from'react';import{Link}from'react-router-dom';// ** Third Party Components\nimport*as Icon from'react-feather';import classnames from'classnames';import Autocomplete from'@components/autocomplete';import{NavItem,NavLink,UncontrolledTooltip,UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem}from'reactstrap';// ** Store & Actions\nimport{useDispatch,useSelector}from'react-redux';import{getBookmarks,updateBookmarked,handleSearchQuery}from'@store/actions/navbar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NavbarBookmarks=function NavbarBookmarks(props){// ** Props\nvar setMenuVisibility=props.setMenuVisibility;// ** State\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openSearch=_useState4[0],setOpenSearch=_useState4[1];// ** Store Vars\nvar dispatch=useDispatch();var store=useSelector(function(state){return state.navbar;});// ** ComponentDidMount\nuseEffect(function(){dispatch(getBookmarks());},[]);// ** Loops through Bookmarks Array to return Bookmarks\nvar renderBookmarks=function renderBookmarks(){if(store.bookmarks.length){return store.bookmarks.map(function(item){var IconTag=Icon[item.icon];return/*#__PURE__*/_jsx(NavItem,{className:\"d-none d-lg-block\",children:/*#__PURE__*/_jsxs(NavLink,{tag:Link,to:item.link,id:item.target,children:[/*#__PURE__*/_jsx(IconTag,{className:\"ficon\"}),/*#__PURE__*/_jsx(UncontrolledTooltip,{target:item.target,children:item.title})]})},item.target);}).slice(0,10);}else{return null;}};// ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\nvar renderExtraBookmarksDropdown=function renderExtraBookmarksDropdown(){if(store.bookmarks.length&&store.bookmarks.length>=11){return/*#__PURE__*/_jsx(NavItem,{className:\"d-none d-lg-block\",children:/*#__PURE__*/_jsx(NavLink,{tag:\"span\",children:/*#__PURE__*/_jsxs(UncontrolledDropdown,{children:[/*#__PURE__*/_jsx(DropdownToggle,{tag:\"span\",children:/*#__PURE__*/_jsx(Icon.ChevronDown,{className:\"ficon\"})}),/*#__PURE__*/_jsx(DropdownMenu,{right:true,children:store.bookmarks.map(function(item){var IconTag=Icon[item.icon];return/*#__PURE__*/_jsxs(DropdownItem,{tag:Link,to:item.link,children:[/*#__PURE__*/_jsx(IconTag,{className:\"mr-50\",size:14}),/*#__PURE__*/_jsx(\"span\",{className:\"align-middle\",children:item.title})]},item.id);}).slice(10)})]})})});}else{return null;}};// ** Removes query in store\nvar handleClearQueryInStore=function handleClearQueryInStore(){return dispatch(handleSearchQuery(''));};// ** Loops through Bookmarks Array to return Bookmarks\nvar onKeyDown=function onKeyDown(e){if(e.keyCode===27||e.keyCode===13){setTimeout(function(){setOpenSearch(false);handleClearQueryInStore();},1);}};// ** Function to toggle Bookmarks\nvar handleBookmarkUpdate=function handleBookmarkUpdate(id){return dispatch(updateBookmarked(id));};// ** Function to handle Bookmarks visibility\nvar handleBookmarkVisibility=function handleBookmarkVisibility(){setOpenSearch(!openSearch);setValue('');handleClearQueryInStore();};// ** Function to handle Input change\nvar handleInputChange=function handleInputChange(e){setValue(e.target.value);dispatch(handleSearchQuery(e.target.value));};// ** Function to handle external Input click\nvar handleExternalClick=function handleExternalClick(){if(openSearch===true){setOpenSearch(false);handleClearQueryInStore();}};// ** Function to clear input value\nvar handleClearInput=function handleClearInput(setUserInput){if(!openSearch){setUserInput('');handleClearQueryInStore();}};return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(\"ul\",{className:\"navbar-nav d-xl-none\",children:/*#__PURE__*/_jsx(NavItem,{className:\"mobile-menu mr-auto\",children:/*#__PURE__*/_jsx(NavLink,{className:\"nav-menu-main menu-toggle hidden-xs is-active\",onClick:function onClick(){return setMenuVisibility(true);},children:/*#__PURE__*/_jsx(Icon.Menu,{className:\"ficon\"})})})})});};export default NavbarBookmarks;","map":{"version":3,"sources":["D:/nodejs/IMA/src/@core/layouts/components/navbar/NavbarBookmarks.js"],"names":["Fragment","useEffect","useState","Link","Icon","classnames","Autocomplete","NavItem","NavLink","UncontrolledTooltip","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","useDispatch","useSelector","getBookmarks","updateBookmarked","handleSearchQuery","NavbarBookmarks","props","setMenuVisibility","value","setValue","openSearch","setOpenSearch","dispatch","store","state","navbar","renderBookmarks","bookmarks","length","map","item","IconTag","icon","link","target","title","slice","renderExtraBookmarksDropdown","id","handleClearQueryInStore","onKeyDown","e","keyCode","setTimeout","handleBookmarkUpdate","handleBookmarkVisibility","handleInputChange","handleExternalClick","handleClearInput","setUserInput"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\nimport Autocomplete from '@components/autocomplete'\r\nimport {\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledTooltip,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getBookmarks, updateBookmarked, handleSearchQuery } from '@store/actions/navbar'\r\n\r\nconst NavbarBookmarks = props => {\r\n  // ** Props\r\n  const { setMenuVisibility } = props\r\n\r\n  // ** State\r\n  const [value, setValue] = useState('')\r\n  const [openSearch, setOpenSearch] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.navbar)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    dispatch(getBookmarks())\r\n  }, [])\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const renderBookmarks = () => {\r\n    if (store.bookmarks.length) {\r\n      return store.bookmarks\r\n        .map(item => {\r\n          const IconTag = Icon[item.icon]\r\n          return (\r\n            <NavItem key={item.target} className='d-none d-lg-block'>\r\n              <NavLink tag={Link} to={item.link} id={item.target}>\r\n                <IconTag className='ficon' />\r\n                <UncontrolledTooltip target={item.target}>{item.title}</UncontrolledTooltip>\r\n              </NavLink>\r\n            </NavItem>\r\n          )\r\n        })\r\n        .slice(0, 10)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\r\n  const renderExtraBookmarksDropdown = () => {\r\n    if (store.bookmarks.length && store.bookmarks.length >= 11) {\r\n      return (\r\n        <NavItem className='d-none d-lg-block'>\r\n          <NavLink tag='span'>\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle tag='span'>\r\n                <Icon.ChevronDown className='ficon' />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {store.bookmarks\r\n                  .map(item => {\r\n                    const IconTag = Icon[item.icon]\r\n                    return (\r\n                      <DropdownItem tag={Link} to={item.link} key={item.id}>\r\n                        <IconTag className='mr-50' size={14} />\r\n                        <span className='align-middle'>{item.title}</span>\r\n                      </DropdownItem>\r\n                    )\r\n                  })\r\n                  .slice(10)}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </NavLink>\r\n        </NavItem>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Removes query in store\r\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const onKeyDown = e => {\r\n    if (e.keyCode === 27 || e.keyCode === 13) {\r\n      setTimeout(() => {\r\n        setOpenSearch(false)\r\n        handleClearQueryInStore()\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  // ** Function to toggle Bookmarks\r\n  const handleBookmarkUpdate = id => dispatch(updateBookmarked(id))\r\n\r\n  // ** Function to handle Bookmarks visibility\r\n  const handleBookmarkVisibility = () => {\r\n    setOpenSearch(!openSearch)\r\n    setValue('')\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  // ** Function to handle Input change\r\n  const handleInputChange = e => {\r\n    setValue(e.target.value)\r\n    dispatch(handleSearchQuery(e.target.value))\r\n  }\r\n\r\n  // ** Function to handle external Input click\r\n  const handleExternalClick = () => {\r\n    if (openSearch === true) {\r\n      setOpenSearch(false)\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to clear input value\r\n  const handleClearInput = setUserInput => {\r\n    if (!openSearch) {\r\n      setUserInput('')\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className='navbar-nav d-xl-none'>\r\n        <NavItem className='mobile-menu mr-auto'>\r\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\r\n            <Icon.Menu className='ficon' />\r\n          </NavLink>\r\n        </NavItem>\r\n      </ul>\r\n      {/* <ul className='nav navbar-nav bookmark-icons'>\r\n        {renderBookmarks()}\r\n        {renderExtraBookmarksDropdown()}\r\n        <NavItem className='nav-item d-none d-lg-block'>\r\n          <NavLink className='bookmark-star' onClick={handleBookmarkVisibility}>\r\n            <Icon.Star className='ficon text-warning' />\r\n          </NavLink>\r\n          <div className={classnames('bookmark-input search-input', { show: openSearch })}>\r\n            <div className='bookmark-input-icon'>\r\n              <Icon.Search size={14} />\r\n            </div>\r\n            {openSearch && store.suggestions.length ? (\r\n              <Autocomplete\r\n                wrapperClass={classnames('search-list search-list-bookmark', {\r\n                  show: openSearch\r\n                })}\r\n                className='form-control'\r\n                suggestions={!value.length ? store.bookmarks : store.suggestions}\r\n                filterKey='title'\r\n                autoFocus={true}\r\n                defaultSuggestions\r\n                suggestionLimit={!value.length ? store.bookmarks.length : 6}\r\n                placeholder='Search...'\r\n                externalClick={handleExternalClick}\r\n                clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\r\n                onKeyDown={onKeyDown}\r\n                value={value}\r\n                onChange={handleInputChange}\r\n                customRender={(\r\n                  item,\r\n                  i,\r\n                  filteredData,\r\n                  activeSuggestion,\r\n                  onSuggestionItemClick,\r\n                  onSuggestionItemHover\r\n                ) => {\r\n                  const IconTag = Icon[item.icon ? item.icon : 'X']\r\n                  return (\r\n                    <li\r\n                      key={i}\r\n                      onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\r\n                      className={classnames('suggestion-item d-flex align-items-center justify-content-between', {\r\n                        active: filteredData.indexOf(item) === activeSuggestion\r\n                      })}\r\n                    >\r\n                      <Link\r\n                        to={item.link}\r\n                        className='d-flex align-items-center justify-content-between p-0'\r\n                        onClick={() => {\r\n                          setOpenSearch(false)\r\n                          handleClearQueryInStore()\r\n                        }}\r\n                        style={{\r\n                          width: 'calc(90%)'\r\n                        }}\r\n                      >\r\n                        <div className='d-flex justify-content-start align-items-center overflow-hidden'>\r\n                          <IconTag size={17.5} className='mr-75' />\r\n                          <span className='text-truncate'>{item.title}</span>\r\n                        </div>\r\n                      </Link>\r\n                      <Icon.Star\r\n                        size={17.5}\r\n                        className={classnames('bookmark-icon float-right', {\r\n                          'text-warning': item.isBookmarked\r\n                        })}\r\n                        onClick={() => handleBookmarkUpdate(item.id)}\r\n                      />\r\n                    </li>\r\n                  )\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </NavItem>\r\n      </ul> */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NavbarBookmarks\r\n"]},"metadata":{},"sourceType":"module"}