{"ast":null,"code":"import { getNamedFormat, filterProps, createError } from '../utils';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\n\nfunction getFormatter(_ref, getRelativeTimeFormat) {\n  var locale = _ref.locale,\n      formats = _ref.formats,\n      onError = _ref.onError;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var format = options.format;\n  var defaults = !!format && getNamedFormat(formats, 'relative', format, onError) || {};\n  var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n  return getRelativeTimeFormat(locale, filteredOptions);\n}\n\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  if (!unit) {\n    unit = 'second';\n  }\n\n  var RelativeTimeFormat = Intl.RelativeTimeFormat;\n\n  if (!RelativeTimeFormat) {\n    config.onError(createError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\"));\n  }\n\n  try {\n    return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n  } catch (e) {\n    config.onError(createError('Error formatting relative time.', e));\n  }\n\n  return String(value);\n}","map":{"version":3,"sources":["D:/IMA/node_modules/react-intl/lib/formatters/relativeTime.js"],"names":["getNamedFormat","filterProps","createError","RELATIVE_TIME_FORMAT_OPTIONS","getFormatter","getRelativeTimeFormat","locale","formats","onError","options","format","defaults","filteredOptions","formatRelativeTime","config","value","unit","RelativeTimeFormat","Intl","e","String"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,EAAsCC,WAAtC,QAAyD,UAAzD;AACA,IAAMC,4BAA4B,GAAG,CACjC,SADiC,EAEjC,OAFiC,CAArC;;AAIA,SAASC,YAAT,OAAqDC,qBAArD,EAA0F;AAAA,MAAlEC,MAAkE,QAAlEA,MAAkE;AAAA,MAA1DC,OAA0D,QAA1DA,OAA0D;AAAA,MAAjDC,OAAiD,QAAjDA,OAAiD;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACtF,MAAQC,MAAR,GAAmBD,OAAnB,CAAQC,MAAR;AACA,MAAMC,QAAQ,GAAI,CAAC,CAACD,MAAF,IAAYV,cAAc,CAACO,OAAD,EAAU,UAAV,EAAsBG,MAAtB,EAA8BF,OAA9B,CAA3B,IAAsE,EAAvF;AACA,MAAMI,eAAe,GAAGX,WAAW,CAACQ,OAAD,EAAUN,4BAAV,EAAwCQ,QAAxC,CAAnC;AACA,SAAON,qBAAqB,CAACC,MAAD,EAASM,eAAT,CAA5B;AACH;;AACD,OAAO,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCT,qBAApC,EAA2DU,KAA3D,EAAkEC,IAAlE,EAAsF;AAAA,MAAdP,OAAc,uEAAJ,EAAI;;AACzF,MAAI,CAACO,IAAL,EAAW;AACPA,IAAAA,IAAI,GAAG,QAAP;AACH;;AACD,MAAMC,kBAAkB,GAAGC,IAAI,CAACD,kBAAhC;;AACA,MAAI,CAACA,kBAAL,EAAyB;AACrBH,IAAAA,MAAM,CAACN,OAAP,CAAeN,WAAW,mIAA1B;AAGH;;AACD,MAAI;AACA,WAAOE,YAAY,CAACU,MAAD,EAAST,qBAAT,EAAgCI,OAAhC,CAAZ,CAAqDC,MAArD,CAA4DK,KAA5D,EAAmEC,IAAnE,CAAP;AACH,GAFD,CAGA,OAAOG,CAAP,EAAU;AACNL,IAAAA,MAAM,CAACN,OAAP,CAAeN,WAAW,CAAC,iCAAD,EAAoCiB,CAApC,CAA1B;AACH;;AACD,SAAOC,MAAM,CAACL,KAAD,CAAb;AACH","sourcesContent":["import { getNamedFormat, filterProps, createError } from '../utils';\r\nconst RELATIVE_TIME_FORMAT_OPTIONS = [\r\n    'numeric',\r\n    'style',\r\n];\r\nfunction getFormatter({ locale, formats, onError, }, getRelativeTimeFormat, options = {}) {\r\n    const { format } = options;\r\n    const defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\r\n    const filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\r\n    return getRelativeTimeFormat(locale, filteredOptions);\r\n}\r\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options = {}) {\r\n    if (!unit) {\r\n        unit = 'second';\r\n    }\r\n    const RelativeTimeFormat = Intl.RelativeTimeFormat;\r\n    if (!RelativeTimeFormat) {\r\n        config.onError(createError(`Intl.RelativeTimeFormat is not available in this environment.\r\nTry polyfilling it using \"@formatjs/intl-relativetimeformat\"\r\n`));\r\n    }\r\n    try {\r\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\r\n    }\r\n    catch (e) {\r\n        config.onError(createError('Error formatting relative time.', e));\r\n    }\r\n    return String(value);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}