{"ast":null,"code":"import _objectSpread from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"min\", \"max\", \"step\", \"size\", \"wrap\", \"value\", \"style\", \"upIcon\", \"disabled\", \"readonly\", \"onChange\", \"downIcon\", \"vertical\", \"className\", \"onDecrement\", \"onIncrement\", \"inputClassName\"];\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\@core\\\\components\\\\number-input\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Plus, Minus } from 'react-feather';\nimport { useState, useEffect } from 'react';\nimport { InputGroup, InputGroupAddon, Input, Button } from 'reactstrap'; // ** Styles\n\nimport './number-input.scss'; // ** Keycode Vars\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar KEYCODE_UP = 38;\nvar KEYCODE_DOWN = 40;\n\nvar NumberInput = function NumberInput(props) {\n  _s();\n\n  var _classnames;\n\n  // ** Props\n  var min = props.min,\n      max = props.max,\n      step = props.step,\n      size = props.size,\n      wrap = props.wrap,\n      value = props.value,\n      style = props.style,\n      upIcon = props.upIcon,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      onChange = props.onChange,\n      downIcon = props.downIcon,\n      vertical = props.vertical,\n      className = props.className,\n      onDecrement = props.onDecrement,\n      onIncrement = props.onIncrement,\n      inputClassName = props.inputClassName,\n      rest = _objectWithoutProperties(props, _excluded); // ** State\n\n\n  var _useState = useState(value || min),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1]; // ** Handle btn down click\n\n\n  var handleDecrement = function handleDecrement() {\n    if (!disabled && !readonly) {\n      // ** If count is equals or smaller than min then return and do nothing\n      if (!wrap && count <= min) {\n        return;\n      } // ** Returns the decreased count based on wrap & and min prop\n\n\n      var countCondition = function countCondition() {\n        if (count - step < min) {\n          if (wrap) {\n            return max;\n          } else {\n            return min;\n          }\n        } else {\n          return count - step;\n        }\n      };\n\n      setCount(countCondition());\n\n      if (onDecrement) {\n        onIncrement(count);\n      }\n    }\n  }; // ** Handle btn up click\n\n\n  var handleIncrement = function handleIncrement() {\n    if (!disabled && !readonly) {\n      // ** If count is equals or larger than min then return and do nothing\n      if (!wrap && count >= max) {\n        return;\n      } // ** Returns the Increased count based on wrap & and max prop\n\n\n      var countCondition = function countCondition() {\n        if (count + step > max) {\n          if (wrap) {\n            return min;\n          } else {\n            return max;\n          }\n        } else {\n          return count + step;\n        }\n      };\n\n      setCount(countCondition());\n\n      if (onIncrement) {\n        onIncrement(count);\n      }\n    }\n  }; // ** Handle input change\n\n\n  var handleInputChange = function handleInputChange(e) {\n    setCount(Number(e.target.value));\n  }; // ** Handle Arrow Up & Down\n\n\n  var handleKeyDown = function handleKeyDown(e) {\n    e.preventDefault();\n\n    if (!readonly) {\n      if (e.keyCode === KEYCODE_UP) {\n        handleIncrement();\n      }\n\n      if (e.keyCode === KEYCODE_DOWN) {\n        handleDecrement();\n      }\n    }\n  }; // ** UseEffect based on user passed onChange\n\n\n  useEffect(function () {\n    if (onChange) {\n      onChange(count);\n    }\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(InputGroup, _objectSpread(_objectSpread({\n    className: classnames('number-input', (_classnames = {\n      disabled: disabled,\n      readonly: readonly\n    }, _defineProperty(_classnames, className, className), _defineProperty(_classnames, 'vertical-number-input', vertical), _defineProperty(_classnames, \"vertical-number-input-\".concat(size), vertical && size), _classnames))\n  }, style ? {\n    style: style\n  } : {}), {}, {\n    children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n      addonType: \"prepend\",\n      onClick: handleDecrement,\n      children: /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n        className: \"btn-icon\",\n        color: \"transparent\"\n      }, size ? {\n        size: size\n      } : {}), {}, {\n        disabled: !wrap && count <= min || disabled || readonly,\n        children: downIcon\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, rest), {}, {\n      type: \"number\",\n      value: count,\n      disabled: disabled,\n      readOnly: readonly,\n      onKeyDown: handleKeyDown,\n      onChange: handleInputChange,\n      className: classnames(_defineProperty({}, inputClassName, inputClassName))\n    }, size ? {\n      bsSize: size\n    } : {}), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n      addonType: \"append\",\n      onClick: handleIncrement,\n      children: /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n        className: \"btn-icon\",\n        color: \"transparent\"\n      }, size ? {\n        size: size\n      } : {}), {}, {\n        disabled: !wrap && count >= max || disabled || readonly,\n        children: upIcon\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NumberInput, \"vl5hQlEEKzEe16tWW7Ul5ebWzws=\");\n\n_c = NumberInput;\nexport default NumberInput; // ** Default Props\n\nNumberInput.defaultProps = {\n  min: 1,\n  step: 1,\n  wrap: false,\n  max: Infinity,\n  disabled: false,\n  readonly: false,\n  downIcon: /*#__PURE__*/_jsxDEV(Minus, {\n    size: 14\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 13\n  }, this),\n  upIcon: /*#__PURE__*/_jsxDEV(Plus, {\n    size: 14\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 11\n  }, this)\n}; // ** PropTypes\n\nNumberInput.propTypes = {\n  wrap: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  value: PropTypes.number,\n  style: PropTypes.object,\n  vertical: PropTypes.bool,\n  disabled: PropTypes.bool,\n  readonly: PropTypes.bool,\n  onChange: PropTypes.func,\n  upIcon: PropTypes.element,\n  downIcon: PropTypes.element,\n  className: PropTypes.string,\n  onDecrement: PropTypes.func,\n  onIncrement: PropTypes.func,\n  inputClassName: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg'])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberInput\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/@core/components/number-input/index.js"],"names":["PropTypes","classnames","Plus","Minus","useState","useEffect","InputGroup","InputGroupAddon","Input","Button","KEYCODE_UP","KEYCODE_DOWN","NumberInput","props","min","max","step","size","wrap","value","style","upIcon","disabled","readonly","onChange","downIcon","vertical","className","onDecrement","onIncrement","inputClassName","rest","count","setCount","handleDecrement","countCondition","handleIncrement","handleInputChange","e","Number","target","handleKeyDown","preventDefault","keyCode","bsSize","defaultProps","Infinity","propTypes","bool","number","object","func","element","string","oneOf"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Plus, Minus } from 'react-feather'\r\nimport { useState, useEffect } from 'react'\r\nimport { InputGroup, InputGroupAddon, Input, Button } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport './number-input.scss'\r\n\r\n// ** Keycode Vars\r\nconst KEYCODE_UP = 38\r\nconst KEYCODE_DOWN = 40\r\n\r\nconst NumberInput = props => {\r\n  // ** Props\r\n  const {\r\n    min,\r\n    max,\r\n    step,\r\n    size,\r\n    wrap,\r\n    value,\r\n    style,\r\n    upIcon,\r\n    disabled,\r\n    readonly,\r\n    onChange,\r\n    downIcon,\r\n    vertical,\r\n    className,\r\n    onDecrement,\r\n    onIncrement,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [count, setCount] = useState(value || min)\r\n\r\n  // ** Handle btn down click\r\n  const handleDecrement = () => {\r\n    if (!disabled && !readonly) {\r\n      // ** If count is equals or smaller than min then return and do nothing\r\n      if (!wrap && count <= min) {\r\n        return\r\n      }\r\n\r\n      // ** Returns the decreased count based on wrap & and min prop\r\n      const countCondition = () => {\r\n        if (count - step < min) {\r\n          if (wrap) {\r\n            return max\r\n          } else {\r\n            return min\r\n          }\r\n        } else {\r\n          return count - step\r\n        }\r\n      }\r\n\r\n      setCount(countCondition())\r\n\r\n      if (onDecrement) {\r\n        onIncrement(count)\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Handle btn up click\r\n  const handleIncrement = () => {\r\n    if (!disabled && !readonly) {\r\n      // ** If count is equals or larger than min then return and do nothing\r\n      if (!wrap && count >= max) {\r\n        return\r\n      }\r\n\r\n      // ** Returns the Increased count based on wrap & and max prop\r\n      const countCondition = () => {\r\n        if (count + step > max) {\r\n          if (wrap) {\r\n            return min\r\n          } else {\r\n            return max\r\n          }\r\n        } else {\r\n          return count + step\r\n        }\r\n      }\r\n\r\n      setCount(countCondition())\r\n\r\n      if (onIncrement) {\r\n        onIncrement(count)\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Handle input change\r\n  const handleInputChange = e => {\r\n    setCount(Number(e.target.value))\r\n  }\r\n\r\n  // ** Handle Arrow Up & Down\r\n  const handleKeyDown = e => {\r\n    e.preventDefault()\r\n    if (!readonly) {\r\n      if (e.keyCode === KEYCODE_UP) {\r\n        handleIncrement()\r\n      }\r\n      if (e.keyCode === KEYCODE_DOWN) {\r\n        handleDecrement()\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** UseEffect based on user passed onChange\r\n  useEffect(() => {\r\n    if (onChange) {\r\n      onChange(count)\r\n    }\r\n  }, [count])\r\n\r\n  return (\r\n    <InputGroup\r\n      className={classnames('number-input', {\r\n        disabled,\r\n        readonly,\r\n        [className]: className,\r\n        'vertical-number-input': vertical,\r\n        [`vertical-number-input-${size}`]: vertical && size\r\n      })}\r\n      {...(style ? { style } : {})}\r\n    >\r\n      <InputGroupAddon addonType='prepend' onClick={handleDecrement}>\r\n        <Button\r\n          className='btn-icon'\r\n          color='transparent'\r\n          {...(size ? { size } : {})}\r\n          disabled={(!wrap && count <= min) || disabled || readonly}\r\n        >\r\n          {downIcon}\r\n        </Button>\r\n      </InputGroupAddon>\r\n      <Input\r\n        {...rest}\r\n        type='number'\r\n        value={count}\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        onKeyDown={handleKeyDown}\r\n        onChange={handleInputChange}\r\n        className={classnames({\r\n          [inputClassName]: inputClassName\r\n        })}\r\n        {...(size ? { bsSize: size } : {})}\r\n      />\r\n      <InputGroupAddon addonType='append' onClick={handleIncrement}>\r\n        <Button\r\n          className='btn-icon'\r\n          color='transparent'\r\n          {...(size ? { size } : {})}\r\n          disabled={(!wrap && count >= max) || disabled || readonly}\r\n        >\r\n          {upIcon}\r\n        </Button>\r\n      </InputGroupAddon>\r\n    </InputGroup>\r\n  )\r\n}\r\n\r\nexport default NumberInput\r\n\r\n// ** Default Props\r\nNumberInput.defaultProps = {\r\n  min: 1,\r\n  step: 1,\r\n  wrap: false,\r\n  max: Infinity,\r\n  disabled: false,\r\n  readonly: false,\r\n  downIcon: <Minus size={14} />,\r\n  upIcon: <Plus size={14} />\r\n}\r\n\r\n// ** PropTypes\r\nNumberInput.propTypes = {\r\n  wrap: PropTypes.bool,\r\n  min: PropTypes.number,\r\n  max: PropTypes.number,\r\n  step: PropTypes.number,\r\n  value: PropTypes.number,\r\n  style: PropTypes.object,\r\n  vertical: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  readonly: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  upIcon: PropTypes.element,\r\n  downIcon: PropTypes.element,\r\n  className: PropTypes.string,\r\n  onDecrement: PropTypes.func,\r\n  onIncrement: PropTypes.func,\r\n  inputClassName: PropTypes.string,\r\n  size: PropTypes.oneOf(['sm', 'lg'])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}