{"ast":null,"code":"// ** Auth Endpoints\nexport default{loginEndpoint:'/jwt/login',registerEndpoint:'/jwt/register',refreshEndpoint:'/jwt/refresh-token',logoutEndpoint:'/jwt/logout',// ** This will be prefixed in authorization header with token\n// ? e.g. Authorization: Bearer <token>\ntokenType:'Bearer',// ** Value of this property will be used as key to store JWT token in storage\nstorageTokenKeyName:'accessToken',storageRefreshTokenKeyName:'refreshToken'};","map":{"version":3,"sources":["D:/nodejs/IMA/src/@core/auth/jwt/jwtDefaultConfig.js"],"names":["loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName"],"mappings":"AAAA;AACA,cAAe,CACbA,aAAa,CAAE,YADF,CAEbC,gBAAgB,CAAE,eAFL,CAGbC,eAAe,CAAE,oBAHJ,CAIbC,cAAc,CAAE,aAJH,CAMb;AACA;AACAC,SAAS,CAAE,QARE,CAUb;AACAC,mBAAmB,CAAE,aAXR,CAYbC,0BAA0B,CAAE,cAZf,CAAf","sourcesContent":["// ** Auth Endpoints\r\nexport default {\r\n  loginEndpoint: '/jwt/login',\r\n  registerEndpoint: '/jwt/register',\r\n  refreshEndpoint: '/jwt/refresh-token',\r\n  logoutEndpoint: '/jwt/logout',\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}