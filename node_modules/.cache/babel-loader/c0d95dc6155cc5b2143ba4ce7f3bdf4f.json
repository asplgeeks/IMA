{"ast":null,"code":"import _defineProperty from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt';\nimport axios from 'axios';\nvar config = useJwt.jwtConfig; // ** Handle User Login\n\nexport var handleLogin = function handleLogin(data) {\n  console.log(data);\n  return function (dispatch) {\n    var _dispatch;\n\n    return axios.push(\"http://172.105.49.15:3030/api/user/login_user\", {\n      \"mobile_number\": data.email,\n      \"password\": data.role\n    }), dispatch((_dispatch = {\n      type: 'LOGIN',\n      data: data,\n      config: config\n    }, _defineProperty(_dispatch, config.storageTokenKeyName, data[config.storageTokenKeyName]), _defineProperty(_dispatch, config.storageRefreshTokenKeyName, data[config.storageRefreshTokenKeyName]), _dispatch)); // ** Add to user, accessToken & refreshToken to localStorage\n\n    localStorage.setItem('userData', JSON.stringify(data));\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken));\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken));\n  };\n}; // ** Handle User Logout\n\nexport var handleLogout = function handleLogout() {\n  return function (dispatch) {\n    var _dispatch2;\n\n    dispatch((_dispatch2 = {\n      type: 'LOGOUT'\n    }, _defineProperty(_dispatch2, config.storageTokenKeyName, null), _defineProperty(_dispatch2, config.storageRefreshTokenKeyName, null), _dispatch2)); // ** Remove user, accessToken & refreshToken from localStorage\n\n    localStorage.removeItem('userData');\n    localStorage.removeItem(config.storageTokenKeyName);\n    localStorage.removeItem(config.storageRefreshTokenKeyName);\n  };\n};","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/redux/actions/auth/index.js"],"names":["useJwt","axios","config","jwtConfig","handleLogin","data","console","log","dispatch","push","email","role","type","storageTokenKeyName","storageRefreshTokenKeyName","localStorage","setItem","JSON","stringify","accessToken","refreshToken","handleLogout","removeItem"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAMC,MAAM,GAAGF,MAAM,CAACG,SAAtB,C,CAEA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO,UAAAG,QAAQ,EAAI;AAAA;;AACjB,WAAOP,KAAK,CAACQ,IAAN,kDAA4D;AAC/D,uBAAgBJ,IAAI,CAACK,KAD0C;AAE/D,kBAAWL,IAAI,CAACM;AAF+C,KAA5D,GAIPH,QAAQ;AACNI,MAAAA,IAAI,EAAE,OADA;AAENP,MAAAA,IAAI,EAAJA,IAFM;AAGNH,MAAAA,MAAM,EAANA;AAHM,kCAILA,MAAM,CAACW,mBAJF,EAIwBR,IAAI,CAACH,MAAM,CAACW,mBAAR,CAJ5B,8BAKLX,MAAM,CAACY,0BALF,EAK+BT,IAAI,CAACH,MAAM,CAACY,0BAAR,CALnC,cAJR,CADiB,CAajB;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAjC;AACAU,IAAAA,YAAY,CAACC,OAAb,CAAqBd,MAAM,CAACW,mBAA5B,EAAiDI,IAAI,CAACC,SAAL,CAAeb,IAAI,CAACc,WAApB,CAAjD;AACAJ,IAAAA,YAAY,CAACC,OAAb,CAAqBd,MAAM,CAACY,0BAA5B,EAAwDG,IAAI,CAACC,SAAL,CAAeb,IAAI,CAACe,YAApB,CAAxD;AACD,GAjBD;AAkBD,CApBM,C,CAsBP;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO,UAAAb,QAAQ,EAAI;AAAA;;AACjBA,IAAAA,QAAQ;AAAGI,MAAAA,IAAI,EAAE;AAAT,mCAAoBV,MAAM,CAACW,mBAA3B,EAAiD,IAAjD,+BAAwDX,MAAM,CAACY,0BAA/D,EAA4F,IAA5F,eAAR,CADiB,CAGjB;;AACAC,IAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AACAP,IAAAA,YAAY,CAACO,UAAb,CAAwBpB,MAAM,CAACW,mBAA/B;AACAE,IAAAA,YAAY,CAACO,UAAb,CAAwBpB,MAAM,CAACY,0BAA/B;AACD,GAPD;AAQD,CATM","sourcesContent":["// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\nimport axios from 'axios'\nconst config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  console.log(data)\n  return dispatch => {\n    return axios.push(`http://172.105.49.15:3030/api/user/login_user`, {\n        \"mobile_number\":data.email,\n        \"password\":data.role\n    }),\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}