{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\views\\\\pages\\\\authentication\\\\Login.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// import { useState, useContext, Fragment, useEffect } from 'react'\n// import classnames from 'classnames'\n// import Avatar from '@components/avatar'\n// import { useSkin } from '@hooks/useSkin'\n// import useJwt from '@src/auth/jwt/useJwt'\n// import { useDispatch } from 'react-redux'\n// import { useForm } from 'react-hook-form'\n// import { toast, Slide } from 'react-toastify'\n// import { handleLogin } from '@store/actions/auth'\n// import { AbilityContext } from '@src/utility/context/Can'\n// import { Link, useHistory } from 'react-router-dom'\n// import InputPasswordToggle from '@components/input-password-toggle'\n// import { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\n// import { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\n// import {\n//   Alert,\n//   Row,\n//   Col,\n//   CardTitle,\n//   CardText,\n//   Form,\n//   Input,\n//   FormGroup,\n//   Label,\n//   CustomInput,\n//   Button,\n//   UncontrolledTooltip\n// } from 'reactstrap'\n// import axios from 'axios'\n// import '@styles/base/pages/page-auth.scss'\n// import 'react-toastify/dist/ReactToastify.css'\n// import app from '../../../base'\n// import { getAuth, signInWithCustomToken } from \"firebase/auth\"\n// // import { AuthContext } from '../../../Auth'\n// const loginAuthID = localStorage.getItem('loginId')\n// const ToastContent = ({ name, role }) => (\n//   <Fragment>\n//     <div className='toastify-header'>\n//       <div className='title-wrapper'>\n//         <Avatar size='sm' color='warning' icon={<Coffee size={12} />} />\n//         <h6 className='toast-title font-weight-bold' style={{color:\"#ffffff\"}}> {name}</h6>\n//       </div>\n//     </div>\n//     {/* <div className='toastify-body'>\n//       <span>You have successfully logged in as an {role}. Now you can start to explore. Enjoy!</span>\n//     </div> */}\n//   </Fragment>\n// )\n// const Login = props => {\n//   const [skin, setSkin] = useSkin()\n//   const ability = useContext(AbilityContext)\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n//   const [phone, setPhone] = useState('')\n//   const [password, setPassword] = useState('')\n//   const [mobileexist, setExistMobile] = useState()\n// const [logindata, setLoginData] = useState()\n//   const { register, errors, handleSubmit } = useForm()\n//   const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n//     source = require(`@src/assets/images/pages/${illustration}`).default\n// console.log(phone)\n// console.log(mobileexist)\n// if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password === null) {\n//   const sendotp = 'http://172.105.49.15:3030/api/user/send_otp'\n//   axios.post(sendotp, {\n//     mobile_number: phone.toString()\n//   })\n//   .then(r => {\n//     console.log(r)\n//     toast(\n//       <ToastContent name={r.data.message} role={''} />,\n//         { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n//     )\n//     props.history.push({pathname:'/login-otp',\n//   state:{\n//     id : mobileexist.data.data._id,\n//     mobile : phone\n//   }\n// })\n//     // setExistMobile(r)\n//   })\n//  } \n// const handlePhone = (e) => {\n//   setPhone(e.target.value)\n//   e.preventDefault()\n// }\n//   const checkmobiurl = 'http://172.105.49.15:3030/api/user/check_mobile_number_exist'\n//   useEffect(() => {\n//     axios.post(checkmobiurl, {\n//       mobile_number: phone.toString()\n//     })\n//     .then(r => {\n//       console.log(r)\n//       setExistMobile(r)\n//     })\n//   }, [phone])\n//     // localStorage.setItem('loginId', mobileexist && mobileexist.data && mobileexist.data._id)\n// const authIdToken = \"\"\n//   const onSubmit = (data) => {\n//     setLoginData(data)\n//     if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null) {\n//     dispatch(handleLogin(data, props))\n//     }\n//     data = {role : \"admin\"}\n//     history.push(getHomeRouteForLoggedInUser(data.role))\n//     // dispatch(handleLogin(data, props))\n//     // if (isObjEmpty(errors)) {\n//     //   useJwt\n//     //     .login({ phone, password })\n//     //     .then(res => {\n//     //       const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\n//     //       // dispatch(handleLogin(data))\n//     //       ability.update(res.data.userData.ability)\n//     //       // toast.success(\n//     //       //   <ToastContent name={data.fullName || data.username || 'John Doe'} role={data.role || 'admin'} />,\n//     //       //   { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n//     //       // )\n//     //     })\n//     //     .catch(err => {\n//     //       console.log(err.message)\n//     //       toast.error(\n//     //         <ToastContent name={\"Incorrect user number or password\"} role={''} />,\n//     //           { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n//     //       )\n//     //     })\n//     // }\n//   }\n//   return (\n//     <div className='auth-wrapper auth-v2'>\n//       <Row className='auth-inner m-0'>\n//         <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n//         </Link>\n//         <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n//           <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n//             <img className='img-fluid' src={source} alt='Login V2' />\n//           </div>\n//         </Col>\n//         <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n//           <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n//             <h1 style={{textShadow:\"2px 1px\", color:\"rgb(230,46,45)\", fontSize:\"35px\", fontWeight:300}}> Star Engineers</h1>\n//             <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\n//             <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n//               <FormGroup>\n//                 <Label className='form-label' for='login-phone'>\n//                 Mobile Number\n//                 </Label>\n//                 <Input\n//                   autoFocus\n//                   type='text'\n//                   value={phone}\n//                   id='login_phone'\n//                   name='login_phone'\n//                   placeholder='Enter Mobile Number'\n//                   maxLength=\"10\"\n//                   onChange={e => handlePhone(e)}\n//                   // className={classnames({ 'is-invalid': errors['login_phone'] })}\n//                   innerRef={register({ \n//                     required: true,\n//                     pattern:{value:/[1-9]{1}[0-9]{9}/,\n//                     message:\"please enter your 10 digit mobile number\"}\n//                  })}\n//                 />\n//                  {/* {errors.login_phone && <p style={{color:\"red\"}}>{errors.login_phone.message}</p>} */}\n//                  {errors.login_phone && errors.login_phone.type === 'required' && <p style={{color:\"red\"}}>Mobile Number is require</p>}\n//                  {/* {  phone ? mobileexist && mobileexist.data && mobileexist.data.data === null ? <p style={{color:\"red\"}}>Mobile Number Not Exist</p> : \"\" : \"\"} */}\n//               </FormGroup> \n//               { mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null ? <FormGroup>\n//                 <div className='d-flex justify-content-between'>\n//                   <Label className='form-label' for='login-password'>\n//                     Password\n//                   </Label>\n//                 </div>\n//                 <InputPasswordToggle\n//                   value={password}\n//                   id='login_password'\n//                   name='login_password'\n//                   className='input-group-merge'\n//                   onChange={e => setPassword(e.target.value)}\n//                   // className={classnames({ 'is-invalid': errors['login_password'] })}\n//                   innerRef={register({ \n//                     required: true,\n//                     message:\"please enter your valid password\"\n//                   })}\n//                 />\n//                   {errors.login_password && <p style={{color:\"red\"}}>{errors.login_password.message}</p>}\n//               </FormGroup> : \" \"\n//               }\n//               <Button.Ripple type='submit' color='primary' block>\n//                 Sign in\n//               </Button.Ripple>\n//             </Form>\n//             <p className='text-right mt-2'>\n//               <Link to='/forgot-password'>\n//                 <span>Forgot Password ?</span>\n//               </Link>\n//             </p>\n//           </Col>\n//         </Col>\n//       </Row>\n//     </div>\n//   )\n// }\n// export default Login\nimport { useState, useContext, Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather';\nimport InputPasswordToggle from '@components/input-password-toggle';\nimport { Card, CardBody, CardTitle, CardText, Form, FormGroup, Label, Input, CustomInput, Button } from 'reactstrap';\nimport '@styles/base/pages/page-auth.scss';\nimport logo from \"../../../Images/logo.svg\";\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar LoginV1 = function LoginV1() {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data); // setLoginData(data)\n    // if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null) {\n    // dispatch(handleLogin(data, props))\n    // }\n\n    data = {\n      role: \"admin\"\n    };\n    history.push(getHomeRouteForLoggedInUser(data.role));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper auth-v1 px-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner py-2\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-0\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"brand-logo\",\n            to: \"/\",\n            onClick: function onClick(e) {\n              return e.preventDefault();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              height: \"40px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"auth-login-form mt-2\",\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-label\",\n                for: \"login-email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                autoFocus: true,\n                type: \"text\",\n                value: phone,\n                id: \"login_phone\",\n                name: \"login_phone\",\n                placeholder: \"Enter Mobile Number\",\n                maxLength: \"10\",\n                onChange: function onChange(e) {\n                  return handlePhone(e);\n                } // className={classnames({ 'is-invalid': errors['login_phone'] })}\n                ,\n                innerRef: register({\n                  required: true,\n                  pattern: {\n                    value: /[1-9]{1}[0-9]{9}/,\n                    message: \"please enter your 10 digit mobile number\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, _this), errors.login_phone && errors.login_phone.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Mobile Number is require\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 83\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between\",\n                children: /*#__PURE__*/_jsxDEV(Label, {\n                  className: \"form-label\",\n                  for: \"login-password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(InputPasswordToggle, {\n                value: password,\n                id: \"login_password\",\n                name: \"login_password\",\n                className: \"input-group-merge\",\n                onChange: function onChange(e) {\n                  return setPassword(e.target.value);\n                } // className={classnames({ 'is-invalid': errors['login_password'] })}\n                ,\n                innerRef: register({\n                  required: true,\n                  message: \"please enter your valid password\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, _this), errors.login_password && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors.login_password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 45\n              }, _this), \"              \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n                type: \"checkbox\",\n                className: \"custom-control-Primary\",\n                id: \"remember-me\",\n                label: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"By continuing you agree to \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/pages\",\n                  style: {\n                    color: \"#ed1d25\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Terms & Conditions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 17\n                  }, _this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 144\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 109\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n              type: \"submit\",\n              className: \"sign_in_btn\",\n              block: true,\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LoginV1, \"CvCMr/aFHOfjpy7piEeMvygciec=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginV1;\nexport default LoginV1;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginV1\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/pages/authentication/Login.js"],"names":["useState","useContext","Fragment","useEffect","Link","Facebook","Twitter","Mail","GitHub","InputPasswordToggle","Card","CardBody","CardTitle","CardText","Form","FormGroup","Label","Input","CustomInput","Button","useForm","LoginV1","register","errors","handleSubmit","onSubmit","data","console","log","role","history","push","getHomeRouteForLoggedInUser","e","preventDefault","logo","phone","handlePhone","required","pattern","value","message","login_phone","type","color","password","setPassword","target","login_password"],"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","sourcesContent":["// import { useState, useContext, Fragment, useEffect } from 'react'\r\n// import classnames from 'classnames'\r\n// import Avatar from '@components/avatar'\r\n// import { useSkin } from '@hooks/useSkin'\r\n// import useJwt from '@src/auth/jwt/useJwt'\r\n// import { useDispatch } from 'react-redux'\r\n// import { useForm } from 'react-hook-form'\r\n// import { toast, Slide } from 'react-toastify'\r\n// import { handleLogin } from '@store/actions/auth'\r\n// import { AbilityContext } from '@src/utility/context/Can'\r\n// import { Link, useHistory } from 'react-router-dom'\r\n// import InputPasswordToggle from '@components/input-password-toggle'\r\n// import { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\r\n// import { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\r\n// import {\r\n//   Alert,\r\n//   Row,\r\n//   Col,\r\n//   CardTitle,\r\n//   CardText,\r\n//   Form,\r\n//   Input,\r\n//   FormGroup,\r\n//   Label,\r\n//   CustomInput,\r\n//   Button,\r\n//   UncontrolledTooltip\r\n// } from 'reactstrap'\r\n// import axios from 'axios'\r\n// import '@styles/base/pages/page-auth.scss'\r\n// import 'react-toastify/dist/ReactToastify.css'\r\n// import app from '../../../base'\r\n// import { getAuth, signInWithCustomToken } from \"firebase/auth\"\r\n// // import { AuthContext } from '../../../Auth'\r\n// const loginAuthID = localStorage.getItem('loginId')\r\n\r\n// const ToastContent = ({ name, role }) => (\r\n//   <Fragment>\r\n//     <div className='toastify-header'>\r\n//       <div className='title-wrapper'>\r\n//         <Avatar size='sm' color='warning' icon={<Coffee size={12} />} />\r\n//         <h6 className='toast-title font-weight-bold' style={{color:\"#ffffff\"}}> {name}</h6>\r\n//       </div>\r\n//     </div>\r\n//     {/* <div className='toastify-body'>\r\n//       <span>You have successfully logged in as an {role}. Now you can start to explore. Enjoy!</span>\r\n//     </div> */}\r\n//   </Fragment>\r\n// )\r\n\r\n// const Login = props => {\r\n//   const [skin, setSkin] = useSkin()\r\n//   const ability = useContext(AbilityContext)\r\n//   const dispatch = useDispatch()\r\n//   const history = useHistory()\r\n//   const [phone, setPhone] = useState('')\r\n//   const [password, setPassword] = useState('')\r\n//   const [mobileexist, setExistMobile] = useState()\r\n// const [logindata, setLoginData] = useState()\r\n//   const { register, errors, handleSubmit } = useForm()\r\n//   const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n//     source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n// console.log(phone)\r\n// console.log(mobileexist)\r\n\r\n// if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password === null) {\r\n//   const sendotp = 'http://172.105.49.15:3030/api/user/send_otp'\r\n//   axios.post(sendotp, {\r\n//     mobile_number: phone.toString()\r\n//   })\r\n//   .then(r => {\r\n//     console.log(r)\r\n//     toast(\r\n//       <ToastContent name={r.data.message} role={''} />,\r\n//         { transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n//     )\r\n//     props.history.push({pathname:'/login-otp',\r\n//   state:{\r\n//     id : mobileexist.data.data._id,\r\n//     mobile : phone\r\n//   }\r\n// })\r\n//     // setExistMobile(r)\r\n//   })\r\n//  } \r\n// const handlePhone = (e) => {\r\n//   setPhone(e.target.value)\r\n//   e.preventDefault()\r\n// }\r\n\r\n//   const checkmobiurl = 'http://172.105.49.15:3030/api/user/check_mobile_number_exist'\r\n//   useEffect(() => {\r\n//     axios.post(checkmobiurl, {\r\n//       mobile_number: phone.toString()\r\n//     })\r\n//     .then(r => {\r\n//       console.log(r)\r\n//       setExistMobile(r)\r\n//     })\r\n//   }, [phone])\r\n\r\n//     // localStorage.setItem('loginId', mobileexist && mobileexist.data && mobileexist.data._id)\r\n\r\n// const authIdToken = \"\"\r\n//   const onSubmit = (data) => {\r\n//     setLoginData(data)\r\n//     if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null) {\r\n//     dispatch(handleLogin(data, props))\r\n//     }\r\n//     data = {role : \"admin\"}\r\n//     history.push(getHomeRouteForLoggedInUser(data.role))\r\n//     // dispatch(handleLogin(data, props))\r\n//     // if (isObjEmpty(errors)) {\r\n//     //   useJwt\r\n//     //     .login({ phone, password })\r\n//     //     .then(res => {\r\n//     //       const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\r\n//     //       // dispatch(handleLogin(data))\r\n//     //       ability.update(res.data.userData.ability)\r\n//     //       // toast.success(\r\n//     //       //   <ToastContent name={data.fullName || data.username || 'John Doe'} role={data.role || 'admin'} />,\r\n//     //       //   { transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n//     //       // )\r\n//     //     })\r\n//     //     .catch(err => {\r\n//     //       console.log(err.message)\r\n//     //       toast.error(\r\n//     //         <ToastContent name={\"Incorrect user number or password\"} role={''} />,\r\n//     //           { transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n//     //       )\r\n//     //     })\r\n//     // }\r\n//   }\r\n\r\n//   return (\r\n//     <div className='auth-wrapper auth-v2'>\r\n//       <Row className='auth-inner m-0'>\r\n//         <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n//         </Link>\r\n//         <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n//           <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n//             <img className='img-fluid' src={source} alt='Login V2' />\r\n//           </div>\r\n//         </Col>\r\n//         <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n//           <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n//             <h1 style={{textShadow:\"2px 1px\", color:\"rgb(230,46,45)\", fontSize:\"35px\", fontWeight:300}}> Star Engineers</h1>\r\n//             <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\r\n          \r\n//             <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n//               <FormGroup>\r\n//                 <Label className='form-label' for='login-phone'>\r\n//                 Mobile Number\r\n//                 </Label>\r\n//                 <Input\r\n//                   autoFocus\r\n//                   type='text'\r\n//                   value={phone}\r\n//                   id='login_phone'\r\n//                   name='login_phone'\r\n//                   placeholder='Enter Mobile Number'\r\n//                   maxLength=\"10\"\r\n//                   onChange={e => handlePhone(e)}\r\n//                   // className={classnames({ 'is-invalid': errors['login_phone'] })}\r\n//                   innerRef={register({ \r\n//                     required: true,\r\n//                     pattern:{value:/[1-9]{1}[0-9]{9}/,\r\n//                     message:\"please enter your 10 digit mobile number\"}\r\n//                  })}\r\n//                 />\r\n//                  {/* {errors.login_phone && <p style={{color:\"red\"}}>{errors.login_phone.message}</p>} */}\r\n//                  {errors.login_phone && errors.login_phone.type === 'required' && <p style={{color:\"red\"}}>Mobile Number is require</p>}\r\n//                  {/* {  phone ? mobileexist && mobileexist.data && mobileexist.data.data === null ? <p style={{color:\"red\"}}>Mobile Number Not Exist</p> : \"\" : \"\"} */}\r\n//               </FormGroup> \r\n\r\n//               { mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null ? <FormGroup>\r\n//                 <div className='d-flex justify-content-between'>\r\n//                   <Label className='form-label' for='login-password'>\r\n//                     Password\r\n//                   </Label>\r\n                 \r\n//                 </div>\r\n//                 <InputPasswordToggle\r\n//                   value={password}\r\n//                   id='login_password'\r\n//                   name='login_password'\r\n//                   className='input-group-merge'\r\n//                   onChange={e => setPassword(e.target.value)}\r\n//                   // className={classnames({ 'is-invalid': errors['login_password'] })}\r\n//                   innerRef={register({ \r\n//                     required: true,\r\n//                     message:\"please enter your valid password\"\r\n//                   })}\r\n//                 />\r\n//                   {errors.login_password && <p style={{color:\"red\"}}>{errors.login_password.message}</p>}\r\n//               </FormGroup> : \" \"\r\n//               }\r\n             \r\n//               <Button.Ripple type='submit' color='primary' block>\r\n//                 Sign in\r\n//               </Button.Ripple>\r\n//             </Form>\r\n//             <p className='text-right mt-2'>\r\n       \r\n//               <Link to='/forgot-password'>\r\n//                 <span>Forgot Password ?</span>\r\n//               </Link>\r\n//             </p>\r\n          \r\n//           </Col>\r\n//         </Col>\r\n//       </Row>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Login\r\n\r\nimport { useState, useContext, Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { Card, CardBody, CardTitle, CardText, Form, FormGroup, Label, Input, CustomInput, Button } from 'reactstrap'\r\nimport '@styles/base/pages/page-auth.scss'\r\nimport logo  from '../../../Images/logo.svg'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst LoginV1 = () => {\r\n  const { register, errors, handleSubmit } = useForm()\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    // setLoginData(data)\r\n    // if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null) {\r\n    // dispatch(handleLogin(data, props))\r\n    // }\r\n    data = {role : \"admin\"}\r\n    history.push(getHomeRouteForLoggedInUser(data.role))\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-v1 px-2'>\r\n      <div className='auth-inner py-2'>\r\n        <Card className='mb-0' >\r\n          <CardBody>\r\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n              <img src={logo}  height=\"40px\" ></img>\r\n            {/* {logo} */}\r\n              {/* <h2 className='brand-text text-primary ml-1'>Vuexy</h2> */}\r\n            </Link>\r\n            {/* <CardTitle tag='h4' className='mb-1'>\r\n              Welcome to Vuexy! 👋\r\n            </CardTitle> */}\r\n            {/* <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText> */}\r\n\r\n            <Form className='auth-login-form mt-2'  onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                  Email\r\n                </Label>\r\n                {/* <Input type='email' id='login-email' placeholder='Enter your registered email-id' autoFocus /> */}\r\n                <Input\r\n                  autoFocus\r\n                  type='text'\r\n                  value={phone}\r\n                  id='login_phone'\r\n                  name='login_phone'\r\n                  placeholder='Enter Mobile Number'\r\n                  maxLength=\"10\"\r\n                  onChange={e => handlePhone(e)}\r\n                  // className={classnames({ 'is-invalid': errors['login_phone'] })}\r\n                  innerRef={register({ \r\n                    required: true,\r\n                    pattern:{value:/[1-9]{1}[0-9]{9}/,\r\n                    message:\"please enter your 10 digit mobile number\"}\r\n                 })}\r\n                />\r\n                 {/* {errors.login_phone && <p style={{color:\"red\"}}>{errors.login_phone.message}</p>} */}\r\n                 {errors.login_phone && errors.login_phone.type === 'required' && <p style={{color:\"red\"}}>Mobile Number is require</p>}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                </div>\r\n                <InputPasswordToggle\r\n                  value={password}\r\n                  id='login_password'\r\n                  name='login_password'\r\n                  className='input-group-merge'\r\n                  onChange={e => setPassword(e.target.value)}\r\n                  // className={classnames({ 'is-invalid': errors['login_password'] })}\r\n                  innerRef={register({ \r\n                    required: true,\r\n                    message:\"please enter your valid password\"\r\n                  })}\r\n                />\r\n                  {errors.login_password && <p style={{color:\"red\"}}>{errors.login_password.message}</p>}              </FormGroup>\r\n              <FormGroup className=\"d-flex\">\r\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='' /><label >By continuing you agree to <Link to='/pages' style={{color:\"#ed1d25\" }}>\r\n                <span>Terms & Conditions</span> </Link></label>\r\n              </FormGroup>\r\n              <Button.Ripple    type='submit' className=\"sign_in_btn\" block>\r\n                Sign in\r\n              </Button.Ripple>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginV1\r\n"]},"metadata":{},"sourceType":"module"}