{"ast":null,"code":"import axios from 'axios'; // ** Get Tasks\n\nexport var getTasks = function getTasks(params) {\n  return function (dispatch) {\n    return axios.get('/apps/todo/tasks', {\n      params: params\n    }).then(function (res) {\n      dispatch({\n        type: 'GET_TASKS',\n        tasks: res.data,\n        params: params\n      });\n    });\n  };\n}; // ** Re-order Tasks on drag\n\nexport var reOrderTasks = function reOrderTasks(tasks) {\n  return function (dispatch) {\n    return dispatch({\n      type: 'REORDER_TASKS',\n      tasks: tasks\n    });\n  };\n}; // ** ADD Task\n\nexport var addTask = function addTask(task) {\n  return function (dispatch, getState) {\n    axios.post('/apps/todo/add-tasks', {\n      task: task\n    }).then(function (res) {\n      dispatch({\n        type: 'ADD_TASK',\n        task: res.data\n      });\n    }).then(dispatch(getTasks(getState().todo.params)));\n  };\n}; // ** Update Tasks\n\nexport var updateTask = function updateTask(task) {\n  return function (dispatch, getState) {\n    axios.post('/apps/todo/update-task', {\n      task: task\n    }).then(function (res) {\n      dispatch({\n        type: 'UPDATE_TASK',\n        task: res.data\n      });\n    }).then(dispatch(getTasks(getState().todo.params)));\n  };\n}; // ** Delete Task\n\nexport var deleteTask = function deleteTask(taskId) {\n  return function (dispatch, getState) {\n    axios.delete('/apps/todo/delete-task', {\n      taskId: taskId\n    }).then(function (res) {\n      dispatch({\n        type: 'DELETE_TASK',\n        task: res.data\n      });\n    }).then(function () {\n      return dispatch(getTasks(getState().todo.params));\n    });\n  };\n}; // ** Select Task\n\nexport var selectTask = function selectTask(task) {\n  return function (dispatch) {\n    return dispatch({\n      type: 'SELECT_TASK',\n      task: task\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/views/apps/todo/store/actions/index.js"],"names":["axios","getTasks","params","dispatch","get","then","res","type","tasks","data","reOrderTasks","addTask","task","getState","post","todo","updateTask","deleteTask","taskId","delete","selectTask"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\n// ** Get Tasks\nexport const getTasks = params => {\n  return dispatch => {\n    return axios.get('/apps/todo/tasks', { params }).then(res => {\n      dispatch({\n        type: 'GET_TASKS',\n        tasks: res.data,\n        params\n      })\n    })\n  }\n}\n\n// ** Re-order Tasks on drag\nexport const reOrderTasks = tasks => dispatch => dispatch({ type: 'REORDER_TASKS', tasks })\n\n// ** ADD Task\nexport const addTask = task => {\n  return (dispatch, getState) => {\n    axios\n      .post('/apps/todo/add-tasks', { task })\n      .then(res => {\n        dispatch({\n          type: 'ADD_TASK',\n          task: res.data\n        })\n      })\n      .then(dispatch(getTasks(getState().todo.params)))\n  }\n}\n\n// ** Update Tasks\nexport const updateTask = task => {\n  return (dispatch, getState) => {\n    axios\n      .post('/apps/todo/update-task', { task })\n      .then(res => {\n        dispatch({\n          type: 'UPDATE_TASK',\n          task: res.data\n        })\n      })\n      .then(dispatch(getTasks(getState().todo.params)))\n  }\n}\n\n// ** Delete Task\nexport const deleteTask = taskId => {\n  return (dispatch, getState) => {\n    axios\n      .delete('/apps/todo/delete-task', { taskId })\n      .then(res => {\n        dispatch({\n          type: 'DELETE_TASK',\n          task: res.data\n        })\n      })\n      .then(() => dispatch(getTasks(getState().todo.params)))\n  }\n}\n\n// ** Select Task\nexport const selectTask = task => dispatch => dispatch({ type: 'SELECT_TASK', task })\n"]},"metadata":{},"sourceType":"module"}