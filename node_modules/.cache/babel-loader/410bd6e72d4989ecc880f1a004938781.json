{"ast":null,"code":"import _objectSpread from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"children\", \"onClick\"];\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\@core\\\\components\\\\ripple-button\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, useEffect } from 'react'; // ** Third Party Components\n\nimport { Button } from 'reactstrap';\nimport classnames from 'classnames'; // ** Styles\n\nimport './ripple-button.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar RippleButton = function RippleButton(_ref) {\n  _s();\n\n  var className = _ref.className,\n      children = _ref.children,\n      _onClick = _ref.onClick,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  // ** States\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      mounted = _useState2[0],\n      setMounted = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRippling = _useState4[0],\n      setIsRippling = _useState4[1];\n\n  var _useState5 = useState({\n    x: -1,\n    y: -1\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      coords = _useState6[0],\n      setCoords = _useState6[1]; // ** Toggle mounted on mount & unmount\n\n\n  useEffect(function () {\n    setMounted(true);\n    return function () {\n      return setMounted(false);\n    };\n  }, []); // ** Check for coords and set ripple\n\n  useEffect(function () {\n    if (mounted) {\n      if (coords.x !== -1 && coords.y !== -1) {\n        setIsRippling(true);\n        setTimeout(function () {\n          return setIsRippling(false);\n        }, 500);\n      } else {\n        setIsRippling(false);\n      }\n    }\n  }, [coords]); // ** Reset Coords on ripple end\n\n  useEffect(function () {\n    if (mounted) {\n      if (!isRippling) setCoords({\n        x: -1,\n        y: -1\n      });\n    }\n  }, [isRippling]);\n  return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n    className: classnames('waves-effect', _defineProperty({}, className, className)),\n    onClick: function onClick(e) {\n      var rect = e.target.getBoundingClientRect();\n      setCoords({\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top\n      });\n\n      if (_onClick) {\n        _onClick(e);\n      }\n    }\n  }, rest), {}, {\n    children: [children, isRippling ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"waves-ripple\",\n      style: {\n        left: coords.x,\n        top: coords.y\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, _this) : null]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n}; // ** PropTypes\n\n\n_s(RippleButton, \"qCltj9y2lZHuWdOpy5TOEEQ4YnU=\");\n\n_c = RippleButton;\nRippleButton.propTypes = _objectSpread({}, Button.propTypes);\nButton.Ripple = RippleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RippleButton\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/@core/components/ripple-button/index.js"],"names":["useState","useEffect","Button","classnames","RippleButton","className","children","onClick","rest","mounted","setMounted","isRippling","setIsRippling","x","y","coords","setCoords","setTimeout","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","propTypes","Ripple"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport { Button } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\n// ** Styles\r\nimport './ripple-button.scss'\r\n\r\nconst RippleButton = ({ className, children, onClick, ...rest }) => {\r\n  // ** States\r\n  const [mounted, setMounted] = useState(false)\r\n  const [isRippling, setIsRippling] = useState(false)\r\n  const [coords, setCoords] = useState({ x: -1, y: -1 })\r\n\r\n  // ** Toggle mounted on mount & unmount\r\n  useEffect(() => {\r\n    setMounted(true)\r\n    return () => setMounted(false)\r\n  }, [])\r\n\r\n  // ** Check for coords and set ripple\r\n  useEffect(() => {\r\n    if (mounted) {\r\n      if (coords.x !== -1 && coords.y !== -1) {\r\n        setIsRippling(true)\r\n        setTimeout(() => setIsRippling(false), 500)\r\n      } else {\r\n        setIsRippling(false)\r\n      }\r\n    }\r\n  }, [coords])\r\n\r\n  // ** Reset Coords on ripple end\r\n  useEffect(() => {\r\n    if (mounted) {\r\n      if (!isRippling) setCoords({ x: -1, y: -1 })\r\n    }\r\n  }, [isRippling])\r\n\r\n  return (\r\n    <Button\r\n      className={classnames('waves-effect', {\r\n        [className]: className\r\n      })}\r\n      onClick={e => {\r\n        const rect = e.target.getBoundingClientRect()\r\n        setCoords({ x: e.clientX - rect.left, y: e.clientY - rect.top })\r\n        if (onClick) {\r\n          onClick(e)\r\n        }\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n      {isRippling ? (\r\n        <span\r\n          className='waves-ripple'\r\n          style={{\r\n            left: coords.x,\r\n            top: coords.y\r\n          }}\r\n        ></span>\r\n      ) : null}\r\n    </Button>\r\n  )\r\n}\r\n\r\n// ** PropTypes\r\nRippleButton.propTypes = {\r\n  ...Button.propTypes\r\n}\r\n\r\nButton.Ripple = RippleButton\r\n"]},"metadata":{},"sourceType":"module"}