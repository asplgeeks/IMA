{"ast":null,"code":"import _slicedToArray from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// ** React Imports\nimport{useState,createContext}from'react';// ** Intl Provider Import\nimport{IntlProvider}from'react-intl';// ** Core Language Data\nimport messagesEn from'@assets/data/locales/en.json';import messagesDe from'@assets/data/locales/de.json';import messagesFr from'@assets/data/locales/fr.json';import messagesPt from'@assets/data/locales/pt.json';// ** User Language Data\nimport userMessagesEn from'@src/assets/data/locales/en.json';import userMessagesDe from'@src/assets/data/locales/de.json';import userMessagesFr from'@src/assets/data/locales/fr.json';import userMessagesPt from'@src/assets/data/locales/pt.json';// ** Menu msg obj\nimport{jsx as _jsx}from\"react/jsx-runtime\";var menuMessages={en:_objectSpread(_objectSpread({},messagesEn),userMessagesEn),de:_objectSpread(_objectSpread({},messagesDe),userMessagesDe),fr:_objectSpread(_objectSpread({},messagesFr),userMessagesFr),pt:_objectSpread(_objectSpread({},messagesPt),userMessagesPt)};// ** Create Context\nvar Context=/*#__PURE__*/createContext();var IntlProviderWrapper=function IntlProviderWrapper(_ref){var children=_ref.children;// ** States\nvar _useState=useState('en'),_useState2=_slicedToArray(_useState,2),locale=_useState2[0],setLocale=_useState2[1];var _useState3=useState(menuMessages['en']),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];// ** Switches Language\nvar switchLanguage=function switchLanguage(lang){setLocale(lang);setMessages(menuMessages[lang]);};return/*#__PURE__*/_jsx(Context.Provider,{value:{locale:locale,switchLanguage:switchLanguage},children:/*#__PURE__*/_jsx(IntlProvider,{locale:locale,messages:messages,defaultLocale:\"en\",children:children},locale)});};export{IntlProviderWrapper,Context as IntlContext};","map":{"version":3,"sources":["D:/nodejs/IMA/src/utility/context/Internationalization.js"],"names":["useState","createContext","IntlProvider","messagesEn","messagesDe","messagesFr","messagesPt","userMessagesEn","userMessagesDe","userMessagesFr","userMessagesPt","menuMessages","en","de","fr","pt","Context","IntlProviderWrapper","children","locale","setLocale","messages","setMessages","switchLanguage","lang","IntlContext"],"mappings":"uQAAA;AACA,OAASA,QAAT,CAAmBC,aAAnB,KAAwC,OAAxC,CAEA;AACA,OAASC,YAAT,KAA6B,YAA7B,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA;AACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CAEA;2CACA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,EAAE,gCAAOT,UAAP,EAAsBI,cAAtB,CADiB,CAEnBM,EAAE,gCAAOT,UAAP,EAAsBI,cAAtB,CAFiB,CAGnBM,EAAE,gCAAOT,UAAP,EAAsBI,cAAtB,CAHiB,CAInBM,EAAE,gCAAOT,UAAP,EAAsBI,cAAtB,CAJiB,CAArB,CAOA;AACA,GAAMM,CAAAA,OAAO,cAAGf,aAAa,EAA7B,CAEA,GAAMgB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC5C;AACA,cAA4BlB,QAAQ,CAAC,IAAD,CAApC,wCAAOmB,MAAP,eAAeC,SAAf,eACA,eAAgCpB,QAAQ,CAACW,YAAY,CAAC,IAAD,CAAb,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eAEA;AACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,IAAI,CAAI,CAC7BJ,SAAS,CAACI,IAAD,CAAT,CACAF,WAAW,CAACX,YAAY,CAACa,IAAD,CAAb,CAAX,CACD,CAHD,CAKA,mBACE,KAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAE,CAAEL,MAAM,CAANA,MAAF,CAAUI,cAAc,CAAdA,cAAV,CAAzB,uBACE,KAAC,YAAD,EAA2B,MAAM,CAAEJ,MAAnC,CAA2C,QAAQ,CAAEE,QAArD,CAA+D,aAAa,CAAC,IAA7E,UACGH,QADH,EAAmBC,MAAnB,CADF,EADF,CAOD,CAlBD,CAoBA,OAASF,mBAAT,CAA8BD,OAAO,GAAIS,CAAAA,WAAzC","sourcesContent":["// ** React Imports\r\nimport { useState, createContext } from 'react'\r\n\r\n// ** Intl Provider Import\r\nimport { IntlProvider } from 'react-intl'\r\n\r\n// ** Core Language Data\r\nimport messagesEn from '@assets/data/locales/en.json'\r\nimport messagesDe from '@assets/data/locales/de.json'\r\nimport messagesFr from '@assets/data/locales/fr.json'\r\nimport messagesPt from '@assets/data/locales/pt.json'\r\n\r\n// ** User Language Data\r\nimport userMessagesEn from '@src/assets/data/locales/en.json'\r\nimport userMessagesDe from '@src/assets/data/locales/de.json'\r\nimport userMessagesFr from '@src/assets/data/locales/fr.json'\r\nimport userMessagesPt from '@src/assets/data/locales/pt.json'\r\n\r\n// ** Menu msg obj\r\nconst menuMessages = {\r\n  en: { ...messagesEn, ...userMessagesEn },\r\n  de: { ...messagesDe, ...userMessagesDe },\r\n  fr: { ...messagesFr, ...userMessagesFr },\r\n  pt: { ...messagesPt, ...userMessagesPt }\r\n}\r\n\r\n// ** Create Context\r\nconst Context = createContext()\r\n\r\nconst IntlProviderWrapper = ({ children }) => {\r\n  // ** States\r\n  const [locale, setLocale] = useState('en')\r\n  const [messages, setMessages] = useState(menuMessages['en'])\r\n\r\n  // ** Switches Language\r\n  const switchLanguage = lang => {\r\n    setLocale(lang)\r\n    setMessages(menuMessages[lang])\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={{ locale, switchLanguage }}>\r\n      <IntlProvider key={locale} locale={locale} messages={messages} defaultLocale='en'>\r\n        {children}\r\n      </IntlProvider>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport { IntlProviderWrapper, Context as IntlContext }\r\n"]},"metadata":{},"sourceType":"module"}