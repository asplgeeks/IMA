{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom'; // ** Store & Actions\n\nimport { useDispatch, useSelector } from 'react-redux'; // ** Styles\n\nimport '@styles/react/apps/app-email.scss';\n\nvar EmailApp = function EmailApp() {\n  _s();\n\n  // ** States\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      composeOpen = _useState2[0],\n      setComposeOpen = _useState2[1]; // ** Store Variables\n\n\n  var dispatch = useDispatch();\n  var store = useSelector(function (state) {\n    return state.email;\n  }); // ** Vars\n\n  var params = useParams(); // ** UseEffect: GET initial data on Mount\n\n  useEffect(function () {\n    // params.folder \n    dispatch(getTopics({\n      q: query || '',\n      folder: params.folder || 'inbox',\n      label: params.label || ''\n    }));\n  }, [query, params.folder, params.label]);\n  return \"\";\n};\n\n_s(EmailApp, \"slPb9KgGoYmTQhWWqTAob1A85tA=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n\n_c = EmailApp;\nexport default EmailApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailApp\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/apps/data/index.js"],"names":["Fragment","useEffect","useState","useParams","useDispatch","useSelector","EmailApp","composeOpen","setComposeOpen","dispatch","store","state","email","params","getTopics","q","query","folder","label"],"mappings":";;;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAGA;;AACA,OAAO,mCAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB;AACA,kBAAsCJ,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOK,WAAP;AAAA,MAAoBC,cAApB,iBAFqB,CAIrB;;;AACA,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,KAAK,GAAGL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,KAAV;AAAA,GAAN,CAAzB,CANqB,CAQrB;;AACA,MAAMC,MAAM,GAAGV,SAAS,EAAxB,CATqB,CAWrB;;AACAF,EAAAA,SAAS,CAAC,YAAM;AACd;AACAQ,IAAAA,QAAQ,CAACK,SAAS,CAAC;AAAEC,MAAAA,CAAC,EAAEC,KAAK,IAAI,EAAd;AAAkBC,MAAAA,MAAM,EAAEJ,MAAM,CAACI,MAAP,IAAiB,OAA3C;AAAoDC,MAAAA,KAAK,EAAEL,MAAM,CAACK,KAAP,IAAgB;AAA3E,KAAD,CAAV,CAAR;AACD,GAHQ,EAGN,CAACF,KAAD,EAAQH,MAAM,CAACI,MAAf,EAAuBJ,MAAM,CAACK,KAA9B,CAHM,CAAT;AAKA,SAAO,EAAP;AACD,CAlBD;;GAAMZ,Q;UAKaF,W,EACHC,W,EAGCF,S;;;KATXG,Q;AAoBN,eAAeA,QAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-email.scss'\r\n\r\nconst EmailApp = () => {\r\n  // ** States\r\n  const [composeOpen, setComposeOpen] = useState(false)\r\n\r\n  // ** Store Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.email)\r\n\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** UseEffect: GET initial data on Mount\r\n  useEffect(() => {\r\n    // params.folder \r\n    dispatch(getTopics({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\r\n  }, [query, params.folder, params.label])\r\n\r\n  return \"\"\r\n}\r\n\r\nexport default EmailApp\r\n"]},"metadata":{},"sourceType":"module"}