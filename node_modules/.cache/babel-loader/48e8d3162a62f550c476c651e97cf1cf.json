{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios'; // ** Get all Data\n\nexport var getAllData = function getAllData() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/api/users/list/all-data').then(function (response) {\n                dispatch({\n                  type: 'GET_ALL_DATA',\n                  data: response.data\n                });\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; // ** Get data on page or row change\n\nexport var getData = function getData(params) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get('/api/users/list/data', params).then(function (response) {\n                dispatch({\n                  type: 'GET_DATA',\n                  data: response.data.users,\n                  totalPages: response.data.total,\n                  params: params\n                });\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // ** Get User\n\nexport var getUser = function getUser(id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.get('/api/users/user', {\n                id: id\n              }).then(function (response) {\n                dispatch({\n                  type: 'GET_USER',\n                  selectedUser: response.data.user\n                });\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}; // ** Add new user\n\nexport var addUser = function addUser(user) {\n  return function (dispatch, getState) {\n    axios.post('/apps/users/add-user', user).then(function (response) {\n      dispatch({\n        type: 'ADD_USER',\n        user: user\n      });\n    }).then(function () {\n      dispatch(getData(getState().users.params));\n      dispatch(getAllData());\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; // ** Delete user\n\nexport var deleteUser = function deleteUser(id) {\n  return function (dispatch, getState) {\n    axios.delete('/apps/users/delete', {\n      id: id\n    }).then(function (response) {\n      dispatch({\n        type: 'DELETE_USER'\n      });\n    }).then(function () {\n      dispatch(getData(getState().users.params));\n      dispatch(getAllData());\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/views/apps/user/store/action/index.js"],"names":["axios","getAllData","dispatch","get","then","response","type","data","getData","params","users","totalPages","total","getUser","id","selectedUser","user","catch","err","console","log","addUser","getState","post","deleteUser","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    await axios.get('/api/users/list/all-data').then(response => {\n      dispatch({\n        type: 'GET_ALL_DATA',\n        data: response.data\n      })\n    })\n  }\n}\n\n// ** Get data on page or row change\nexport const getData = params => {\n  return async dispatch => {\n    await axios.get('/api/users/list/data', params).then(response => {\n      dispatch({\n        type: 'GET_DATA',\n        data: response.data.users,\n        totalPages: response.data.total,\n        params\n      })\n    })\n  }\n}\n\n// ** Get User\nexport const getUser = id => {\n  return async dispatch => {\n    await axios\n      .get('/api/users/user', { id })\n      .then(response => {\n        dispatch({\n          type: 'GET_USER',\n          selectedUser: response.data.user\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ** Add new user\nexport const addUser = user => {\n  return (dispatch, getState) => {\n    axios\n      .post('/apps/users/add-user', user)\n      .then(response => {\n        dispatch({\n          type: 'ADD_USER',\n          user\n        })\n      })\n      .then(() => {\n        dispatch(getData(getState().users.params))\n        dispatch(getAllData())\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ** Delete user\nexport const deleteUser = id => {\n  return (dispatch, getState) => {\n    axios\n      .delete('/apps/users/delete', { id })\n      .then(response => {\n        dispatch({\n          type: 'DELETE_USER'\n        })\n      })\n      .then(() => {\n        dispatch(getData(getState().users.params))\n        dispatch(getAllData())\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}