{"ast":null,"code":"import axios from 'axios'; // ** Fetch Events\n\nexport var fetchEvents = function fetchEvents(calendars) {\n  return function (dispatch) {\n    axios.get('/apps/calendar/events', {\n      calendars: calendars\n    }).then(function (response) {\n      dispatch({\n        type: 'FETCH_EVENTS',\n        events: response.data\n      });\n    });\n  };\n}; // ** Add Event\n\nexport var addEvent = function addEvent(event) {\n  return function (dispatch, getState) {\n    axios.post('/apps/calendar/add-event', {\n      event: event\n    }).then(function () {\n      dispatch({\n        type: 'ADD_EVENT'\n      });\n      dispatch(fetchEvents(getState().calendar.selectedCalendars));\n    });\n  };\n}; // ** Update Event\n\nexport var updateEvent = function updateEvent(event) {\n  return function (dispatch) {\n    axios.post('/apps/calendar/update-event', {\n      event: event\n    }).then(function () {\n      dispatch({\n        type: 'UPDATE_EVENT'\n      });\n    });\n  };\n}; // ** Filter Events\n\nexport var updateFilter = function updateFilter(filter) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'UPDATE_FILTERS',\n      filter: filter\n    });\n    dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  };\n}; // ** Add/Remove All Filters\n\nexport var updateAllFilters = function updateAllFilters(value) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'UPDATE_ALL_FILTERS',\n      value: value\n    });\n    dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  };\n}; // ** remove Event\n\nexport var removeEvent = function removeEvent(id) {\n  return function (dispatch) {\n    axios.delete('/apps/calendar/remove-event', {\n      id: id\n    }).then(function () {\n      dispatch({\n        type: 'REMOVE_EVENT'\n      });\n    });\n  };\n}; // ** Select Event (get event data on click)\n\nexport var selectEvent = function selectEvent(event) {\n  return function (dispatch) {\n    dispatch({\n      type: 'SELECT_EVENT',\n      event: event\n    });\n  };\n};","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/apps/calendar/store/actions/index.js"],"names":["axios","fetchEvents","calendars","dispatch","get","then","response","type","events","data","addEvent","event","getState","post","calendar","selectedCalendars","updateEvent","updateFilter","filter","updateAllFilters","value","removeEvent","id","delete","selectEvent"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\n// ** Fetch Events\r\nexport const fetchEvents = calendars => {\r\n  return dispatch => {\r\n    axios.get('/apps/calendar/events', { calendars }).then(response => {\r\n      dispatch({\r\n        type: 'FETCH_EVENTS',\r\n        events: response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Add Event\r\nexport const addEvent = event => {\r\n  return (dispatch, getState) => {\r\n    axios.post('/apps/calendar/add-event', { event }).then(() => {\r\n      dispatch({\r\n        type: 'ADD_EVENT'\r\n      })\r\n      dispatch(fetchEvents(getState().calendar.selectedCalendars))\r\n    })\r\n  }\r\n}\r\n\r\n// ** Update Event\r\nexport const updateEvent = event => {\r\n  return dispatch => {\r\n    axios.post('/apps/calendar/update-event', { event }).then(() => {\r\n      dispatch({\r\n        type: 'UPDATE_EVENT'\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Filter Events\r\nexport const updateFilter = filter => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: 'UPDATE_FILTERS',\r\n      filter\r\n    })\r\n    dispatch(fetchEvents(getState().calendar.selectedCalendars))\r\n  }\r\n}\r\n\r\n// ** Add/Remove All Filters\r\nexport const updateAllFilters = value => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: 'UPDATE_ALL_FILTERS',\r\n      value\r\n    })\r\n    dispatch(fetchEvents(getState().calendar.selectedCalendars))\r\n  }\r\n}\r\n\r\n// ** remove Event\r\nexport const removeEvent = id => {\r\n  return dispatch => {\r\n    axios.delete('/apps/calendar/remove-event', { id }).then(() => {\r\n      dispatch({\r\n        type: 'REMOVE_EVENT'\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Select Event (get event data on click)\r\nexport const selectEvent = event => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'SELECT_EVENT',\r\n      event\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}