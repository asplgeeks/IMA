{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\views\\\\apps\\\\email\\\\Mails.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState } from 'react'; // ** Mail Components Imports\n\nimport MailCard from './MailCard';\nimport MailDetails from './MailDetails';\nimport ComposePopUp from './ComposePopup'; // ** Utils\n\nimport { formatDateToMonthShort } from '@utils'; // ** Third Party Components\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, CustomInput, DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown, Row, Col } from 'reactstrap';\nimport { Menu, Search, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Mails = function Mails(props) {\n  _s();\n\n  // ** Props\n  var query = props.query,\n      store = props.store,\n      setQuery = props.setQuery,\n      dispatch = props.dispatch,\n      selectMail = props.selectMail,\n      composeOpen = props.composeOpen,\n      updateMails = props.updateMails,\n      paginateMail = props.paginateMail,\n      selectAllMail = props.selectAllMail,\n      toggleCompose = props.toggleCompose,\n      setSidebarOpen = props.setSidebarOpen,\n      updateMailLabel = props.updateMailLabel,\n      resetSelectedMail = props.resetSelectedMail,\n      selectCurrentMail = props.selectCurrentMail;\n  var mails = store.mails,\n      selectedMails = store.selectedMails; // ** States\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openMail = _useState2[0],\n      setOpenMail = _useState2[1]; // ** Variables\n\n\n  var labelColors = {\n    personal: 'success',\n    company: 'primary',\n    important: 'warning',\n    private: 'danger'\n  }; // ** Handles Update Functions\n\n  var handleMailClick = function handleMailClick(id) {\n    dispatch(selectCurrentMail(id));\n    setOpenMail(true);\n  };\n  /*eslint-disable */\n  // ** Handles Folder Update\n\n\n  var handleFolderUpdate = function handleFolderUpdate(e, folder) {\n    var ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : selectedMails;\n    e.preventDefault();\n    dispatch(updateMails(ids, {\n      folder: folder\n    }));\n    dispatch(resetSelectedMail());\n  }; // ** Handles Label Update\n\n\n  var handleLabelsUpdate = function handleLabelsUpdate(e, label) {\n    var ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : selectedMails;\n    e.preventDefault();\n    dispatch(updateMailLabel(ids, label));\n    dispatch(resetSelectedMail());\n  }; // ** Handles Mail Read Update\n\n\n  var handleMailReadUpdate = function handleMailReadUpdate(arr, bool) {\n    dispatch(updateMails(arr, {\n      isRead: bool\n    })).then(function () {\n      return dispatch(resetSelectedMail());\n    });\n    dispatch(selectAllMail(false));\n  }; // ** Handles Move to Trash\n\n\n  var handleMailToTrash = function handleMailToTrash(ids) {\n    dispatch(updateMails(ids, {\n      folder: 'trash'\n    }));\n    dispatch(resetSelectedMail());\n  };\n  /*eslint-enable */\n  // ** Renders Mail\n\n\n  var renderMails = function renderMails() {\n    if (mails.length) {\n      return mails.map(function (mail, index) {\n        return /*#__PURE__*/_jsxDEV(MailCard, {\n          mail: mail,\n          dispatch: dispatch,\n          selectMail: selectMail,\n          updateMails: updateMails,\n          labelColors: labelColors,\n          selectedMails: selectedMails,\n          handleMailClick: handleMailClick,\n          handleMailReadUpdate: handleMailReadUpdate,\n          formatDateToMonthShort: formatDateToMonthShort\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-app-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-fixed-search d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-toggle d-block d-lg-none ml-1\",\n          onClick: function onClick() {\n            return setSidebarOpen(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-content-center justify-content-between w-100\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"input-group-merge\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n              addonType: \"prepend\",\n              children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                children: /*#__PURE__*/_jsxDEV(Search, {\n                  className: \"text-muted\",\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"email-search\",\n              placeholder: \"Search email\",\n              value: query,\n              onChange: function onChange(e) {\n                return setQuery(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        className: \"email-user-list\",\n        options: {\n          wheelPropagation: false\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-action light-gray-bg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-left \",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-truncate\",\n              children: \"Tread name display for longer text eclips Tread name display for longer text eclipse Tread name display for longer text eclipse Tread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-right\",\n            children: /*#__PURE__*/_jsxDEV(Info, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, _this), mails.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"email-media-list\",\n          children: renderMails()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results d-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"No Items Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MailDetails, {\n      openMail: openMail,\n      dispatch: dispatch,\n      mail: store.currentMail,\n      labelColors: labelColors,\n      setOpenMail: setOpenMail,\n      updateMails: updateMails,\n      paginateMail: paginateMail,\n      updateMailLabel: updateMailLabel,\n      handleMailToTrash: handleMailToTrash,\n      handleFolderUpdate: handleFolderUpdate,\n      handleLabelsUpdate: handleLabelsUpdate,\n      handleMailReadUpdate: handleMailReadUpdate,\n      formatDateToMonthShort: formatDateToMonthShort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ComposePopUp, {\n      composeOpen: composeOpen,\n      toggleCompose: toggleCompose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Mails, \"iux1ki8XSARpwJ/OjCQSz+KSXvM=\");\n\n_c = Mails;\nexport default Mails;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mails\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/apps/email/Mails.js"],"names":["Fragment","useState","MailCard","MailDetails","ComposePopUp","formatDateToMonthShort","PerfectScrollbar","InputGroup","InputGroupAddon","Input","InputGroupText","CustomInput","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","Row","Col","Menu","Search","Folder","Tag","Mail","Trash","Edit2","Info","Mails","props","query","store","setQuery","dispatch","selectMail","composeOpen","updateMails","paginateMail","selectAllMail","toggleCompose","setSidebarOpen","updateMailLabel","resetSelectedMail","selectCurrentMail","mails","selectedMails","openMail","setOpenMail","labelColors","personal","company","important","private","handleMailClick","id","handleFolderUpdate","e","folder","ids","preventDefault","handleLabelsUpdate","label","handleMailReadUpdate","arr","bool","isRead","then","handleMailToTrash","renderMails","length","map","mail","index","target","value","wheelPropagation","currentMail"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Mail Components Imports\r\nimport MailCard from './MailCard'\r\nimport MailDetails from './MailDetails'\r\nimport ComposePopUp from './ComposePopup'\r\n\r\n// ** Utils\r\nimport { formatDateToMonthShort } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  InputGroupText,\r\n  CustomInput,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Row,\r\n  Col\r\n} from 'reactstrap'\r\nimport { Menu, Search, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\r\n\r\nconst Mails = props => {\r\n  // ** Props\r\n  const {\r\n    query,\r\n    store,\r\n    setQuery,\r\n    dispatch,\r\n    selectMail,\r\n    composeOpen,\r\n    updateMails,\r\n    paginateMail,\r\n    selectAllMail,\r\n    toggleCompose,\r\n    setSidebarOpen,\r\n    updateMailLabel,\r\n    resetSelectedMail,\r\n    selectCurrentMail\r\n  } = props\r\n\r\n  const { mails, selectedMails } = store\r\n\r\n  // ** States\r\n  const [openMail, setOpenMail] = useState(false)\r\n\r\n  // ** Variables\r\n  const labelColors = {\r\n    personal: 'success',\r\n    company: 'primary',\r\n    important: 'warning',\r\n    private: 'danger'\r\n  }\r\n\r\n  // ** Handles Update Functions\r\n  const handleMailClick = id => {\r\n    dispatch(selectCurrentMail(id))\r\n    setOpenMail(true)\r\n  }\r\n\r\n  /*eslint-disable */\r\n\r\n  // ** Handles Folder Update\r\n  const handleFolderUpdate = (e, folder, ids = selectedMails) => {\r\n    e.preventDefault()\r\n    dispatch(updateMails(ids, { folder }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  // ** Handles Label Update\r\n  const handleLabelsUpdate = (e, label, ids = selectedMails) => {\r\n    e.preventDefault()\r\n    dispatch(updateMailLabel(ids, label))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  // ** Handles Mail Read Update\r\n  const handleMailReadUpdate = (arr, bool) => {\r\n    dispatch(updateMails(arr, { isRead: bool })).then(() => dispatch(resetSelectedMail()))\r\n    dispatch(selectAllMail(false))\r\n  }\r\n\r\n  // ** Handles Move to Trash\r\n  const handleMailToTrash = ids => {\r\n    dispatch(updateMails(ids, { folder: 'trash' }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n  /*eslint-enable */\r\n\r\n  // ** Renders Mail\r\n  const renderMails = () => {\r\n    if (mails.length) {\r\n      return mails.map((mail, index) => {\r\n        return (\r\n          <MailCard\r\n            mail={mail}\r\n            key={index}\r\n            dispatch={dispatch}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            labelColors={labelColors}\r\n            selectedMails={selectedMails}\r\n            handleMailClick={handleMailClick}\r\n            handleMailReadUpdate={handleMailReadUpdate}\r\n            formatDateToMonthShort={formatDateToMonthShort}\r\n          />\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Row> */}\r\n        {/* <Col md={6}> */}\r\n      <div className='email-app-list'>\r\n        <div className='app-fixed-search d-flex align-items-center'>\r\n          <div className='sidebar-toggle d-block d-lg-none ml-1' onClick={() => setSidebarOpen(true)}>\r\n            <Menu />\r\n          </div>\r\n          <div className='d-flex align-content-center justify-content-between w-100'>\r\n            <InputGroup className='input-group-merge'>\r\n              <InputGroupAddon addonType='prepend'>\r\n                <InputGroupText>\r\n                  <Search className='text-muted' size={14} />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input\r\n                id='email-search'\r\n                placeholder='Search email'\r\n                value={query}\r\n                onChange={e => setQuery(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\r\n        <div className='app-action light-gray-bg'>\r\n          <div className='action-left '>\r\n          <p className='text-truncate'>Tread name display for longer text eclips Tread name display for longer text eclipse Tread name display for longer text eclipse Tread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipse</p>\r\n          </div>\r\n            <div className='action-right'>\r\n            <Info size={18} />\r\n            </div>\r\n        </div>\r\n\r\n          {mails.length ? (\r\n            <ul className='email-media-list'>{renderMails()}</ul>\r\n          ) : (\r\n            <div className='no-results d-block'>\r\n              <h5>No Items Found</h5>\r\n            </div>\r\n        )} \r\n        </PerfectScrollbar>\r\n      </div>\r\n      {/* </Col>\r\n      <Col  md={6}>\r\n        sadadadj */}\r\n      <MailDetails\r\n        openMail={openMail}\r\n        dispatch={dispatch}\r\n        mail={store.currentMail}\r\n        labelColors={labelColors}\r\n        setOpenMail={setOpenMail}\r\n        updateMails={updateMails}\r\n        paginateMail={paginateMail}\r\n        updateMailLabel={updateMailLabel}\r\n        handleMailToTrash={handleMailToTrash}\r\n        handleFolderUpdate={handleFolderUpdate}\r\n        handleLabelsUpdate={handleLabelsUpdate}\r\n        handleMailReadUpdate={handleMailReadUpdate}\r\n        formatDateToMonthShort={formatDateToMonthShort}\r\n      />\r\n      <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\r\n      {/* </Col>\r\n      </Row> */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Mails\r\n"]},"metadata":{},"sourceType":"module"}