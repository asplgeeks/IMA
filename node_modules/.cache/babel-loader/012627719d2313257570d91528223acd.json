{"ast":null,"code":"import _slicedToArray from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import { useState, useContext, Fragment, useEffect } from 'react'\n// import classnames from 'classnames'\n// import Avatar from '@components/avatar'\n// import { useSkin } from '@hooks/useSkin'\n// import useJwt from '@src/auth/jwt/useJwt'\n// import { useDispatch } from 'react-redux'\n// import { useForm } from 'react-hook-form'\n// import { toast, Slide } from 'react-toastify'\n// import { handleLogin } from '@store/actions/auth'\n// import { AbilityContext } from '@src/utility/context/Can'\n// import { Link, useHistory } from 'react-router-dom'\n// import InputPasswordToggle from '@components/input-password-toggle'\n// import { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\n// import { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\n// import {\n//   Alert,\n//   Row,\n//   Col,\n//   CardTitle,\n//   CardText,\n//   Form,\n//   Input,\n//   FormGroup,\n//   Label,\n//   CustomInput,\n//   Button,\n//   UncontrolledTooltip\n// } from 'reactstrap'\n// import axios from 'axios'\n// import '@styles/base/pages/page-auth.scss'\n// import 'react-toastify/dist/ReactToastify.css'\n// import app from '../../../base'\n// import { getAuth, signInWithCustomToken } from \"firebase/auth\"\n// // import { AuthContext } from '../../../Auth'\n// const loginAuthID = localStorage.getItem('loginId')\n// const ToastContent = ({ name, role }) => (\n//   <Fragment>\n//     <div className='toastify-header'>\n//       <div className='title-wrapper'>\n//         <Avatar size='sm' color='warning' icon={<Coffee size={12} />} />\n//         <h6 className='toast-title font-weight-bold' style={{color:\"#ffffff\"}}> {name}</h6>\n//       </div>\n//     </div>\n//     {/* <div className='toastify-body'>\n//       <span>You have successfully logged in as an {role}. Now you can start to explore. Enjoy!</span>\n//     </div> */}\n//   </Fragment>\n// )\n// const Login = props => {\n//   const [skin, setSkin] = useSkin()\n//   const ability = useContext(AbilityContext)\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n//   const [phone, setPhone] = useState('')\n//   const [password, setPassword] = useState('')\n//   const [mobileexist, setExistMobile] = useState()\n// const [logindata, setLoginData] = useState()\n//   const { register, errors, handleSubmit } = useForm()\n//   const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n//     source = require(`@src/assets/images/pages/${illustration}`).default\n// console.log(phone)\n// console.log(mobileexist)\n// if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password === null) {\n//   const sendotp = 'http://172.105.49.15:3030/api/user/send_otp'\n//   axios.post(sendotp, {\n//     mobile_number: phone.toString()\n//   })\n//   .then(r => {\n//     console.log(r)\n//     toast(\n//       <ToastContent name={r.data.message} role={''} />,\n//         { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n//     )\n//     props.history.push({pathname:'/login-otp',\n//   state:{\n//     id : mobileexist.data.data._id,\n//     mobile : phone\n//   }\n// })\n//     // setExistMobile(r)\n//   })\n//  } \n// const handlePhone = (e) => {\n//   setPhone(e.target.value)\n//   e.preventDefault()\n// }\n//   const checkmobiurl = 'http://172.105.49.15:3030/api/user/check_mobile_number_exist'\n//   useEffect(() => {\n//     axios.post(checkmobiurl, {\n//       mobile_number: phone.toString()\n//     })\n//     .then(r => {\n//       console.log(r)\n//       setExistMobile(r)\n//     })\n//   }, [phone])\n//     // localStorage.setItem('loginId', mobileexist && mobileexist.data && mobileexist.data._id)\n// const authIdToken = \"\"\n//   const onSubmit = (data) => {\n//     setLoginData(data)\n//     if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null) {\n//     dispatch(handleLogin(data, props))\n//     }\n//     data = {role : \"admin\"}\n//     history.push(getHomeRouteForLoggedInUser(data.role))\n//     // dispatch(handleLogin(data, props))\n//     // if (isObjEmpty(errors)) {\n//     //   useJwt\n//     //     .login({ phone, password })\n//     //     .then(res => {\n//     //       const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\n//     //       // dispatch(handleLogin(data))\n//     //       ability.update(res.data.userData.ability)\n//     //       // toast.success(\n//     //       //   <ToastContent name={data.fullName || data.username || 'John Doe'} role={data.role || 'admin'} />,\n//     //       //   { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n//     //       // )\n//     //     })\n//     //     .catch(err => {\n//     //       console.log(err.message)\n//     //       toast.error(\n//     //         <ToastContent name={\"Incorrect user number or password\"} role={''} />,\n//     //           { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n//     //       )\n//     //     })\n//     // }\n//   }\n//   return (\n//     <div className='auth-wrapper auth-v2'>\n//       <Row className='auth-inner m-0'>\n//         <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n//         </Link>\n//         <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n//           <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n//             <img className='img-fluid' src={source} alt='Login V2' />\n//           </div>\n//         </Col>\n//         <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n//           <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n//             <h1 style={{textShadow:\"2px 1px\", color:\"rgb(230,46,45)\", fontSize:\"35px\", fontWeight:300}}> Star Engineers</h1>\n//             <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\n//             <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n//               <FormGroup>\n//                 <Label className='form-label' for='login-phone'>\n//                 Mobile Number\n//                 </Label>\n//                 <Input\n//                   autoFocus\n//                   type='text'\n//                   value={phone}\n//                   id='login_phone'\n//                   name='login_phone'\n//                   placeholder='Enter Mobile Number'\n//                   maxLength=\"10\"\n//                   onChange={e => handlePhone(e)}\n//                   // className={classnames({ 'is-invalid': errors['login_phone'] })}\n//                   innerRef={register({ \n//                     required: true,\n//                     pattern:{value:/[1-9]{1}[0-9]{9}/,\n//                     message:\"please enter your 10 digit mobile number\"}\n//                  })}\n//                 />\n//                  {/* {errors.login_phone && <p style={{color:\"red\"}}>{errors.login_phone.message}</p>} */}\n//                  {errors.login_phone && errors.login_phone.type === 'required' && <p style={{color:\"red\"}}>Mobile Number is require</p>}\n//                  {/* {  phone ? mobileexist && mobileexist.data && mobileexist.data.data === null ? <p style={{color:\"red\"}}>Mobile Number Not Exist</p> : \"\" : \"\"} */}\n//               </FormGroup> \n//               { mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null ? <FormGroup>\n//                 <div className='d-flex justify-content-between'>\n//                   <Label className='form-label' for='login-password'>\n//                     Password\n//                   </Label>\n//                 </div>\n//                 <InputPasswordToggle\n//                   value={password}\n//                   id='login_password'\n//                   name='login_password'\n//                   className='input-group-merge'\n//                   onChange={e => setPassword(e.target.value)}\n//                   // className={classnames({ 'is-invalid': errors['login_password'] })}\n//                   innerRef={register({ \n//                     required: true,\n//                     message:\"please enter your valid password\"\n//                   })}\n//                 />\n//                   {errors.login_password && <p style={{color:\"red\"}}>{errors.login_password.message}</p>}\n//               </FormGroup> : \" \"\n//               }\n//               <Button.Ripple type='submit' color='primary' block>\n//                 Sign in\n//               </Button.Ripple>\n//             </Form>\n//             <p className='text-right mt-2'>\n//               <Link to='/forgot-password'>\n//                 <span>Forgot Password ?</span>\n//               </Link>\n//             </p>\n//           </Col>\n//         </Col>\n//       </Row>\n//     </div>\n//   )\n// }\n// export default Login\nimport{useState,useContext,Fragment,useEffect}from'react';import{Link,useHistory}from'react-router-dom';import{Facebook,Twitter,Mail,GitHub}from'react-feather';import InputPasswordToggle from'@components/input-password-toggle';import{Card,CardBody,CardTitle,CardText,Form,FormGroup,Label,Input,CustomInput,Button}from'reactstrap';import'@styles/base/pages/page-auth.scss';import logo from\"../../../Images/logo.svg\";import{useForm}from'react-hook-form';import{handleLogin}from'@store/actions/auth';import{useDispatch}from'react-redux';import{getHomeRouteForLoggedInUser,isObjEmpty}from'@utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginV1=function LoginV1(props){var _useForm=useForm(),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var dispatch=useDispatch();var onSubmit=function onSubmit(data){console.log(data);// setLoginData(data)\n// if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null) {\ndispatch(handleLogin(data,props));// }\n// data = {role : \"admin\"}\n// history.push(getHomeRouteForLoggedInUser(data.role))\n};return/*#__PURE__*/_jsx(\"div\",{className:\"auth-wrapper auth-v1 px-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"auth-inner py-2\",children:/*#__PURE__*/_jsx(Card,{className:\"mb-0\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Link,{className:\"brand-logo\",to:\"/\",onClick:function onClick(e){return e.preventDefault();},children:/*#__PURE__*/_jsx(\"img\",{src:logo,height:\"40px\"})}),/*#__PURE__*/_jsxs(Form,{className:\"auth-login-form mt-2\",onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"email-id\",children:\" Email \"}),/*#__PURE__*/_jsx(Input,{autoFocus:true,type:\"text\",id:\"email_id\",name:\"email_id\",placeholder:\"Enter register email-id\",innerRef:register({required:true,pattern:{value:/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,message:'Please enter a valid email'}})}),errors.email_id&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:errors.email_id.message})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between\",children:/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"login-password\",children:\"Password\"})}),/*#__PURE__*/_jsx(InputPasswordToggle,{value:password,id:\"password\",name:\"password\"// className='input-group-merge'\n,onChange:function onChange(e){return setPassword(e.target.value);}// className={classnames({ 'is-invalid': errors['password'] })}\n,innerRef:register({required:true,message:\"please enter your valid password\"})}),errors.password&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:\"Please enter your valid password\"})]}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(CustomInput,{type:\"checkbox\",className:\"custom-control-Primary\",id:\"remember_me\",name:\"remember_me\",innerRef:register({required:true,message:\"please select\"}),label:\"\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"By continuing you agree to \",/*#__PURE__*/_jsxs(Link,{to:\"/\",style:{color:\"#ed1d25\"},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Terms & Conditions\"}),\" \"]})]})]}),errors.remember_me&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:\"Are you agree terms and condition ? \"})]})}),/*#__PURE__*/_jsx(Button.Ripple,{type:\"submit\",className:\"sign_in_btn\",block:true,children:\"Sign in\"})]})]})})})});};export default LoginV1;","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/pages/authentication/Login.js"],"names":["useState","useContext","Fragment","useEffect","Link","useHistory","Facebook","Twitter","Mail","GitHub","InputPasswordToggle","Card","CardBody","CardTitle","CardText","Form","FormGroup","Label","Input","CustomInput","Button","useForm","handleLogin","useDispatch","getHomeRouteForLoggedInUser","isObjEmpty","LoginV1","props","register","errors","handleSubmit","password","setPassword","dispatch","onSubmit","data","console","log","e","preventDefault","logo","required","pattern","value","message","email_id","color","target","remember_me"],"mappings":"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","sourcesContent":["// import { useState, useContext, Fragment, useEffect } from 'react'\r\n// import classnames from 'classnames'\r\n// import Avatar from '@components/avatar'\r\n// import { useSkin } from '@hooks/useSkin'\r\n// import useJwt from '@src/auth/jwt/useJwt'\r\n// import { useDispatch } from 'react-redux'\r\n// import { useForm } from 'react-hook-form'\r\n// import { toast, Slide } from 'react-toastify'\r\n// import { handleLogin } from '@store/actions/auth'\r\n// import { AbilityContext } from '@src/utility/context/Can'\r\n// import { Link, useHistory } from 'react-router-dom'\r\n// import InputPasswordToggle from '@components/input-password-toggle'\r\n// import { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\r\n// import { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\r\n// import {\r\n//   Alert,\r\n//   Row,\r\n//   Col,\r\n//   CardTitle,\r\n//   CardText,\r\n//   Form,\r\n//   Input,\r\n//   FormGroup,\r\n//   Label,\r\n//   CustomInput,\r\n//   Button,\r\n//   UncontrolledTooltip\r\n// } from 'reactstrap'\r\n// import axios from 'axios'\r\n// import '@styles/base/pages/page-auth.scss'\r\n// import 'react-toastify/dist/ReactToastify.css'\r\n// import app from '../../../base'\r\n// import { getAuth, signInWithCustomToken } from \"firebase/auth\"\r\n// // import { AuthContext } from '../../../Auth'\r\n// const loginAuthID = localStorage.getItem('loginId')\r\n\r\n// const ToastContent = ({ name, role }) => (\r\n//   <Fragment>\r\n//     <div className='toastify-header'>\r\n//       <div className='title-wrapper'>\r\n//         <Avatar size='sm' color='warning' icon={<Coffee size={12} />} />\r\n//         <h6 className='toast-title font-weight-bold' style={{color:\"#ffffff\"}}> {name}</h6>\r\n//       </div>\r\n//     </div>\r\n//     {/* <div className='toastify-body'>\r\n//       <span>You have successfully logged in as an {role}. Now you can start to explore. Enjoy!</span>\r\n//     </div> */}\r\n//   </Fragment>\r\n// )\r\n\r\n// const Login = props => {\r\n//   const [skin, setSkin] = useSkin()\r\n//   const ability = useContext(AbilityContext)\r\n//   const dispatch = useDispatch()\r\n//   const history = useHistory()\r\n//   const [phone, setPhone] = useState('')\r\n//   const [password, setPassword] = useState('')\r\n//   const [mobileexist, setExistMobile] = useState()\r\n// const [logindata, setLoginData] = useState()\r\n//   const { register, errors, handleSubmit } = useForm()\r\n//   const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n//     source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n// console.log(phone)\r\n// console.log(mobileexist)\r\n\r\n// if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password === null) {\r\n//   const sendotp = 'http://172.105.49.15:3030/api/user/send_otp'\r\n//   axios.post(sendotp, {\r\n//     mobile_number: phone.toString()\r\n//   })\r\n//   .then(r => {\r\n//     console.log(r)\r\n//     toast(\r\n//       <ToastContent name={r.data.message} role={''} />,\r\n//         { transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n//     )\r\n//     props.history.push({pathname:'/login-otp',\r\n//   state:{\r\n//     id : mobileexist.data.data._id,\r\n//     mobile : phone\r\n//   }\r\n// })\r\n//     // setExistMobile(r)\r\n//   })\r\n//  } \r\n// const handlePhone = (e) => {\r\n//   setPhone(e.target.value)\r\n//   e.preventDefault()\r\n// }\r\n\r\n//   const checkmobiurl = 'http://172.105.49.15:3030/api/user/check_mobile_number_exist'\r\n//   useEffect(() => {\r\n//     axios.post(checkmobiurl, {\r\n//       mobile_number: phone.toString()\r\n//     })\r\n//     .then(r => {\r\n//       console.log(r)\r\n//       setExistMobile(r)\r\n//     })\r\n//   }, [phone])\r\n\r\n//     // localStorage.setItem('loginId', mobileexist && mobileexist.data && mobileexist.data._id)\r\n\r\n// const authIdToken = \"\"\r\n//   const onSubmit = (data) => {\r\n//     setLoginData(data)\r\n//     if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null) {\r\n//     dispatch(handleLogin(data, props))\r\n//     }\r\n//     data = {role : \"admin\"}\r\n//     history.push(getHomeRouteForLoggedInUser(data.role))\r\n//     // dispatch(handleLogin(data, props))\r\n//     // if (isObjEmpty(errors)) {\r\n//     //   useJwt\r\n//     //     .login({ phone, password })\r\n//     //     .then(res => {\r\n//     //       const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\r\n//     //       // dispatch(handleLogin(data))\r\n//     //       ability.update(res.data.userData.ability)\r\n//     //       // toast.success(\r\n//     //       //   <ToastContent name={data.fullName || data.username || 'John Doe'} role={data.role || 'admin'} />,\r\n//     //       //   { transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n//     //       // )\r\n//     //     })\r\n//     //     .catch(err => {\r\n//     //       console.log(err.message)\r\n//     //       toast.error(\r\n//     //         <ToastContent name={\"Incorrect user number or password\"} role={''} />,\r\n//     //           { transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n//     //       )\r\n//     //     })\r\n//     // }\r\n//   }\r\n\r\n//   return (\r\n//     <div className='auth-wrapper auth-v2'>\r\n//       <Row className='auth-inner m-0'>\r\n//         <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n//         </Link>\r\n//         <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n//           <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n//             <img className='img-fluid' src={source} alt='Login V2' />\r\n//           </div>\r\n//         </Col>\r\n//         <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n//           <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n//             <h1 style={{textShadow:\"2px 1px\", color:\"rgb(230,46,45)\", fontSize:\"35px\", fontWeight:300}}> Star Engineers</h1>\r\n//             <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\r\n          \r\n//             <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n//               <FormGroup>\r\n//                 <Label className='form-label' for='login-phone'>\r\n//                 Mobile Number\r\n//                 </Label>\r\n//                 <Input\r\n//                   autoFocus\r\n//                   type='text'\r\n//                   value={phone}\r\n//                   id='login_phone'\r\n//                   name='login_phone'\r\n//                   placeholder='Enter Mobile Number'\r\n//                   maxLength=\"10\"\r\n//                   onChange={e => handlePhone(e)}\r\n//                   // className={classnames({ 'is-invalid': errors['login_phone'] })}\r\n//                   innerRef={register({ \r\n//                     required: true,\r\n//                     pattern:{value:/[1-9]{1}[0-9]{9}/,\r\n//                     message:\"please enter your 10 digit mobile number\"}\r\n//                  })}\r\n//                 />\r\n//                  {/* {errors.login_phone && <p style={{color:\"red\"}}>{errors.login_phone.message}</p>} */}\r\n//                  {errors.login_phone && errors.login_phone.type === 'required' && <p style={{color:\"red\"}}>Mobile Number is require</p>}\r\n//                  {/* {  phone ? mobileexist && mobileexist.data && mobileexist.data.data === null ? <p style={{color:\"red\"}}>Mobile Number Not Exist</p> : \"\" : \"\"} */}\r\n//               </FormGroup> \r\n\r\n//               { mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null ? <FormGroup>\r\n//                 <div className='d-flex justify-content-between'>\r\n//                   <Label className='form-label' for='login-password'>\r\n//                     Password\r\n//                   </Label>\r\n                 \r\n//                 </div>\r\n//                 <InputPasswordToggle\r\n//                   value={password}\r\n//                   id='login_password'\r\n//                   name='login_password'\r\n//                   className='input-group-merge'\r\n//                   onChange={e => setPassword(e.target.value)}\r\n//                   // className={classnames({ 'is-invalid': errors['login_password'] })}\r\n//                   innerRef={register({ \r\n//                     required: true,\r\n//                     message:\"please enter your valid password\"\r\n//                   })}\r\n//                 />\r\n//                   {errors.login_password && <p style={{color:\"red\"}}>{errors.login_password.message}</p>}\r\n//               </FormGroup> : \" \"\r\n//               }\r\n             \r\n//               <Button.Ripple type='submit' color='primary' block>\r\n//                 Sign in\r\n//               </Button.Ripple>\r\n//             </Form>\r\n//             <p className='text-right mt-2'>\r\n       \r\n//               <Link to='/forgot-password'>\r\n//                 <span>Forgot Password ?</span>\r\n//               </Link>\r\n//             </p>\r\n          \r\n//           </Col>\r\n//         </Col>\r\n//       </Row>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Login\r\n\r\nimport { useState, useContext, Fragment, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { Card, CardBody, CardTitle, CardText, Form, FormGroup, Label, Input, CustomInput, Button } from 'reactstrap'\r\nimport '@styles/base/pages/page-auth.scss'\r\nimport logo  from '../../../Images/logo.svg'\r\nimport { useForm } from 'react-hook-form'\r\nimport { handleLogin } from '@store/actions/auth'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\r\n\r\nconst LoginV1 = props => {\r\n  const { register, errors, handleSubmit } = useForm()\r\n    const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    // setLoginData(data)\r\n    // if (mobileexist && mobileexist.data && mobileexist.data.data && mobileexist.data.data.password !== null) {\r\n    dispatch(handleLogin(data, props))\r\n    // }\r\n\r\n    // data = {role : \"admin\"}\r\n    // history.push(getHomeRouteForLoggedInUser(data.role))\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-v1 px-2'>\r\n      <div className='auth-inner py-2'>\r\n        <Card className='mb-0' >\r\n          <CardBody>\r\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n              <img src={logo}  height=\"40px\" ></img>\r\n            {/* {logo} */}\r\n              {/* <h2 className='brand-text text-primary ml-1'>Vuexy</h2> */}\r\n            </Link>\r\n            {/* <CardTitle tag='h4' className='mb-1'>\r\n              Welcome to Vuexy! 👋\r\n            </CardTitle> */}\r\n            {/* <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText> */}\r\n\r\n            <Form className='auth-login-form mt-2'  onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='email-id'> Email </Label>\r\n                <Input\r\n                  autoFocus\r\n                  type='text'\r\n                  id='email_id'\r\n                  name='email_id'\r\n                  placeholder='Enter register email-id'\r\n                  innerRef={register({ \r\n                    required: true,\r\n                    pattern: {\r\n                      value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                      message: 'Please enter a valid email'\r\n                  }\r\n                 })} />\r\n                  {errors.email_id && <p style={{color:\"red\"}}>{errors.email_id.message}</p>}  \r\n\r\n                 {/* {errors.email_id && errors.email_id.type === 'required' && <p style={{color:\"red\"}}>Please Enter email-id</p>} */}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                </div>\r\n                <InputPasswordToggle\r\n                  value={password}\r\n                  id='password'\r\n                  name='password'\r\n                  // className='input-group-merge'\r\n                  onChange={e => setPassword(e.target.value)}\r\n                  // className={classnames({ 'is-invalid': errors['password'] })}\r\n                  innerRef={register({ required: true, message:\"please enter your valid password\" })}\r\n                />\r\n               \r\n                  {errors.password && <p style={{color:\"red\"}}>Please enter your valid password</p>}  \r\n                </FormGroup>\r\n              <FormGroup >\r\n                <div>\r\n                  <span className=\"d-flex\">\r\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember_me' name=\"remember_me\"\r\n                innerRef={register({ required: true, message:\"please select\" })}\r\n                 label='' /><label >By continuing you agree to <Link to='/' style={{color:\"#ed1d25\" }}>\r\n                <span>Terms & Conditions</span> </Link></label>\r\n                </span>\r\n                {errors.remember_me && <p style={{color:\"red\"}}>Are you agree terms and condition ? </p>}  \r\n\r\n                </div>\r\n                \r\n\r\n              </FormGroup>\r\n\r\n              <Button.Ripple   type='submit' className=\"sign_in_btn\" block>\r\n                Sign in\r\n              </Button.Ripple>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginV1\r\n"]},"metadata":{},"sourceType":"module"}