{"ast":null,"code":"// ** React Imports\nimport{useContext}from'react';import{AbilityContext}from'@src/utility/context/Can';/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */export var resolveVerticalNavMenuItemComponent=function resolveVerticalNavMenuItemComponent(item){if(item.header)return'VerticalNavMenuSectionHeader';if(item.children)return'VerticalNavMenuGroup';return'VerticalNavMenuLink';};/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */export var resolveHorizontalNavMenuItemComponent=function resolveHorizontalNavMenuItemComponent(item){if(item.children)return'HorizontalNavMenuGroup';return'HorizontalNavMenuLink';};/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */ // export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\nexport var isNavLinkActive=function isNavLinkActive(link,currentURL,routerProps){return currentURL===link||routerProps&&routerProps.meta&&routerProps.meta.navLink&&routerProps.meta.navLink===link;// return currentURL === link\n};/**\r\n * Check if nav group is\r\n * @param {Array} children Group children\r\n */ // export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport var isNavGroupActive=function isNavGroupActive(children,currentURL,routerProps){return children.some(function(child){// If child have children => It's group => Go deeper(recursive)\nif(child.children){return isNavGroupActive(child.children,currentURL,routerProps);}// else it's link => Check for matched Route\nreturn isNavLinkActive(child.navLink,currentURL,routerProps);});};/**\r\n * Search for parent object\r\n * @param {Array} navigation Group children\r\n * @param {string} currentURL current URL\r\n */ // export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\nexport var search=function search(navigation,currentURL,routerProps){var result;navigation.some(function(child){var children;// If child have children => It's group => Go deeper(recursive)\nif(child.children&&(children=search(child.children,currentURL,routerProps))){return result={id:child.id,children:children};}// else it's link => Check for matched Route\nif(isNavLinkActive(child.navLink,currentURL,routerProps)){return result={id:child.id};}});return result;};/**\r\n * Loop through nested object\r\n * @param {object} obj nested object\r\n */export var getAllParents=function getAllParents(obj,match){var res=[];var recurse=function recurse(obj,current){for(var key in obj){var value=obj[key];if(value!==undefined){if(value&&typeof value==='object'){recurse(value,key);}else{if(key===match){res.push(value);}}}}};recurse(obj);return res;};export var canViewMenuGroup=function canViewMenuGroup(item){var ability=useContext(AbilityContext);// ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\nvar hasAnyVisibleChild=item.children&&item.children.some(function(i){return ability.can(i.action,i.resource);});// ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n// ** Else check for ability using provided resource and action along with checking if has any visible child\nif(!(item.action&&item.resource)){return hasAnyVisibleChild;}return ability.can(item.action,item.resource)&&hasAnyVisibleChild;};export var canViewMenuItem=function canViewMenuItem(item){var ability=useContext(AbilityContext);return ability.can(item.action,item.resource);};","map":{"version":3,"sources":["D:/nodejs/IMA/src/@core/layouts/utils.js"],"names":["useContext","AbilityContext","resolveVerticalNavMenuItemComponent","item","header","children","resolveHorizontalNavMenuItemComponent","isNavLinkActive","link","currentURL","routerProps","meta","navLink","isNavGroupActive","some","child","search","navigation","result","id","getAllParents","obj","match","res","recurse","current","key","value","undefined","push","canViewMenuGroup","ability","hasAnyVisibleChild","i","can","action","resource","canViewMenuItem"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\n// export const isNavLinkActive = (link, currentURL, match) => {\r\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\r\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\r\n//   return (\r\n//     currentURL === link ||\r\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\r\n//   )\r\n// }\r\n\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if nav group is\r\n * @param {Array} children Group children\r\n */\r\n// export const isNavGroupActive = (children, currentURL, match) => {\r\n//   return children.some(child => {\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children) {\r\n//       return isNavGroupActive(child.children, currentURL, match)\r\n//     }\r\n//     // else it's link => Check for matched Route\r\n//     return isNavLinkActive(child.navLink, currentURL, match)\r\n//   })\r\n// }\r\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\r\n  return children.some(child => {\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children) {\r\n      return isNavGroupActive(child.children, currentURL, routerProps)\r\n    }\r\n    // else it's link => Check for matched Route\r\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\r\n  })\r\n}\r\n\r\n/**\r\n * Search for parent object\r\n * @param {Array} navigation Group children\r\n * @param {string} currentURL current URL\r\n */\r\n// export const search = (navigation, currentURL, match) => {\r\n//   let result\r\n//   navigation.some(child => {\r\n//     let children\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children && (children = search(child.children, currentURL, match))) {\r\n//       return (result = {\r\n//         id: child.id,\r\n//         children\r\n//       })\r\n//     }\r\n\r\n//     // else it's link => Check for matched Route\r\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\r\n//       return (result = {\r\n//         id: child.id\r\n//       })\r\n//     }\r\n//   })\r\n//   return result\r\n// }\r\n\r\nexport const search = (navigation, currentURL, routerProps) => {\r\n  let result\r\n  navigation.some(child => {\r\n    let children\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\r\n      return (result = {\r\n        id: child.id,\r\n        children\r\n      })\r\n    }\r\n\r\n    // else it's link => Check for matched Route\r\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\r\n      return (result = {\r\n        id: child.id\r\n      })\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n * Loop through nested object\r\n * @param {object} obj nested object\r\n */\r\nexport const getAllParents = (obj, match) => {\r\n  const res = []\r\n  const recurse = (obj, current) => {\r\n    for (const key in obj) {\r\n      const value = obj[key]\r\n      if (value !== undefined) {\r\n        if (value && typeof value === 'object') {\r\n          recurse(value, key)\r\n        } else {\r\n          if (key === match) {\r\n            res.push(value)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  recurse(obj)\r\n  return res\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  const ability = useContext(AbilityContext)\r\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\r\n\r\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  if (!(item.action && item.resource)) {\r\n    return hasAnyVisibleChild\r\n  }\r\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  const ability = useContext(AbilityContext)\r\n  return ability.can(item.action, item.resource)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}