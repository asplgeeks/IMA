{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar MS_PER_SECOND = 1e3;\nvar SECS_PER_MIN = 60;\nvar SECS_PER_HOUR = SECS_PER_MIN * 60;\nvar SECS_PER_DAY = SECS_PER_HOUR * 24;\nvar SECS_PER_WEEK = SECS_PER_DAY * 7;\nexport function selectUnit(from, to, thresholds) {\n  if (to === void 0) {\n    to = Date.now();\n  }\n\n  if (thresholds === void 0) {\n    thresholds = {};\n  }\n\n  var resolvedThresholds = __assign(__assign({}, DEFAULT_THRESHOLDS), thresholds || {});\n\n  var secs = (+from - +to) / MS_PER_SECOND;\n\n  if (Math.abs(secs) < resolvedThresholds.second) {\n    return {\n      value: Math.round(secs),\n      unit: 'second'\n    };\n  }\n\n  var mins = secs / SECS_PER_MIN;\n\n  if (Math.abs(mins) < resolvedThresholds.minute) {\n    return {\n      value: Math.round(mins),\n      unit: 'minute'\n    };\n  }\n\n  var hours = secs / SECS_PER_HOUR;\n\n  if (Math.abs(hours) < resolvedThresholds.hour) {\n    return {\n      value: Math.round(hours),\n      unit: 'hour'\n    };\n  }\n\n  var days = secs / SECS_PER_DAY;\n\n  if (Math.abs(days) < resolvedThresholds.day) {\n    return {\n      value: Math.round(days),\n      unit: 'day'\n    };\n  }\n\n  var fromDate = new Date(from);\n  var toDate = new Date(to);\n  var years = fromDate.getFullYear() - toDate.getFullYear();\n\n  if (Math.round(Math.abs(years)) > 0) {\n    return {\n      value: Math.round(years),\n      unit: 'year'\n    };\n  }\n\n  var months = years * 12 + fromDate.getMonth() - toDate.getMonth();\n\n  if (Math.round(Math.abs(months)) > 0) {\n    return {\n      value: Math.round(months),\n      unit: 'month'\n    };\n  }\n\n  var weeks = secs / SECS_PER_WEEK;\n  return {\n    value: Math.round(weeks),\n    unit: 'week'\n  };\n}\nexport var DEFAULT_THRESHOLDS = {\n  second: 45,\n  minute: 45,\n  hour: 22,\n  day: 5\n};","map":{"version":3,"sources":["../src/diff.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar MS_PER_SECOND = 1e3;\r\nvar SECS_PER_MIN = 60;\r\nvar SECS_PER_HOUR = SECS_PER_MIN * 60;\r\nvar SECS_PER_DAY = SECS_PER_HOUR * 24;\r\nvar SECS_PER_WEEK = SECS_PER_DAY * 7;\r\nexport function selectUnit(from, to, thresholds) {\r\n    if (to === void 0) { to = Date.now(); }\r\n    if (thresholds === void 0) { thresholds = {}; }\r\n    var resolvedThresholds = __assign(__assign({}, DEFAULT_THRESHOLDS), (thresholds || {}));\r\n    var secs = (+from - +to) / MS_PER_SECOND;\r\n    if (Math.abs(secs) < resolvedThresholds.second) {\r\n        return {\r\n            value: Math.round(secs),\r\n            unit: 'second',\r\n        };\r\n    }\r\n    var mins = secs / SECS_PER_MIN;\r\n    if (Math.abs(mins) < resolvedThresholds.minute) {\r\n        return {\r\n            value: Math.round(mins),\r\n            unit: 'minute',\r\n        };\r\n    }\r\n    var hours = secs / SECS_PER_HOUR;\r\n    if (Math.abs(hours) < resolvedThresholds.hour) {\r\n        return {\r\n            value: Math.round(hours),\r\n            unit: 'hour',\r\n        };\r\n    }\r\n    var days = secs / SECS_PER_DAY;\r\n    if (Math.abs(days) < resolvedThresholds.day) {\r\n        return {\r\n            value: Math.round(days),\r\n            unit: 'day',\r\n        };\r\n    }\r\n    var fromDate = new Date(from);\r\n    var toDate = new Date(to);\r\n    var years = fromDate.getFullYear() - toDate.getFullYear();\r\n    if (Math.round(Math.abs(years)) > 0) {\r\n        return {\r\n            value: Math.round(years),\r\n            unit: 'year',\r\n        };\r\n    }\r\n    var months = years * 12 + fromDate.getMonth() - toDate.getMonth();\r\n    if (Math.round(Math.abs(months)) > 0) {\r\n        return {\r\n            value: Math.round(months),\r\n            unit: 'month',\r\n        };\r\n    }\r\n    var weeks = secs / SECS_PER_WEEK;\r\n    return {\r\n        value: Math.round(weeks),\r\n        unit: 'week',\r\n    };\r\n}\r\nexport var DEFAULT_THRESHOLDS = {\r\n    second: 45,\r\n    minute: 45,\r\n    hour: 22,\r\n    day: 5,\r\n};\r\n//# sourceMappingURL=diff.js.map"]},"metadata":{},"sourceType":"module"}