{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\views\\\\apps\\\\email\\\\Mails.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState } from 'react'; // ** Mail Components Imports\n\nimport MailCard from './MailCard';\nimport MailDetails from './MailDetails';\nimport ComposePopUp from './ComposePopup';\nimport * as Icon from 'react-feather'; // ** Utils\n\nimport { formatDateToMonthShort } from '@utils';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\"; // import PlusIcon from \"@material-ui/icons/Plus\"\n\nimport { IconButton } from \"@material-ui/core\";\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\"; // ** Third Party Components\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, CustomInput, DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown, Row, Col } from 'reactstrap';\nimport { Menu, Search, ArrowLeftCircle, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Mails = function Mails(props) {\n  _s();\n\n  // ** Props\n  var query = props.query,\n      store = props.store,\n      setQuery = props.setQuery,\n      dispatch = props.dispatch,\n      selectMail = props.selectMail,\n      composeOpen = props.composeOpen,\n      updateMails = props.updateMails,\n      paginateMail = props.paginateMail,\n      selectAllMail = props.selectAllMail,\n      toggleCompose = props.toggleCompose,\n      setSidebarOpen = props.setSidebarOpen,\n      updateMailLabel = props.updateMailLabel,\n      resetSelectedMail = props.resetSelectedMail,\n      selectCurrentMail = props.selectCurrentMail;\n  var mails = store.mails,\n      selectedMails = store.selectedMails; // ** States\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openMail = _useState2[0],\n      setOpenMail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearchVisible = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1]; // ** Variables\n\n\n  var labelColors = {\n    personal: 'success',\n    company: 'primary',\n    important: 'warning',\n    private: 'danger'\n  }; // ** Handles Update Functions\n\n  var handleMailClick = function handleMailClick(id) {\n    dispatch(selectCurrentMail(id));\n    setOpenMail(true);\n  };\n  /*eslint-disable */\n  // ** Handles Folder Update\n\n\n  var handleFolderUpdate = function handleFolderUpdate(e, folder) {\n    var ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : selectedMails;\n    e.preventDefault();\n    dispatch(updateMails(ids, {\n      folder: folder\n    }));\n    dispatch(resetSelectedMail());\n  }; // ** Handles Label Update\n\n\n  var handleLabelsUpdate = function handleLabelsUpdate(e, label) {\n    var ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : selectedMails;\n    e.preventDefault();\n    dispatch(updateMailLabel(ids, label));\n    dispatch(resetSelectedMail());\n  }; // ** Handles Mail Read Update\n\n\n  var handleMailReadUpdate = function handleMailReadUpdate(arr, bool) {\n    dispatch(updateMails(arr, {\n      isRead: bool\n    })).then(function () {\n      return dispatch(resetSelectedMail());\n    });\n    dispatch(selectAllMail(false));\n  }; // ** Handles Move to Trash\n\n\n  var handleMailToTrash = function handleMailToTrash(ids) {\n    dispatch(updateMails(ids, {\n      folder: 'trash'\n    }));\n    dispatch(resetSelectedMail());\n  };\n  /*eslint-enable */\n  // ** Renders Mail\n\n\n  var renderMails = function renderMails() {\n    if (mails.length) {\n      return mails.map(function (mail, index) {\n        return /*#__PURE__*/_jsxDEV(MailCard, {\n          mail: mail,\n          dispatch: dispatch,\n          selectMail: selectMail,\n          updateMails: updateMails,\n          labelColors: labelColors,\n          selectedMails: selectedMails,\n          handleMailClick: handleMailClick,\n          handleMailReadUpdate: handleMailReadUpdate,\n          formatDateToMonthShort: formatDateToMonthShort\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, _this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-app-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-fixed-search d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-toggle d-block d-lg-none ml-1\",\n          onClick: function onClick() {\n            return setSidebarOpen(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dropdown_icon\",\n            style: {\n              padding: \"6px 2px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Icon.ArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 75\n            }, _this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 12\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-content-center justify-content-between w-100\",\n          children: search === false ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"broadcom_align float-right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar_search\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"align-middle dropdown_icon mr20\",\n                children: [/*#__PURE__*/_jsxDEV(Icon.RotateCw, {\n                  style: {\n                    padding: \"4px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 64\n                }, _this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"align-middle dropdown_icon mr20\",\n                children: [/*#__PURE__*/_jsxDEV(Icon.Plus, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 63\n                }, _this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"align-middle dropdown_icon \",\n                onClick: function onClick() {\n                  return [setSearchVisible(!search)];\n                },\n                children: [\"  \", /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 106\n                }, _this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 36\n          }, _this) : /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"Search\",\n            type: \"text\",\n            variant: \"outlined\",\n            fullWidth: true,\n            size: \"small\",\n            onChange: function onChange(e) {\n              return setValue(e.target.value);\n            },\n            value: value,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, _this),\n              endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: function onClick() {\n                  return [setSearchVisible(!search), setValue(\"\")];\n                },\n                children: /*#__PURE__*/_jsxDEV(CancelRoundedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, _this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        className: \"email-user-list\",\n        options: {\n          wheelPropagation: false\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-action light-gray-bg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-left\",\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-truncate mb-0\",\n              children: \"Tread name display for longer text eclips Tread name display for longer text eclipse Tread name display for longer text eclipse Tread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-right\",\n            children: /*#__PURE__*/_jsxDEV(Info, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, _this), mails.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"email-media-list\",\n          children: renderMails()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results d-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"No Items Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MailDetails, {\n      openMail: openMail,\n      dispatch: dispatch,\n      mail: store.currentMail,\n      labelColors: labelColors,\n      setOpenMail: setOpenMail,\n      updateMails: updateMails,\n      paginateMail: paginateMail,\n      updateMailLabel: updateMailLabel,\n      handleMailToTrash: handleMailToTrash,\n      handleFolderUpdate: handleFolderUpdate,\n      handleLabelsUpdate: handleLabelsUpdate,\n      handleMailReadUpdate: handleMailReadUpdate,\n      formatDateToMonthShort: formatDateToMonthShort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ComposePopUp, {\n      composeOpen: composeOpen,\n      toggleCompose: toggleCompose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Mails, \"inPC7gC9m81X9tSbLZyTqxj1bK0=\");\n\n_c = Mails;\nexport default Mails;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mails\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/apps/email/Mails.js"],"names":["Fragment","useState","MailCard","MailDetails","ComposePopUp","Icon","formatDateToMonthShort","InputAdornment","TextField","SearchIcon","IconButton","CancelRoundedIcon","PerfectScrollbar","InputGroup","InputGroupAddon","Input","InputGroupText","CustomInput","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","Row","Col","Menu","Search","ArrowLeftCircle","Folder","Tag","Mail","Trash","Edit2","Info","Mails","props","query","store","setQuery","dispatch","selectMail","composeOpen","updateMails","paginateMail","selectAllMail","toggleCompose","setSidebarOpen","updateMailLabel","resetSelectedMail","selectCurrentMail","mails","selectedMails","openMail","setOpenMail","search","setSearchVisible","value","setValue","labelColors","personal","company","important","private","handleMailClick","id","handleFolderUpdate","e","folder","ids","preventDefault","handleLabelsUpdate","label","handleMailReadUpdate","arr","bool","isRead","then","handleMailToTrash","renderMails","length","map","mail","index","padding","target","startAdornment","endAdornment","wheelPropagation","width","currentMail"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Mail Components Imports\r\nimport MailCard from './MailCard'\r\nimport MailDetails from './MailDetails'\r\nimport ComposePopUp from './ComposePopup'\r\nimport * as Icon from 'react-feather'\r\n\r\n// ** Utils\r\nimport { formatDateToMonthShort } from '@utils'\r\n\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\n// import PlusIcon from \"@material-ui/icons/Plus\"\r\n\r\nimport { IconButton } from \"@material-ui/core\"\r\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\"\r\n\r\n// ** Third Party Components\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  InputGroupText,\r\n  CustomInput,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Row,\r\n  Col\r\n} from 'reactstrap'\r\nimport { Menu, Search, ArrowLeftCircle, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\r\n\r\nconst Mails = props => {\r\n  // ** Props\r\n  const {\r\n    query,\r\n    store,\r\n    setQuery,\r\n    dispatch,\r\n    selectMail,\r\n    composeOpen,\r\n    updateMails,\r\n    paginateMail,\r\n    selectAllMail,\r\n    toggleCompose,\r\n    setSidebarOpen,\r\n    updateMailLabel,\r\n    resetSelectedMail,\r\n    selectCurrentMail\r\n  } = props\r\n\r\n  const { mails, selectedMails } = store\r\n\r\n  // ** States\r\n  const [openMail, setOpenMail] = useState(false)\r\n  const [search, setSearchVisible] = useState(false)\r\n  const [value, setValue] = useState(\"\")\r\n\r\n  // ** Variables\r\n  const labelColors = {\r\n    personal: 'success',\r\n    company: 'primary',\r\n    important: 'warning',\r\n    private: 'danger'\r\n  }\r\n\r\n  // ** Handles Update Functions\r\n  const handleMailClick = id => {\r\n    dispatch(selectCurrentMail(id))\r\n    setOpenMail(true)\r\n  }\r\n\r\n  /*eslint-disable */\r\n\r\n  // ** Handles Folder Update\r\n  const handleFolderUpdate = (e, folder, ids = selectedMails) => {\r\n    e.preventDefault()\r\n    dispatch(updateMails(ids, { folder }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  // ** Handles Label Update\r\n  const handleLabelsUpdate = (e, label, ids = selectedMails) => {\r\n    e.preventDefault()\r\n    dispatch(updateMailLabel(ids, label))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  // ** Handles Mail Read Update\r\n  const handleMailReadUpdate = (arr, bool) => {\r\n    dispatch(updateMails(arr, { isRead: bool })).then(() => dispatch(resetSelectedMail()))\r\n    dispatch(selectAllMail(false))\r\n  }\r\n\r\n  // ** Handles Move to Trash\r\n  const handleMailToTrash = ids => {\r\n    dispatch(updateMails(ids, { folder: 'trash' }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n  /*eslint-enable */\r\n\r\n  // ** Renders Mail\r\n  const renderMails = () => {\r\n    if (mails.length) {\r\n      return mails.map((mail, index) => {\r\n        return (\r\n          <MailCard\r\n            mail={mail}\r\n            key={index}\r\n            dispatch={dispatch}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            labelColors={labelColors}\r\n            selectedMails={selectedMails}\r\n            handleMailClick={handleMailClick}\r\n            handleMailReadUpdate={handleMailReadUpdate}\r\n            formatDateToMonthShort={formatDateToMonthShort}\r\n          />\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Row> */}\r\n        {/* <Col md={6}> */}\r\n      <div className='email-app-list'>\r\n        <div className='app-fixed-search d-flex align-items-center'>\r\n          <div className='sidebar-toggle d-block d-lg-none ml-1' onClick={() => setSidebarOpen(true)}>\r\n           {/* <span></> < />  */}\r\n           <span className='dropdown_icon' style={{padding: \"6px 2px\"}}  ><Icon.ArrowLeft /> </span>\r\n\r\n          </div>\r\n          <div className='align-content-center justify-content-between w-100'>\r\n            {/* <InputGroup className='input-group-merge'>\r\n              <InputGroupAddon addonType='prepend'>\r\n                <InputGroupText>\r\n                  <Search className='text-muted' size={14} />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input\r\n                id='email-search'\r\n                placeholder='Search email'\r\n                value={query}\r\n                onChange={e => setQuery(e.target.value)}\r\n              /> */}\r\n            {/* </InputGroup> */}\r\n             { search === false ?  <span className='broadcom_align float-right'>\r\n          {/* <ListItem  component=\"div\" tag={Link}  onClick={handleClick}>\r\n            <ListItemText  inset primary=\"All Categories\" />\r\n            {open ? <span className='dropdown_icon'><ExpandLess /> </span> : <span className='dropdown_icon'> <ExpandMore /> </span>}\r\n          </ListItem> */}\r\n         \r\n          <div className='sidebar_search'>\r\n          <span className='align-middle dropdown_icon mr20'   ><Icon.RotateCw  style={{padding:\"4px\"}} /> </span>\r\n          <span className='align-middle dropdown_icon mr20'  ><Icon.Plus /> </span>\r\n          <span className='align-middle dropdown_icon '   onClick={() => [setSearchVisible(!search)] }>  <SearchIcon /> </span>\r\n          {/* <RefreshCcw /> */}\r\n          </div>\r\n          </span> : <TextField\r\n          placeholder=\"Search\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n          InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment:(\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => [setSearchVisible(!search), setValue(\"\")] }\r\n                  >\r\n                    <CancelRoundedIcon />\r\n                  </IconButton>\r\n                )\r\n              }}\r\n            /> }\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\r\n        <div className='app-action light-gray-bg'>\r\n          <div className='action-left' style={{width:\"100%\"}}>\r\n          <p className='text-truncate mb-0'>Tread name display for longer text eclips Tread name display for longer text eclipse Tread name display for longer text eclipse Tread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipseTread name display for longer text eclipse</p>\r\n          </div>\r\n            <div className='action-right'>\r\n            <Info size={18} />\r\n            </div>\r\n        </div>\r\n\r\n          {mails.length ? (\r\n            <ul className='email-media-list'>{renderMails()}</ul>\r\n          ) : (\r\n            <div className='no-results d-block'>\r\n              <h5>No Items Found</h5>\r\n            </div>\r\n        )} \r\n        </PerfectScrollbar>\r\n      </div>\r\n      {/* </Col>\r\n      <Col  md={6}>\r\n        sadadadj */}\r\n      <MailDetails\r\n        openMail={openMail}\r\n        dispatch={dispatch}\r\n        mail={store.currentMail}\r\n        labelColors={labelColors}\r\n        setOpenMail={setOpenMail}\r\n        updateMails={updateMails}\r\n        paginateMail={paginateMail}\r\n        updateMailLabel={updateMailLabel}\r\n        handleMailToTrash={handleMailToTrash}\r\n        handleFolderUpdate={handleFolderUpdate}\r\n        handleLabelsUpdate={handleLabelsUpdate}\r\n        handleMailReadUpdate={handleMailReadUpdate}\r\n        formatDateToMonthShort={formatDateToMonthShort}\r\n      />\r\n      <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\r\n      {/* </Col>\r\n      </Row> */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Mails\r\n"]},"metadata":{},"sourceType":"module"}