{"ast":null,"code":"/**\r\n * Truncates a string to the given number of chars (maxLength) by inserting '...' in the middle of that string.\r\n * Partially taken from https://stackoverflow.com/a/5723274/3192470.\r\n *\r\n * @param {string} string - string to be truncated\r\n * @param {number} maxLength - maximum size of the resulting string\r\n * @returns {string}\r\n */\nmodule.exports = function truncateString(string, maxLength) {\n  var separator = '...'; // Return original string if it's already shorter than maxLength\n\n  if (string.length <= maxLength) {\n    return string; // Return truncated substring without '...' if string can't be meaningfully truncated\n  }\n\n  if (maxLength <= separator.length) {\n    return string.substr(0, maxLength); // Return truncated string divided in half by '...'\n  }\n\n  var charsToShow = maxLength - separator.length;\n  var frontChars = Math.ceil(charsToShow / 2);\n  var backChars = Math.floor(charsToShow / 2);\n  return string.substr(0, frontChars) + separator + string.substr(string.length - backChars);\n};","map":{"version":3,"sources":["D:/nodejs/IMA/node_modules/@uppy/utils/lib/truncateString.js"],"names":["module","exports","truncateString","string","maxLength","separator","length","substr","charsToShow","frontChars","Math","ceil","backChars","floor"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,SAAhC,EAA2C;AAC1D,MAAIC,SAAS,GAAG,KAAhB,CAD0D,CACnC;;AAEvB,MAAIF,MAAM,CAACG,MAAP,IAAiBF,SAArB,EAAgC;AAC9B,WAAOD,MAAP,CAD8B,CACf;AAChB;;AAED,MAAIC,SAAS,IAAIC,SAAS,CAACC,MAA3B,EAAmC;AACjC,WAAOH,MAAM,CAACI,MAAP,CAAc,CAAd,EAAiBH,SAAjB,CAAP,CADiC,CACG;AACrC;;AAED,MAAII,WAAW,GAAGJ,SAAS,GAAGC,SAAS,CAACC,MAAxC;AACA,MAAIG,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,WAAW,GAAG,CAAxB,CAAjB;AACA,MAAII,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAWL,WAAW,GAAG,CAAzB,CAAhB;AACA,SAAOL,MAAM,CAACI,MAAP,CAAc,CAAd,EAAiBE,UAAjB,IAA+BJ,SAA/B,GAA2CF,MAAM,CAACI,MAAP,CAAcJ,MAAM,CAACG,MAAP,GAAgBM,SAA9B,CAAlD;AACD,CAfD","sourcesContent":["/**\r\n * Truncates a string to the given number of chars (maxLength) by inserting '...' in the middle of that string.\r\n * Partially taken from https://stackoverflow.com/a/5723274/3192470.\r\n *\r\n * @param {string} string - string to be truncated\r\n * @param {number} maxLength - maximum size of the resulting string\r\n * @returns {string}\r\n */\r\nmodule.exports = function truncateString(string, maxLength) {\r\n  var separator = '...'; // Return original string if it's already shorter than maxLength\r\n\r\n  if (string.length <= maxLength) {\r\n    return string; // Return truncated substring without '...' if string can't be meaningfully truncated\r\n  }\r\n\r\n  if (maxLength <= separator.length) {\r\n    return string.substr(0, maxLength); // Return truncated string divided in half by '...'\r\n  }\r\n\r\n  var charsToShow = maxLength - separator.length;\r\n  var frontChars = Math.ceil(charsToShow / 2);\r\n  var backChars = Math.floor(charsToShow / 2);\r\n  return string.substr(0, frontChars) + separator + string.substr(string.length - backChars);\r\n};"]},"metadata":{},"sourceType":"script"}