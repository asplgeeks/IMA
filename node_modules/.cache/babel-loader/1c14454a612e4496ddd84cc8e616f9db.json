{"ast":null,"code":"import _defineProperty from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shree\\\\Downloads\\\\newproject\\\\full-version\\\\src\\\\redux\\\\actions\\\\auth\\\\index.js\",\n    _this = this;\n\n// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt';\nimport axios from 'axios';\nimport { data } from 'jquery';\nimport { useHistory } from 'react-router-dom';\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar config = useJwt.jwtConfig;\nvar result;\n\nvar toster = function toster() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Toast, {\n      children: [/*#__PURE__*/_jsxDEV(ToastHeader, {\n        children: \"Hurrey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(ToastBody, {\n        children: \"\\\"we'll send you instructions to reset your password\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n}; // ** Handle User Login\n\n\nexport var handleLogin = function handleLogin(data) {\n  console.log(data);\n  axios.post(\"http://172.105.49.15:3030/api/user/login_user\", {\n    mobile_number: data.phone,\n    password: data.role\n  });\n  return function (dispatch) {\n    var _dispatch;\n\n    dispatch((_dispatch = {\n      type: 'LOGIN',\n      data: data,\n      config: config\n    }, _defineProperty(_dispatch, config.storageTokenKeyName, data[config.storageTokenKeyName]), _defineProperty(_dispatch, config.storageRefreshTokenKeyName, data[config.storageRefreshTokenKeyName]), _dispatch)); // ** Add to user, accessToken & refreshToken to localStorage\n\n    localStorage.setItem('userData', JSON.stringify(data));\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken));\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken));\n  };\n}; // ** Handle User Logout\n\nexport var handleLogout = function handleLogout() {\n  return function (dispatch) {\n    var _dispatch2;\n\n    dispatch((_dispatch2 = {\n      type: 'LOGOUT'\n    }, _defineProperty(_dispatch2, config.storageTokenKeyName, null), _defineProperty(_dispatch2, config.storageRefreshTokenKeyName, null), _dispatch2)); // ** Remove user, accessToken & refreshToken from localStorage\n\n    localStorage.removeItem('userData');\n    localStorage.removeItem(config.storageTokenKeyName);\n    localStorage.removeItem(config.storageRefreshTokenKeyName);\n  };\n};\nexport var handleForgotPassword = function handleForgotPassword(props, data) {\n  axios.post(\"http://172.105.49.15:3030/api/user/check_mobile_number_exist\", {\n    mobile_number: data.login_phone // password:data.password\n\n  }).then(function (r) {\n    if (r.data === null) {\n      axios.post(\"http://172.105.49.15:3030/api/user/send_otp\", {\n        mobile_number: data.login_phone // password:data.password\n\n      }).then(function (r) {\n        console.log(r);\n      });\n      props.history.push('/otp');\n      alert(\"we'll send you instructions to reset your password\");\n    } else {\n      alert(\"Mobile number already exist\");\n    }\n  });\n  return function (dispatch) {\n    dispatch({\n      type: 'Create_New',\n      data: data\n    });\n  };\n};\nexport var SendOtp = function SendOtp(data) {\n  axios.post('http://172.105.49.15:3030/api/user/check_otp', {\n    otp: data.login_otp\n  });\n  return function (dispatch) {\n    dispatch({\n      type: 'Otp',\n      data: data\n    });\n  };\n};\n_c = SendOtp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendOtp\");","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/redux/actions/auth/index.js"],"names":["useJwt","axios","data","useHistory","Toast","ToastBody","ToastHeader","config","jwtConfig","result","toster","handleLogin","console","log","post","mobile_number","phone","password","role","dispatch","type","storageTokenKeyName","storageRefreshTokenKeyName","localStorage","setItem","JSON","stringify","accessToken","refreshToken","handleLogout","removeItem","handleForgotPassword","props","login_phone","then","r","history","push","alert","SendOtp","otp","login_otp"],"mappings":"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","sourcesContent":["// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\nimport axios from 'axios'\nimport { data } from 'jquery'\nimport {useHistory} from 'react-router-dom'\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\n\nconst config = useJwt.jwtConfig\nlet result\n\nconst toster = () => {\n  return (\n    <div>\n        <Toast>\n          <ToastHeader>\n            Hurrey\n          </ToastHeader>\n          <ToastBody>\n          \"we'll send you instructions to reset your password\"\n          </ToastBody>\n        </Toast>\n    </div>\n  )\n}\n// ** Handle User Login\nexport const handleLogin = (data) => {\n  console.log(data)\n  axios.post(`http://172.105.49.15:3030/api/user/login_user`, {\n    mobile_number:data.phone,\n    password:data.role\n})\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n\nexport const handleForgotPassword = (props, data) => {\n\n  axios.post(`http://172.105.49.15:3030/api/user/check_mobile_number_exist`, {\n    mobile_number:data.login_phone\n    // password:data.password\n})\n.then(r => { \n   if (r.data === null) {\n    axios.post(`http://172.105.49.15:3030/api/user/send_otp`, {\n      mobile_number:data.login_phone\n      // password:data.password\n  })\n  .then(r => {\n    console.log(r)\n  })\n  props.history.push('/otp')\n  alert(\"we'll send you instructions to reset your password\")\n  } else {\n    alert(\"Mobile number already exist\")\n  }\n  })\n\n\n  return dispatch => {\n    dispatch({ type: 'Create_New', data })\n  }\n}\n\nexport const SendOtp = (data) => {\n  axios.post('http://172.105.49.15:3030/api/user/check_otp', {\n    otp:data.login_otp\n  })\n  return dispatch => {\n    dispatch({ type: 'Otp', data })\n  }\n}"]},"metadata":{},"sourceType":"module"}