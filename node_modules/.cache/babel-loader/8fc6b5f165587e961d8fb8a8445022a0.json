{"ast":null,"code":"import _slicedToArray from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shree\\\\Downloads\\\\newproject\\\\full-version\\\\src\\\\views\\\\pages\\\\master\\\\countrymaster.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useContext, Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Card, Table, CardBody, CardTitle, CardText, Form, FormGroup, Label, Input, CustomInput, Button } from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport classnames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { handleMaster } from '@store/actions/masteruser';\nimport axios from 'axios'; // import '@styles/base/pages/page-auth.scss'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CountryMaster = function CountryMaster(props) {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useState = useState('admin@demo.com'),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var onSubmit = function onSubmit(data) {//   alert(\"SUBMITED SUCCESSFULLY\")\n    //   dispatch(handleMaster(data))\n  };\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"auth-login-form mt-2\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Country Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"code\",\n              id: \"code\",\n              name: \"code\",\n              className: classnames({\n                'is-invalid': errors['code']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your code\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Country Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"country_name\",\n              value: email,\n              id: \"country_name\",\n              name: \"country_name\",\n              onChange: function onChange(e) {\n                return setEmail(e.target.value);\n              },\n              className: classnames({\n                'is-invalid': errors['country_name']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Country Name\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n        color: \"primary\",\n        type: \"submit\",\n        style: {\n          float: \"right\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(CountryMaster, \"o6IEgrA1oWWXaNeZHXWYcFpMY1k=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = CountryMaster;\nexport default CountryMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryMaster\");","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/views/pages/master/countrymaster.js"],"names":["useState","useContext","Fragment","useEffect","Link","Col","Row","Card","Table","CardBody","CardTitle","CardText","Form","FormGroup","Label","Input","CustomInput","Button","useForm","classnames","useDispatch","handleMaster","axios","CountryMaster","props","register","errors","handleSubmit","email","setEmail","dispatch","onSubmit","data","console","log","required","validate","value","e","target","float"],"mappings":"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","sourcesContent":["import { useState, useContext, Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Col, Row, Card, Table, CardBody, CardTitle, CardText, Form, FormGroup, Label, Input, CustomInput, Button } from 'reactstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport classnames from 'classnames'\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleMaster } from '@store/actions/masteruser'\r\nimport axios from 'axios'\r\n// import '@styles/base/pages/page-auth.scss'\r\n\r\nconst CountryMaster = (props) => {\r\n  const { register, errors, handleSubmit } = useForm()\r\n  const [email, setEmail] = useState('admin@demo.com')\r\n  const dispatch = useDispatch()\r\n  const onSubmit = data => {\r\n    //   alert(\"SUBMITED SUCCESSFULLY\")\r\n    //   dispatch(handleMaster(data))\r\n    }\r\n    console.log(props)\r\nreturn (\r\n  <div>\r\n  <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n            <Row>\r\n            <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 Country Code\r\n                </Label>\r\n                <Input\r\n                 type='code'\r\n                 id='code'\r\n                name=\"code\"\r\n                  className={classnames({ 'is-invalid': errors['code'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='please enter your code' autoFocus />\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                  Country Name\r\n                </Label>\r\n                <Input\r\n                 type='country_name'\r\n                 value={email}\r\n                 id='country_name'\r\n                 name='country_name'\r\n                 onChange={e => setEmail(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['country_name'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                placeholder='Country Name'\r\n                 autoFocus />\r\n              </FormGroup>\r\n              </Col>\r\n              </Row>\r\n              {/* <FormGroup row>\r\n                  <Col md={6}>\r\n        <Label for=\"exampleText\" sm={4}>Status</Label>\r\n       \r\n          <Input type=\"textarea\" placeholder='please enter a message' id=\"exampleText\"  autoFocus/>\r\n          </Col>\r\n      </FormGroup> */}\r\n\r\n              {/* <FormGroup>\r\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Remember Me' />\r\n              </FormGroup> */}\r\n  <Button.Ripple color='primary' type=\"submit\" style={{float:\"right\"}} >\r\n                Save\r\n              </Button.Ripple>\r\n            \r\n            </Form>\r\n  </div>\r\n)\r\n}\r\n\r\nexport default CountryMaster"]},"metadata":{},"sourceType":"module"}