{"ast":null,"code":"import axios from 'axios'; // ** GET Mails\n\nexport var getMails = function getMails(params) {\n  return function (dispatch) {\n    return axios.get('/apps/email/emails', {\n      params: params\n    }).then(function (res) {\n      dispatch({\n        type: 'GET_MAILS',\n        data: res.data[0],\n        params: params\n      });\n    });\n  };\n}; // ** UPDATE Mails\n\nexport var updateMails = function updateMails(emailIds, dataToUpdate) {\n  return function (dispatch, getState) {\n    return axios.post('/apps/email/update-emails', {\n      emailIds: emailIds,\n      dataToUpdate: dataToUpdate\n    }).then(function (res) {\n      dispatch({\n        type: 'UPDATE_MAILS',\n        emailIds: emailIds,\n        dataToUpdate: dataToUpdate,\n        data: res.data\n      });\n      dispatch(getMails(getState().email.params));\n    });\n  };\n}; // ** Update Mail Label\n\nexport var updateMailLabel = function updateMailLabel(emailIds, label) {\n  return function (dispatch, getState) {\n    return axios.post('/apps/email/update-emails-label', {\n      emailIds: emailIds,\n      label: label\n    }).then(function (res) {\n      dispatch({\n        type: 'UPDATE_MAIL_LABEL',\n        data: res.data\n      });\n      dispatch(getMails(getState().email.params));\n    });\n  };\n}; // ** GET Next/Prev mail\n\nexport var paginateMail = function paginateMail(dir, emailId) {\n  return function (dispatch) {\n    return axios.get('/apps/email/paginate-email', {\n      params: {\n        dir: dir,\n        emailId: emailId\n      }\n    }).then(function (res) {\n      dispatch({\n        type: 'PAGINATE_MAIL',\n        data: res.data\n      });\n    });\n  };\n}; // ** SELECT Current Mail\n\nexport var selectCurrentMail = function selectCurrentMail(id) {\n  return function (dispatch) {\n    return axios.get('/apps/email/get-email', {\n      id: id\n    }).then(function (res) {\n      dispatch({\n        type: 'SELECT_CURRENT_MAIL',\n        mail: res.data\n      });\n    });\n  };\n}; // ** SELECT Mail\n\nexport var selectMail = function selectMail(id) {\n  return function (dispatch) {\n    return dispatch({\n      type: 'SELECT_MAIL',\n      id: id\n    });\n  };\n}; // ** SELECT All Mails\n\nexport var selectAllMail = function selectAllMail(val) {\n  return function (dispatch) {\n    return dispatch({\n      type: 'SELECT_ALL_MAIL',\n      val: val\n    });\n  };\n}; // ** RESET Selected Mails\n\nexport var resetSelectedMail = function resetSelectedMail() {\n  return function (dispatch) {\n    return dispatch({\n      type: 'RESET_SELECT_MAILS'\n    });\n  };\n};","map":{"version":3,"sources":["D:/IMA/src/views/apps/email/store/actions/index.js"],"names":["axios","getMails","params","dispatch","get","then","res","type","data","updateMails","emailIds","dataToUpdate","getState","post","email","updateMailLabel","label","paginateMail","dir","emailId","selectCurrentMail","id","mail","selectMail","selectAllMail","val","resetSelectedMail"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\n// ** GET Mails\r\nexport const getMails = params => {\r\n  return dispatch => {\r\n    return axios.get('/apps/email/emails', { params }).then(res => {\r\n      dispatch({ type: 'GET_MAILS', data: res.data[0], params })\r\n    })\r\n  }\r\n}\r\n\r\n// ** UPDATE Mails\r\nexport const updateMails = (emailIds, dataToUpdate) => {\r\n  return (dispatch, getState) => {\r\n    return axios.post('/apps/email/update-emails', { emailIds, dataToUpdate }).then(res => {\r\n      dispatch({ type: 'UPDATE_MAILS', emailIds, dataToUpdate, data: res.data })\r\n      dispatch(getMails(getState().email.params))\r\n    })\r\n  }\r\n}\r\n\r\n// ** Update Mail Label\r\nexport const updateMailLabel = (emailIds, label) => {\r\n  return (dispatch, getState) => {\r\n    return axios.post('/apps/email/update-emails-label', { emailIds, label }).then(res => {\r\n      dispatch({ type: 'UPDATE_MAIL_LABEL', data: res.data })\r\n      dispatch(getMails(getState().email.params))\r\n    })\r\n  }\r\n}\r\n\r\n// ** GET Next/Prev mail\r\nexport const paginateMail = (dir, emailId) => {\r\n  return dispatch => {\r\n    return axios.get('/apps/email/paginate-email', { params: { dir, emailId } }).then(res => {\r\n      dispatch({ type: 'PAGINATE_MAIL', data: res.data })\r\n    })\r\n  }\r\n}\r\n\r\n// ** SELECT Current Mail\r\nexport const selectCurrentMail = id => dispatch => {\r\n  return axios.get('/apps/email/get-email', { id }).then(res => {\r\n    dispatch({ type: 'SELECT_CURRENT_MAIL', mail: res.data })\r\n  })\r\n}\r\n\r\n// ** SELECT Mail\r\nexport const selectMail = id => dispatch => dispatch({ type: 'SELECT_MAIL', id })\r\n\r\n// ** SELECT All Mails\r\nexport const selectAllMail = val => dispatch => dispatch({ type: 'SELECT_ALL_MAIL', val })\r\n\r\n// ** RESET Selected Mails\r\nexport const resetSelectedMail = () => dispatch => dispatch({ type: 'RESET_SELECT_MAILS' })\r\n"]},"metadata":{},"sourceType":"module"}