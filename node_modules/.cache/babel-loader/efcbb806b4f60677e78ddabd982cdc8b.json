{"ast":null,"code":"import _slicedToArray from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// ** React Imports\nimport{useState}from'react';// ** Configs\nimport themeConfig from'@configs/themeConfig';export var useFooterType=function useFooterType(){// ** State\nvar _useState=useState(function(){try{return themeConfig.layout.footer.type;}catch(error){// ** If error also initialValue\nconsole.log(error);return themeConfig.layout.footer.type;}}),_useState2=_slicedToArray(_useState,2),footerType=_useState2[0],setFooterType=_useState2[1];// ** Return a wrapped version of useState's setter function\nvar setValue=function setValue(value){try{// ** Allow value to be a function so we have same API as useState\nvar valueToStore=value instanceof Function?value(footerType):value;// ** Set state\nsetFooterType(valueToStore);}catch(error){// ** A more advanced implementation would handle the error case\nconsole.log(error);}};return[footerType,setValue];};","map":{"version":3,"sources":["D:/nodejs/IMA/src/utility/hooks/useFooterType.js"],"names":["useState","themeConfig","useFooterType","layout","footer","type","error","console","log","footerType","setFooterType","setValue","value","valueToStore","Function"],"mappings":"oIAAA;AACA,OAASA,QAAT,KAAyB,OAAzB,CAEA;AACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC;AACA,cAAoCF,QAAQ,CAAC,UAAM,CACjD,GAAI,CACF,MAAOC,CAAAA,WAAW,CAACE,MAAZ,CAAmBC,MAAnB,CAA0BC,IAAjC,CACD,CAAC,MAAOC,KAAP,CAAc,CACd;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,MAAOL,CAAAA,WAAW,CAACE,MAAZ,CAAmBC,MAAnB,CAA0BC,IAAjC,CACD,CACF,CAR2C,CAA5C,wCAAOI,UAAP,eAAmBC,aAAnB,eAUA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CACxB,GAAI,CACF;AACA,GAAMC,CAAAA,YAAY,CAAGD,KAAK,WAAYE,CAAAA,QAAjB,CAA4BF,KAAK,CAACH,UAAD,CAAjC,CAAgDG,KAArE,CAEA;AACAF,aAAa,CAACG,YAAD,CAAb,CACD,CAAC,MAAOP,KAAP,CAAc,CACd;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CACF,CAXD,CAaA,MAAO,CAACG,UAAD,CAAaE,QAAb,CAAP,CACD,CA3BM","sourcesContent":["// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}