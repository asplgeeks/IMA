{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\star\\\\erpfrontend\\\\src\\\\views\\\\apps\\\\email\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom'; // ** Email App Component Imports\n\nimport Mails from './Mails';\nimport Sidebar from './Sidebar'; // ** Third Party Components\n\nimport classnames from 'classnames'; // ** Store & Actions\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMails, selectMail, updateMails, paginateMail, selectAllMail, resetSelectedMail, selectCurrentMail, updateMailLabel } from './store/actions'; // ** Styles\n\nimport '@styles/react/apps/app-email.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar EmailApp = function EmailApp() {\n  _s();\n\n  // ** States\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sidebarOpen = _useState4[0],\n      setSidebarOpen = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      composeOpen = _useState6[0],\n      setComposeOpen = _useState6[1]; // ** Toggle Compose Function\n\n\n  var toggleCompose = function toggleCompose() {\n    return setComposeOpen(!composeOpen);\n  }; // ** Store Variables\n\n\n  var dispatch = useDispatch();\n  var store = useSelector(function (state) {\n    return state.email;\n  }); // ** Vars\n\n  var params = useParams(); // ** UseEffect: GET initial data on Mount\n\n  useEffect(function () {\n    dispatch(getMails({\n      q: query || '',\n      folder: params.folder || 'inbox',\n      label: params.label || ''\n    }));\n  }, [query, params.folder, params.label]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      store: store,\n      dispatch: dispatch,\n      getMails: getMails,\n      sidebarOpen: sidebarOpen,\n      toggleCompose: toggleCompose,\n      setSidebarOpen: setSidebarOpen,\n      resetSelectedMail: resetSelectedMail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('body-content-overlay', {\n            show: sidebarOpen\n          }),\n          onClick: function onClick() {\n            return setSidebarOpen(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Mails, {\n          store: store,\n          query: query,\n          setQuery: setQuery,\n          dispatch: dispatch,\n          getMails: getMails,\n          selectMail: selectMail,\n          updateMails: updateMails,\n          composeOpen: composeOpen,\n          paginateMail: paginateMail,\n          selectAllMail: selectAllMail,\n          toggleCompose: toggleCompose,\n          setSidebarOpen: setSidebarOpen,\n          updateMailLabel: updateMailLabel,\n          selectCurrentMail: selectCurrentMail,\n          resetSelectedMail: resetSelectedMail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EmailApp, \"s6DeUgEs3+35Rm6JBTwA5CmK9tw=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n\n_c = EmailApp;\nexport default EmailApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailApp\");","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/src/views/apps/email/index.js"],"names":["Fragment","useEffect","useState","useParams","Mails","Sidebar","classnames","useDispatch","useSelector","getMails","selectMail","updateMails","paginateMail","selectAllMail","resetSelectedMail","selectCurrentMail","updateMailLabel","EmailApp","query","setQuery","sidebarOpen","setSidebarOpen","composeOpen","setComposeOpen","toggleCompose","dispatch","store","state","email","params","q","folder","label","show"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// ** Email App Component Imports\r\nimport Mails from './Mails'\r\nimport Sidebar from './Sidebar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMails,\r\n  selectMail,\r\n  updateMails,\r\n  paginateMail,\r\n  selectAllMail,\r\n  resetSelectedMail,\r\n  selectCurrentMail,\r\n  updateMailLabel\r\n} from './store/actions'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-email.scss'\r\n\r\nconst EmailApp = () => {\r\n  // ** States\r\n  const [query, setQuery] = useState('')\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [composeOpen, setComposeOpen] = useState(false)\r\n\r\n  // ** Toggle Compose Function\r\n  const toggleCompose = () => setComposeOpen(!composeOpen)\r\n\r\n  // ** Store Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.email)\r\n\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** UseEffect: GET initial data on Mount\r\n  useEffect(() => {\r\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\r\n  }, [query, params.folder, params.label])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        getMails={getMails}\r\n        sidebarOpen={sidebarOpen}\r\n        toggleCompose={toggleCompose}\r\n        setSidebarOpen={setSidebarOpen}\r\n        resetSelectedMail={resetSelectedMail}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-body'>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: sidebarOpen\r\n            })}\r\n            onClick={() => setSidebarOpen(false)}\r\n          ></div>\r\n          <Mails\r\n            store={store}\r\n            query={query}\r\n            setQuery={setQuery}\r\n            dispatch={dispatch}\r\n            getMails={getMails}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            composeOpen={composeOpen}\r\n            paginateMail={paginateMail}\r\n            selectAllMail={selectAllMail}\r\n            toggleCompose={toggleCompose}\r\n            setSidebarOpen={setSidebarOpen}\r\n            updateMailLabel={updateMailLabel}\r\n            selectCurrentMail={selectCurrentMail}\r\n            resetSelectedMail={resetSelectedMail}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmailApp\r\n"]},"metadata":{},"sourceType":"module"}