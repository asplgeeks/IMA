{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\star\\\\erpfrontend\\\\src\\\\views\\\\components\\\\autocomplete\\\\AutoCompleteAjax.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AutoComplete from '@components/autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AutoCompleteAjax = function AutoCompleteAjax() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      suggestions = _useState2[0],\n      setSuggestions = _useState2[1];\n\n  useEffect(function () {\n    axios.get('/api/autocomplete/data').then(function (response) {\n      return setSuggestions(response.data.autoComplete);\n    });\n  }, []);\n  return suggestions.length ? /*#__PURE__*/_jsxDEV(AutoComplete, {\n    suggestions: suggestions,\n    className: \"form-control\",\n    filterKey: \"title\",\n    suggestionLimit: 4,\n    placeholder: \"Search for any of the top 250 IMDB movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this) : null;\n};\n\n_s(AutoCompleteAjax, \"DhcVPwfWOGvs7Clfxsk39JgmNE0=\");\n\n_c = AutoCompleteAjax;\nexport default AutoCompleteAjax;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoCompleteAjax\");","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/src/views/components/autocomplete/AutoCompleteAjax.js"],"names":["useState","useEffect","axios","AutoComplete","AutoCompleteAjax","suggestions","setSuggestions","get","then","response","data","autoComplete","length"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC7B,kBAAsCJ,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOK,WAAP;AAAA,MAAoBC,cAApB;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,KAAK,CAACK,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CAAyC,UAAAC,QAAQ;AAAA,aAAIH,cAAc,CAACG,QAAQ,CAACC,IAAT,CAAcC,YAAf,CAAlB;AAAA,KAAjD;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAON,WAAW,CAACO,MAAZ,gBACL,QAAC,YAAD;AACE,IAAA,WAAW,EAAEP,WADf;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,SAAS,EAAC,OAHZ;AAIE,IAAA,eAAe,EAAE,CAJnB;AAKE,IAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,WADK,GAQH,IARJ;AASD,CAhBD;;GAAMD,gB;;KAAAA,gB;AAiBN,eAAeA,gBAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteAjax = () => {\r\n  const [suggestions, setSuggestions] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/autocomplete/data').then(response => setSuggestions(response.data.autoComplete))\r\n  }, [])\r\n\r\n  return suggestions.length ? (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='title'\r\n      suggestionLimit={4}\r\n      placeholder='Search for any of the top 250 IMDB movies'\r\n    />\r\n  ) : null\r\n}\r\nexport default AutoCompleteAjax\r\n"]},"metadata":{},"sourceType":"module"}