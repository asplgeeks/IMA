{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodejs\\\\star\\\\erpfrontend\\\\src\\\\views\\\\components\\\\alerts\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport Prism from 'prismjs';\nimport { Row, Col, CardText } from 'reactstrap';\nimport Card from '@components/card-snippet';\nimport DefaultAlert from './DefaultAlert';\nimport AlertTitle from './AlertTitle';\nimport AlertColors from './AlertColors';\nimport AlertDismissable from './AlertDismissable';\nimport AlertUncontrolled from './AlertUncontrolled';\nimport AlertIcon from './AlertIcon';\nimport AlertExample from './AlertExample';\nimport { defaultAlert, alertColors, alertTitle, alertDismissable, alertUncontrolled, alertIcon, alertExample } from './AlertSourceCode';\nimport BreadCrumbs from '@components/breadcrumbs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Alerts = function Alerts() {\n  _s();\n\n  useEffect(function () {\n    Prism.highlightAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumbs, {\n      breadCrumbTitle: \"Alerts\",\n      breadCrumbParent: \"Components\",\n      breadCrumbActive: \"Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Default\",\n          code: defaultAlert,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Alerts are available for any length of text, as well as an optional dismiss button. Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"Alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 103\n            }, _this), ' ', \"Component & \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 27\n            }, _this), \" prop for alert with all theme colors.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(DefaultAlert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Title\",\n          code: alertTitle,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Add a title to the alert with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".alert-heading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 49\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(AlertTitle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Colors\",\n          code: alertColors,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, _this), \" prop to for alert with all theme colors.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(AlertColors, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Dismissable Alert\",\n          code: alertDismissable,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: [\"Using \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"isOpen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, _this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"toggle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 45\n            }, _this), \" you can create a dismissable alert.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(AlertDismissable, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Uncontrolled Alert\",\n          code: alertUncontrolled,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: \"For the most basic use-case an uncontrolled component can provide the functionality wanted without the need to manage/control the state of the component. UncontrolledAlert does not require isOpen nor toggle props to work.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(AlertUncontrolled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Icon\",\n          code: alertIcon,\n          children: /*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Example\",\n          code: alertExample,\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            children: \"An example would be to have an input and when a condition is met, show the alert.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(AlertExample, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Alerts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Alerts;\nexport default Alerts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/src/views/components/alerts/index.js"],"names":["Fragment","useEffect","Prism","Row","Col","CardText","Card","DefaultAlert","AlertTitle","AlertColors","AlertDismissable","AlertUncontrolled","AlertIcon","AlertExample","defaultAlert","alertColors","alertTitle","alertDismissable","alertUncontrolled","alertIcon","alertExample","BreadCrumbs","Alerts","highlightAll"],"mappings":"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","sourcesContent":["import { Fragment, useEffect } from 'react'\r\nimport Prism from 'prismjs'\r\nimport { Row, Col, CardText } from 'reactstrap'\r\nimport Card from '@components/card-snippet'\r\nimport DefaultAlert from './DefaultAlert'\r\nimport AlertTitle from './AlertTitle'\r\nimport AlertColors from './AlertColors'\r\nimport AlertDismissable from './AlertDismissable'\r\nimport AlertUncontrolled from './AlertUncontrolled'\r\nimport AlertIcon from './AlertIcon'\r\nimport AlertExample from './AlertExample'\r\nimport {\r\n  defaultAlert,\r\n  alertColors,\r\n  alertTitle,\r\n  alertDismissable,\r\n  alertUncontrolled,\r\n  alertIcon,\r\n  alertExample\r\n} from './AlertSourceCode'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\nconst Alerts = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Alerts' breadCrumbParent='Components' breadCrumbActive='Alerts' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Default' code={defaultAlert}>\r\n            <CardText>\r\n              Alerts are available for any length of text, as well as an optional dismiss button. Use <code>Alert</code>{' '}\r\n              Component & <code>color</code> prop for alert with all theme colors.\r\n            </CardText>\r\n            <DefaultAlert />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Title' code={alertTitle}>\r\n            <CardText>\r\n              Add a title to the alert with the <code>.alert-heading</code>\r\n            </CardText>\r\n            <AlertTitle />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Colors' code={alertColors}>\r\n            <CardText>\r\n              Use <code>color</code> prop to for alert with all theme colors.\r\n            </CardText>\r\n            <AlertColors />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Dismissable Alert' code={alertDismissable}>\r\n            <CardText>\r\n              Using <code>isOpen</code> and <code>toggle</code> you can create a dismissable alert.\r\n            </CardText>\r\n            <AlertDismissable />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Uncontrolled Alert' code={alertUncontrolled}>\r\n            <CardText>\r\n              For the most basic use-case an uncontrolled component can provide the functionality wanted without the\r\n              need to manage/control the state of the component. UncontrolledAlert does not require isOpen nor toggle\r\n              props to work.\r\n            </CardText>\r\n            <AlertUncontrolled />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Icon' code={alertIcon}>\r\n            <AlertIcon />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Example' code={alertExample}>\r\n            <CardText>An example would be to have an input and when a condition is met, show the alert.</CardText>\r\n            <AlertExample />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Alerts\r\n"]},"metadata":{},"sourceType":"module"}