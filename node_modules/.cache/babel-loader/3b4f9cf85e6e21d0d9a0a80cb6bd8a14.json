{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\views\\\\apps\\\\user\\\\list\\\\Sidebar.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Import\nimport { useState } from 'react'; // ** Custom Components\n\nimport Sidebar from '@components/sidebar'; // ** Utils\n\nimport { isObjEmpty } from '@utils'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { useForm } from 'react-hook-form';\nimport { Button, FormGroup, Label, FormText, Form, Input } from 'reactstrap'; // ** Store & Actions\n\nimport { addUser } from '../store/action';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SidebarNewUsers = function SidebarNewUsers(_ref) {\n  _s();\n\n  var open = _ref.open,\n      toggleSidebar = _ref.toggleSidebar;\n\n  // ** States\n  var _useState = useState('subscriber'),\n      _useState2 = _slicedToArray(_useState, 2),\n      role = _useState2[0],\n      setRole = _useState2[1];\n\n  var _useState3 = useState('basic'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      plan = _useState4[0],\n      setPlan = _useState4[1]; // ** Store Vars\n\n\n  var dispatch = useDispatch(); // ** Vars\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit; // ** Function to handle form submit\n\n\n  var onSubmit = function onSubmit(values) {\n    if (isObjEmpty(errors)) {\n      toggleSidebar();\n      dispatch(addUser({\n        fullName: values['full-name'],\n        company: values.company,\n        role: role,\n        username: values.username,\n        country: values.country,\n        contact: values.contact,\n        email: values.email,\n        currentPlan: plan,\n        status: 'active',\n        avatar: ''\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    size: \"lg\",\n    open: open,\n    title: \"New User\",\n    headerClassName: \"mb-1\",\n    contentClassName: \"pt-0\",\n    toggleSidebar: toggleSidebar,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"full-name\",\n          children: [\"Full Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"full-name\",\n          id: \"full-name\",\n          placeholder: \"John Doe\",\n          innerRef: register({\n            required: true\n          }),\n          className: classnames({\n            'is-invalid': errors['full-name']\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"username\",\n          children: [\"Username \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 22\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"username\",\n          id: \"username\",\n          placeholder: \"johnDoe99\",\n          innerRef: register({\n            required: true\n          }),\n          className: classnames({\n            'is-invalid': errors['username']\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"email\",\n          children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"john.doe@example.com\",\n          innerRef: register({\n            required: true\n          }),\n          className: classnames({\n            'is-invalid': errors['email']\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormText, {\n          color: \"muted\",\n          children: \"You can use letters, numbers & periods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"company\",\n          children: [\"Company \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"company\",\n          id: \"company\",\n          placeholder: \"Company Pvt Ltd\",\n          innerRef: register({\n            required: true\n          }),\n          className: classnames({\n            'is-invalid': errors['company']\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"country\",\n          children: [\"Country \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"country\",\n          id: \"country\",\n          placeholder: \"Australia\",\n          innerRef: register({\n            required: true\n          }),\n          className: classnames({\n            'is-invalid': errors['country']\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"contact\",\n          children: [\"Contact \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"contact\",\n          id: \"contact\",\n          placeholder: \"(397) 294-5153\",\n          innerRef: register({\n            required: true\n          }),\n          className: classnames({\n            'is-invalid': errors['contact']\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"user-role\",\n          children: \"User Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          id: \"user-role\",\n          name: \"user-role\",\n          value: role,\n          onChange: function onChange(e) {\n            return setRole(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"subscriber\",\n            children: \"Subscriber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"editor\",\n            children: \"Editor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"maintainer\",\n            children: \"Maintainer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"mb-2\",\n        value: plan,\n        onChange: function onChange(e) {\n          return setPlan(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"select-plan\",\n          children: \"Select Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          id: \"select-plan\",\n          name: \"select-plan\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"basic\",\n            children: \"Basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"enterprise\",\n            children: \"Enterprise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"company\",\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"team\",\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"mr-1\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"reset\",\n        color: \"secondary\",\n        outline: true,\n        onClick: toggleSidebar,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SidebarNewUsers, \"VkLyWy7nEqSQlH2Q66ZxDADB2HU=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = SidebarNewUsers;\nexport default SidebarNewUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarNewUsers\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/apps/user/list/Sidebar.js"],"names":["useState","Sidebar","isObjEmpty","classnames","useForm","Button","FormGroup","Label","FormText","Form","Input","addUser","useDispatch","SidebarNewUsers","open","toggleSidebar","role","setRole","plan","setPlan","dispatch","register","errors","handleSubmit","onSubmit","values","fullName","company","username","country","contact","email","currentPlan","status","avatar","required","e","target","value"],"mappings":"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","sourcesContent":["// ** React Import\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\n\r\n// ** Utils\r\nimport { isObjEmpty } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Button, FormGroup, Label, FormText, Form, Input } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { addUser } from '../store/action'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\r\n  // ** States\r\n  const [role, setRole] = useState('subscriber')\r\n  const [plan, setPlan] = useState('basic')\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** Vars\r\n  const { register, errors, handleSubmit } = useForm()\r\n\r\n  // ** Function to handle form submit\r\n  const onSubmit = values => {\r\n    if (isObjEmpty(errors)) {\r\n      toggleSidebar()\r\n      dispatch(\r\n        addUser({\r\n          fullName: values['full-name'],\r\n          company: values.company,\r\n          role,\r\n          username: values.username,\r\n          country: values.country,\r\n          contact: values.contact,\r\n          email: values.email,\r\n          currentPlan: plan,\r\n          status: 'active',\r\n          avatar: ''\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Sidebar\r\n      size='lg'\r\n      open={open}\r\n      title='New User'\r\n      headerClassName='mb-1'\r\n      contentClassName='pt-0'\r\n      toggleSidebar={toggleSidebar}\r\n    >\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <FormGroup>\r\n          <Label for='full-name'>\r\n            Full Name <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            name='full-name'\r\n            id='full-name'\r\n            placeholder='John Doe'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['full-name'] })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='username'>\r\n            Username <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            name='username'\r\n            id='username'\r\n            placeholder='johnDoe99'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['username'] })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='email'>\r\n            Email <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            type='email'\r\n            name='email'\r\n            id='email'\r\n            placeholder='john.doe@example.com'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['email'] })}\r\n          />\r\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='company'>\r\n            Company <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            name='company'\r\n            id='company'\r\n            placeholder='Company Pvt Ltd'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['company'] })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='country'>\r\n            Country <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            name='country'\r\n            id='country'\r\n            placeholder='Australia'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['country'] })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='contact'>\r\n            Contact <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            name='contact'\r\n            id='contact'\r\n            placeholder='(397) 294-5153'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['contact'] })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='user-role'>User Role</Label>\r\n          <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\r\n            <option value='subscriber'>Subscriber</option>\r\n            <option value='editor'>Editor</option>\r\n            <option value='maintainer'>Maintainer</option>\r\n            <option value='author'>Author</option>\r\n            <option value='admin'>Admin</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup className='mb-2' value={plan} onChange={e => setPlan(e.target.value)}>\r\n          <Label for='select-plan'>Select Plan</Label>\r\n          <Input type='select' id='select-plan' name='select-plan'>\r\n            <option value='basic'>Basic</option>\r\n            <option value='enterprise'>Enterprise</option>\r\n            <option value='company'>Company</option>\r\n            <option value='team'>Team</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <Button type='submit' className='mr-1' color='primary'>\r\n          Submit\r\n        </Button>\r\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  )\r\n}\r\n\r\nexport default SidebarNewUsers\r\n"]},"metadata":{},"sourceType":"module"}