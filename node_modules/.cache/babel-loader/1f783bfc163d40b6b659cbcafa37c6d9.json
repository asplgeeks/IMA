{"ast":null,"code":"import _objectSpread from \"D:/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\IMA\\\\src\\\\views\\\\apps\\\\email\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom'; // ** Email App Component Imports\n\nimport Mails from './Mails';\nimport Sidebar from './Sidebar';\nimport Navbar from './Navbar'; // ** Third Party Components\n\nimport classnames from 'classnames'; // ** Store & Actions\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTopics, selectMail, updateMails, paginateMail, selectAllMail, resetSelectedMail, selectCurrentMail, updateMailLabel, gettreads } from './store/actions'; // ** Styles\n\nimport '@styles/react/apps/app-email.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar EmailApp = function EmailApp() {\n  _s();\n\n  // ** States\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sidebarOpen = _useState4[0],\n      setSidebarOpen = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      composeOpen = _useState6[0],\n      setComposeOpen = _useState6[1]; // ** Toggle Compose Function\n\n\n  var toggleCompose = function toggleCompose() {\n    return setComposeOpen(!composeOpen);\n  }; // ** Store Variables\n\n\n  var dispatch = useDispatch();\n  var store = useSelector(function (state) {\n    return state.email;\n  }); // ** Vars\n\n  var params = useParams(); // ** UseEffect: GET initial data on Mount\n\n  useEffect(function () {\n    dispatch(getTopics({\n      q: query || '',\n      folder: params.folder || 'inbox',\n      label: params.label || ''\n    }));\n  }, [query, params.folder, params.label]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n      className: classnames(\"wrapper vertical-layout \".concat(navbarWrapperClasses[navbarType] || 'navbar-floating', \" \").concat(footerClasses[footerType] || 'footer-static'), {\n        // Modern Menu\n        'vertical-menu-modern': windowWidth >= 1200,\n        'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n        'menu-expanded': !menuCollapsed && windowWidth > 1200,\n        // Overlay Menu\n        'vertical-overlay-menu': windowWidth < 1200,\n        'menu-hide': !menuVisibility && windowWidth < 1200,\n        'menu-open': menuVisibility && windowWidth < 1200\n      })\n    }, isHidden ? {\n      'data-col': '1-column'\n    } : {}), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Sidebar, {\n        store: store,\n        dispatch: dispatch,\n        getTopics: getTopics,\n        gettreads: gettreads,\n        sidebarOpen: sidebarOpen,\n        toggleCompose: toggleCompose,\n        setSidebarOpen: setSidebarOpen,\n        resetSelectedMail: resetSelectedMail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames('body-content-overlay', {\n              show: sidebarOpen\n            }),\n            onClick: function onClick() {\n              return setSidebarOpen(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Mails, {\n            store: store,\n            query: query,\n            setQuery: setQuery,\n            dispatch: dispatch,\n            getTopics: getTopics,\n            selectMail: selectMail,\n            updateMails: updateMails,\n            composeOpen: composeOpen,\n            paginateMail: paginateMail,\n            selectAllMail: selectAllMail,\n            toggleCompose: toggleCompose,\n            setSidebarOpen: setSidebarOpen,\n            updateMailLabel: updateMailLabel,\n            selectCurrentMail: selectCurrentMail,\n            resetSelectedMail: resetSelectedMail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EmailApp, \"s6DeUgEs3+35Rm6JBTwA5CmK9tw=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n\n_c = EmailApp;\nexport default EmailApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailApp\");","map":{"version":3,"sources":["D:/IMA/src/views/apps/email/index.js"],"names":["Fragment","useEffect","useState","useParams","Mails","Sidebar","Navbar","classnames","useDispatch","useSelector","getTopics","selectMail","updateMails","paginateMail","selectAllMail","resetSelectedMail","selectCurrentMail","updateMailLabel","gettreads","EmailApp","query","setQuery","sidebarOpen","setSidebarOpen","composeOpen","setComposeOpen","toggleCompose","dispatch","store","state","email","params","q","folder","label","navbarWrapperClasses","navbarType","footerClasses","footerType","windowWidth","menuCollapsed","menuVisibility","isHidden","show"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// ** Email App Component Imports\r\nimport Mails from './Mails'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getTopics,\r\n  selectMail,\r\n  updateMails,\r\n  paginateMail,\r\n  selectAllMail,\r\n  resetSelectedMail,\r\n  selectCurrentMail,\r\n  updateMailLabel,\r\n  gettreads\r\n} from './store/actions'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-email.scss'\r\n\r\nconst EmailApp = () => {\r\n  // ** States\r\n  const [query, setQuery] = useState('')\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [composeOpen, setComposeOpen] = useState(false)\r\n\r\n  // ** Toggle Compose Function\r\n  const toggleCompose = () => setComposeOpen(!composeOpen)\r\n\r\n  // ** Store Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.email)\r\n\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** UseEffect: GET initial data on Mount\r\n  useEffect(() => {\r\n    dispatch(getTopics({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\r\n  }, [query, params.folder, params.label])\r\n\r\n  return (\r\n    <Fragment>\r\n          <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      <Navbar />\r\n      <Sidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        getTopics={getTopics}\r\n        gettreads={gettreads}\r\n        sidebarOpen={sidebarOpen}\r\n        toggleCompose={toggleCompose}\r\n        setSidebarOpen={setSidebarOpen}\r\n        resetSelectedMail={resetSelectedMail}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-body'>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: sidebarOpen\r\n            })}\r\n            onClick={() => setSidebarOpen(false)}\r\n          ></div>\r\n          <Mails\r\n            store={store}\r\n            query={query}\r\n            setQuery={setQuery}\r\n            dispatch={dispatch}\r\n            getTopics={getTopics}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            composeOpen={composeOpen}\r\n            paginateMail={paginateMail}\r\n            selectAllMail={selectAllMail}\r\n            toggleCompose={toggleCompose}\r\n            setSidebarOpen={setSidebarOpen}\r\n            updateMailLabel={updateMailLabel}\r\n            selectCurrentMail={selectCurrentMail}\r\n            resetSelectedMail={resetSelectedMail}\r\n          />\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmailApp\r\n"]},"metadata":{},"sourceType":"module"}