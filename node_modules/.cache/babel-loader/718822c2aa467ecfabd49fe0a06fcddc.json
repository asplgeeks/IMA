{"ast":null,"code":"import _slicedToArray from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shree\\\\Downloads\\\\newproject\\\\full-version\\\\src\\\\views\\\\apps\\\\user\\\\list\\\\Table.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'; // ** Invoice List Sidebar\n\nimport Sidebar from './Sidebar'; // ** Columns\n\nimport { columns } from './columns'; // ** Store & Actions\n\nimport { getAllData, getData } from '../store/action';\nimport { useDispatch, useSelector } from 'react-redux'; // ** Third Party Components\n\nimport Select from 'react-select';\nimport ReactPaginate from 'react-paginate';\nimport { ChevronDown } from 'react-feather';\nimport DataTable from 'react-data-table-component';\nimport { selectThemeColors } from '@utils';\nimport { Card, CardHeader, CardTitle, CardBody, Input, Row, Col, Label, CustomInput, Button } from 'reactstrap'; // ** Styles\n\nimport '@styles/react/libs/react-select/_react-select.scss';\nimport '@styles/react/libs/tables/react-dataTable-component.scss'; // ** Table Header\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CustomHeader = function CustomHeader(_ref) {\n  var toggleSidebar = _ref.toggleSidebar,\n      handlePerPage = _ref.handlePerPage,\n      rowsPerPage = _ref.rowsPerPage,\n      handleFilter = _ref.handleFilter,\n      searchTerm = _ref.searchTerm;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xl: \"6\",\n        className: \"d-flex align-items-center p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center w-100\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"rows-per-page\",\n            children: \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            className: \"form-control mx-50\",\n            type: \"select\",\n            id: \"rows-per-page\",\n            value: rowsPerPage,\n            onChange: handlePerPage,\n            style: {\n              width: '5rem',\n              padding: '0 0.8rem',\n              backgroundPosition: 'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"25\",\n              children: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"rows-per-page\",\n            children: \"Entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xl: \"6\",\n        className: \"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center mb-sm-0 mb-1 mr-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"mb-0\",\n            for: \"search-invoice\",\n            children: \"Search:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"search-invoice\",\n            className: \"ml-50 w-100\",\n            type: \"text\",\n            value: searchTerm,\n            onChange: function onChange(e) {\n              return handleFilter(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          color: \"primary\",\n          onClick: toggleSidebar,\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = CustomHeader;\n\nvar UsersList = function UsersList() {\n  _s();\n\n  // ** Store Vars\n  var dispatch = useDispatch();\n  var store = useSelector(function (state) {\n    return state.users;\n  }); // ** States\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rowsPerPage = _useState6[0],\n      setRowsPerPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sidebarOpen = _useState8[0],\n      setSidebarOpen = _useState8[1];\n\n  var _useState9 = useState({\n    value: '',\n    label: 'Select Role'\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentRole = _useState10[0],\n      setCurrentRole = _useState10[1];\n\n  var _useState11 = useState({\n    value: '',\n    label: 'Select Plan'\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentPlan = _useState12[0],\n      setCurrentPlan = _useState12[1];\n\n  var _useState13 = useState({\n    value: '',\n    label: 'Select Status',\n    number: 0\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      currentStatus = _useState14[0],\n      setCurrentStatus = _useState14[1]; // ** Function to toggle sidebar\n\n\n  var toggleSidebar = function toggleSidebar() {\n    return setSidebarOpen(!sidebarOpen);\n  }; // ** Get data on mount\n\n\n  useEffect(function () {\n    dispatch(getAllData());\n    dispatch(getData({\n      page: currentPage,\n      perPage: rowsPerPage,\n      role: currentRole.value,\n      currentPlan: currentPlan.value,\n      status: currentStatus.value,\n      q: searchTerm\n    }));\n  }, [dispatch, store.data.length]); // ** User filter options\n\n  var roleOptions = [{\n    value: '',\n    label: 'Select Role'\n  }, {\n    value: 'admin',\n    label: 'Admin'\n  }, {\n    value: 'author',\n    label: 'Author'\n  }, {\n    value: 'editor',\n    label: 'Editor'\n  }, {\n    value: 'maintainer',\n    label: 'Maintainer'\n  }, {\n    value: 'subscriber',\n    label: 'Subscriber'\n  }];\n  var planOptions = [{\n    value: '',\n    label: 'Select Plan'\n  }, {\n    value: 'basic',\n    label: 'Basic'\n  }, {\n    value: 'company',\n    label: 'Company'\n  }, {\n    value: 'enterprise',\n    label: 'Enterprise'\n  }, {\n    value: 'team',\n    label: 'Team'\n  }];\n  var statusOptions = [{\n    value: '',\n    label: 'Select Status',\n    number: 0\n  }, {\n    value: 'pending',\n    label: 'Pending',\n    number: 1\n  }, {\n    value: 'active',\n    label: 'Active',\n    number: 2\n  }, {\n    value: 'inactive',\n    label: 'Inactive',\n    number: 3\n  }]; // ** Function in get data on page change\n\n  var handlePagination = function handlePagination(page) {\n    dispatch(getData({\n      page: page.selected + 1,\n      perPage: rowsPerPage,\n      role: currentRole.value,\n      currentPlan: currentPlan.value,\n      status: currentStatus.value,\n      q: searchTerm\n    }));\n    setCurrentPage(page.selected + 1);\n  }; // ** Function in get data on rows per page\n\n\n  var handlePerPage = function handlePerPage(e) {\n    var value = parseInt(e.currentTarget.value);\n    dispatch(getData({\n      page: currentPage,\n      perPage: value,\n      role: currentRole.value,\n      currentPlan: currentPlan.value,\n      status: currentStatus.value,\n      q: searchTerm\n    }));\n    setRowsPerPage(value);\n  }; // ** Function in get data on search query change\n\n\n  var handleFilter = function handleFilter(val) {\n    setSearchTerm(val);\n    dispatch(getData({\n      page: currentPage,\n      perPage: rowsPerPage,\n      role: currentRole.value,\n      currentPlan: currentPlan.value,\n      status: currentStatus.value,\n      q: val\n    }));\n  }; // ** Custom Pagination\n\n\n  var CustomPagination = function CustomPagination() {\n    var count = Number(Math.ceil(store.total / rowsPerPage));\n    return /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: '',\n      nextLabel: '',\n      pageCount: count || 1,\n      activeClassName: \"active\",\n      forcePage: currentPage !== 0 ? currentPage - 1 : 0,\n      onPageChange: function onPageChange(page) {\n        return handlePagination(page);\n      },\n      pageClassName: 'page-item',\n      nextLinkClassName: 'page-link',\n      nextClassName: 'page-item next',\n      previousClassName: 'page-item prev',\n      previousLinkClassName: 'page-link',\n      pageLinkClassName: 'page-link',\n      containerClassName: 'pagination react-paginate justify-content-end my-2 pr-1'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, _this);\n  }; // ** Table data to render\n\n\n  var dataToRender = function dataToRender() {\n    var filters = {\n      role: currentRole.value,\n      currentPlan: currentPlan.value,\n      status: currentStatus.value,\n      q: searchTerm\n    };\n    var isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0;\n    });\n\n    if (store.data.length > 0) {\n      return store.data;\n    } else if (store.data.length === 0 && isFiltered) {\n      return [];\n    } else {\n      return store.allData.slice(0, rowsPerPage);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h4\",\n          children: \"Search Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              isClearable: false,\n              theme: selectThemeColors,\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              options: roleOptions,\n              value: currentRole,\n              onChange: function onChange(data) {\n                setCurrentRole(data);\n                dispatch(getData({\n                  page: currentPage,\n                  perPage: rowsPerPage,\n                  role: data.value,\n                  currentPlan: currentPlan.value,\n                  status: currentStatus.value,\n                  q: searchTerm\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"my-md-0 my-1\",\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              theme: selectThemeColors,\n              isClearable: false,\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              options: planOptions,\n              value: currentPlan,\n              onChange: function onChange(data) {\n                setCurrentPlan(data);\n                dispatch(getData({\n                  page: currentPage,\n                  perPage: rowsPerPage,\n                  role: currentRole.value,\n                  currentPlan: data.value,\n                  status: currentStatus.value,\n                  q: searchTerm\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              theme: selectThemeColors,\n              isClearable: false,\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              options: statusOptions,\n              value: currentStatus,\n              onChange: function onChange(data) {\n                setCurrentStatus(data);\n                dispatch(getData({\n                  page: currentPage,\n                  perPage: rowsPerPage,\n                  role: currentRole.value,\n                  currentPlan: currentPlan.value,\n                  status: data.value,\n                  q: searchTerm\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        noHeader: true,\n        pagination: true,\n        subHeader: true,\n        responsive: true,\n        paginationServer: true,\n        columns: columns,\n        sortIcon: /*#__PURE__*/_jsxDEV(ChevronDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, _this),\n        className: \"react-dataTable\",\n        paginationComponent: CustomPagination,\n        data: dataToRender(),\n        subHeaderComponent: /*#__PURE__*/_jsxDEV(CustomHeader, {\n          toggleSidebar: toggleSidebar,\n          handlePerPage: handlePerPage,\n          rowsPerPage: rowsPerPage,\n          searchTerm: searchTerm,\n          handleFilter: handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      open: sidebarOpen,\n      toggleSidebar: toggleSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UsersList, \"09ryGUTrmKURMYnbYrl4IU342pk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = UsersList;\nexport default UsersList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomHeader\");\n$RefreshReg$(_c2, \"UsersList\");","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/views/apps/user/list/Table.js"],"names":["Fragment","useState","useEffect","Sidebar","columns","getAllData","getData","useDispatch","useSelector","Select","ReactPaginate","ChevronDown","DataTable","selectThemeColors","Card","CardHeader","CardTitle","CardBody","Input","Row","Col","Label","CustomInput","Button","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","width","padding","backgroundPosition","e","target","value","UsersList","dispatch","store","state","users","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","sidebarOpen","setSidebarOpen","label","currentRole","setCurrentRole","currentPlan","setCurrentPlan","number","currentStatus","setCurrentStatus","page","perPage","role","status","q","data","length","roleOptions","planOptions","statusOptions","handlePagination","selected","parseInt","currentTarget","val","CustomPagination","count","Number","Math","ceil","total","dataToRender","filters","isFiltered","Object","keys","some","k","allData","slice"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Invoice List Sidebar\nimport Sidebar from './Sidebar'\n\n// ** Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { getAllData, getData } from '../store/action'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { selectThemeColors } from '@utils'\nimport { Card, CardHeader, CardTitle, CardBody, Input, Row, Col, Label, CustomInput, Button } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Table Header\nconst CustomHeader = ({ toggleSidebar, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\n  return (\n    <div className='invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75'>\n      <Row>\n        <Col xl='6' className='d-flex align-items-center p-0'>\n          <div className='d-flex align-items-center w-100'>\n            <Label for='rows-per-page'>Show</Label>\n            <CustomInput\n              className='form-control mx-50'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{\n                width: '5rem',\n                padding: '0 0.8rem',\n                backgroundPosition: 'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\n              }}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </CustomInput>\n            <Label for='rows-per-page'>Entries</Label>\n          </div>\n        </Col>\n        <Col\n          xl='6'\n          className='d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1'\n        >\n          <div className='d-flex align-items-center mb-sm-0 mb-1 mr-1'>\n            <Label className='mb-0' for='search-invoice'>\n              Search:\n            </Label>\n            <Input\n              id='search-invoice'\n              className='ml-50 w-100'\n              type='text'\n              value={searchTerm}\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n          <Button.Ripple color='primary' onClick={toggleSidebar}>\n            Add New User\n          </Button.Ripple>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.users)\n\n  // ** States\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\n  const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n\n  // ** Function to toggle sidebar\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        currentPlan: currentPlan.value,\n        status: currentStatus.value,\n        q: searchTerm\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  // ** User filter options\n  const roleOptions = [\n    { value: '', label: 'Select Role' },\n    { value: 'admin', label: 'Admin' },\n    { value: 'author', label: 'Author' },\n    { value: 'editor', label: 'Editor' },\n    { value: 'maintainer', label: 'Maintainer' },\n    { value: 'subscriber', label: 'Subscriber' }\n  ]\n\n  const planOptions = [\n    { value: '', label: 'Select Plan' },\n    { value: 'basic', label: 'Basic' },\n    { value: 'company', label: 'Company' },\n    { value: 'enterprise', label: 'Enterprise' },\n    { value: 'team', label: 'Team' }\n  ]\n\n  const statusOptions = [\n    { value: '', label: 'Select Status', number: 0 },\n    { value: 'pending', label: 'Pending', number: 1 },\n    { value: 'active', label: 'Active', number: 2 },\n    { value: 'inactive', label: 'Inactive', number: 3 }\n  ]\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        currentPlan: currentPlan.value,\n        status: currentStatus.value,\n        q: searchTerm\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: value,\n        role: currentRole.value,\n        currentPlan: currentPlan.value,\n        status: currentStatus.value,\n        q: searchTerm\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        currentPlan: currentPlan.value,\n        status: currentStatus.value,\n        q: val\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      role: currentRole.value,\n      currentPlan: currentPlan.value,\n      status: currentStatus.value,\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Search Filter</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md='4'>\n              <Select\n                isClearable={false}\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                options={roleOptions}\n                value={currentRole}\n                onChange={data => {\n                  setCurrentRole(data)\n                  dispatch(\n                    getData({\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      role: data.value,\n                      currentPlan: currentPlan.value,\n                      status: currentStatus.value,\n                      q: searchTerm\n                    })\n                  )\n                }}\n              />\n            </Col>\n            <Col className='my-md-0 my-1' md='4'>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={planOptions}\n                value={currentPlan}\n                onChange={data => {\n                  setCurrentPlan(data)\n                  dispatch(\n                    getData({\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      role: currentRole.value,\n                      currentPlan: data.value,\n                      status: currentStatus.value,\n                      q: searchTerm\n                    })\n                  )\n                }}\n              />\n            </Col>\n            <Col md='4'>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={statusOptions}\n                value={currentStatus}\n                onChange={data => {\n                  setCurrentStatus(data)\n                  dispatch(\n                    getData({\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      role: currentRole.value,\n                      currentPlan: currentPlan.value,\n                      status: data.value,\n                      q: searchTerm\n                    })\n                  )\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n      <Card>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={columns}\n          sortIcon={<ChevronDown />}\n          className='react-dataTable'\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              toggleSidebar={toggleSidebar}\n              handlePerPage={handlePerPage}\n              rowsPerPage={rowsPerPage}\n              searchTerm={searchTerm}\n              handleFilter={handleFilter}\n            />\n          }\n        />\n      </Card>\n\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\n    </Fragment>\n  )\n}\n\nexport default UsersList\n"]},"metadata":{},"sourceType":"module"}