{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\star\\\\erpfrontend\\\\src\\\\views\\\\apps\\\\calendar\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { Row, Col } from 'reactstrap'; // ** Calendar App Component Imports\n\nimport Calendar from './Calendar';\nimport SidebarLeft from './SidebarLeft';\nimport AddEventSidebar from './AddEventSidebar'; // ** Custom Hooks\n\nimport { useRTL } from '@hooks/useRTL'; // ** Store & Actions\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store/actions/index'; // ** Styles\n\nimport '@styles/react/apps/app-calendar.scss'; // ** CalendarColors\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar calendarsColor = {\n  Business: 'primary',\n  Holiday: 'success',\n  Personal: 'danger',\n  Family: 'warning',\n  ETC: 'info'\n};\n\nvar CalendarComponent = function CalendarComponent() {\n  _s();\n\n  // ** Variables\n  var dispatch = useDispatch();\n  var store = useSelector(function (state) {\n    return state.calendar;\n  }); // ** states\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      addSidebarOpen = _useState2[0],\n      setAddSidebarOpen = _useState2[1],\n      _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      leftSidebarOpen = _useState4[0],\n      setLeftSidebarOpen = _useState4[1],\n      _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      calendarApi = _useState6[0],\n      setCalendarApi = _useState6[1]; // ** Hooks\n\n\n  var _useRTL = useRTL(),\n      _useRTL2 = _slicedToArray(_useRTL, 2),\n      isRtl = _useRTL2[0],\n      setIsRtl = _useRTL2[1]; // ** AddEventSidebar Toggle Function\n\n\n  var handleAddEventSidebar = function handleAddEventSidebar() {\n    return setAddSidebarOpen(!addSidebarOpen);\n  }; // ** LeftSidebar Toggle Function\n\n\n  var toggleSidebar = function toggleSidebar(val) {\n    return setLeftSidebarOpen(val);\n  }; // ** Blank Event Object\n\n\n  var blankEvent = {\n    title: '',\n    start: '',\n    end: '',\n    allDay: false,\n    url: '',\n    extendedProps: {\n      calendar: '',\n      guests: [],\n      location: '',\n      description: ''\n    }\n  }; // ** refetchEvents\n\n  var refetchEvents = function refetchEvents() {\n    if (calendarApi !== null) {\n      calendarApi.refetchEvents();\n    }\n  }; // ** Fetch Events On Mount\n\n\n  useEffect(function () {\n    dispatch(fetchEvents(store.selectedCalendars));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-calendar overflow-hidden border\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          id: \"app-calendar-sidebar\",\n          className: classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\n            show: leftSidebarOpen\n          }),\n          children: /*#__PURE__*/_jsxDEV(SidebarLeft, {\n            store: store,\n            dispatch: dispatch,\n            updateFilter: updateFilter,\n            toggleSidebar: toggleSidebar,\n            updateAllFilters: updateAllFilters,\n            handleAddEventSidebar: handleAddEventSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"position-relative\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            isRtl: isRtl,\n            store: store,\n            dispatch: dispatch,\n            blankEvent: blankEvent,\n            calendarApi: calendarApi,\n            selectEvent: selectEvent,\n            updateEvent: updateEvent,\n            toggleSidebar: toggleSidebar,\n            calendarsColor: calendarsColor,\n            setCalendarApi: setCalendarApi,\n            handleAddEventSidebar: handleAddEventSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('body-content-overlay', {\n            show: leftSidebarOpen === true\n          }),\n          onClick: function onClick() {\n            return toggleSidebar(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AddEventSidebar, {\n      store: store,\n      dispatch: dispatch,\n      addEvent: addEvent,\n      open: addSidebarOpen,\n      selectEvent: selectEvent,\n      updateEvent: updateEvent,\n      removeEvent: removeEvent,\n      calendarApi: calendarApi,\n      refetchEvents: refetchEvents,\n      calendarsColor: calendarsColor,\n      handleAddEventSidebar: handleAddEventSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CalendarComponent, \"YHOzWaWsgajiUP9QAOQ+10v+is4=\", false, function () {\n  return [useDispatch, useSelector, useRTL];\n});\n\n_c = CalendarComponent;\nexport default CalendarComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/src/views/apps/calendar/index.js"],"names":["Fragment","useState","useEffect","classnames","Row","Col","Calendar","SidebarLeft","AddEventSidebar","useRTL","useSelector","useDispatch","fetchEvents","selectEvent","updateEvent","updateFilter","updateAllFilters","addEvent","removeEvent","calendarsColor","Business","Holiday","Personal","Family","ETC","CalendarComponent","dispatch","store","state","calendar","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","calendarApi","setCalendarApi","isRtl","setIsRtl","handleAddEventSidebar","toggleSidebar","val","blankEvent","title","start","end","allDay","url","extendedProps","guests","location","description","refetchEvents","selectedCalendars","show"],"mappings":";;;;;;AAAA;AACA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;AACA,SAASC,MAAT,QAAuB,eAAvB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,gBALF,EAMEC,QANF,EAOEC,WAPF,QAQO,uBARP,C,CAUA;;AACA,OAAO,sCAAP,C,CAEA;;;AACA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE,SADW;AAErBC,EAAAA,OAAO,EAAE,SAFY;AAGrBC,EAAAA,QAAQ,EAAE,QAHW;AAIrBC,EAAAA,MAAM,EAAE,SAJa;AAKrBC,EAAAA,GAAG,EAAE;AALgB,CAAvB;;AAQA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAC9B;AACA,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,MAAMgB,KAAK,GAAGjB,WAAW,CAAC,UAAAkB,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAV;AAAA,GAAN,CAAzB,CAH8B,CAK9B;;AACA,kBAA4C5B,QAAQ,CAAC,KAAD,CAApD;AAAA;AAAA,MAAO6B,cAAP;AAAA,MAAuBC,iBAAvB;AAAA,mBAC0C9B,QAAQ,CAAC,KAAD,CADlD;AAAA;AAAA,MACG+B,eADH;AAAA,MACoBC,kBADpB;AAAA,mBAEkChC,QAAQ,CAAC,IAAD,CAF1C;AAAA;AAAA,MAEGiC,WAFH;AAAA,MAEgBC,cAFhB,iBAN8B,CAU9B;;;AACA,gBAA0B1B,MAAM,EAAhC;AAAA;AAAA,MAAO2B,KAAP;AAAA,MAAcC,QAAd,eAX8B,CAa9B;;;AACA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,WAAMP,iBAAiB,CAAC,CAACD,cAAF,CAAvB;AAAA,GAA9B,CAd8B,CAgB9B;;;AACA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG;AAAA,WAAIP,kBAAkB,CAACO,GAAD,CAAtB;AAAA,GAAzB,CAjB8B,CAmB9B;;;AACA,MAAMC,UAAU,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,KAAK,EAAE,EAFU;AAGjBC,IAAAA,GAAG,EAAE,EAHY;AAIjBC,IAAAA,MAAM,EAAE,KAJS;AAKjBC,IAAAA,GAAG,EAAE,EALY;AAMjBC,IAAAA,aAAa,EAAE;AACblB,MAAAA,QAAQ,EAAE,EADG;AAEbmB,MAAAA,MAAM,EAAE,EAFK;AAGbC,MAAAA,QAAQ,EAAE,EAHG;AAIbC,MAAAA,WAAW,EAAE;AAJA;AANE,GAAnB,CApB8B,CAkC9B;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIjB,WAAW,KAAK,IAApB,EAA0B;AACxBA,MAAAA,WAAW,CAACiB,aAAZ;AACD;AACF,GAJD,CAnC8B,CAyC9B;;;AACAjD,EAAAA,SAAS,CAAC,YAAM;AACdwB,IAAAA,QAAQ,CAACd,WAAW,CAACe,KAAK,CAACyB,iBAAP,CAAZ,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,MAAd;AAAA,gCACE,QAAC,GAAD;AACE,UAAA,EAAE,EAAC,sBADL;AAEE,UAAA,SAAS,EAAEjD,UAAU,CAAC,yEAAD,EAA4E;AAC/FkD,YAAAA,IAAI,EAAErB;AADyF,WAA5E,CAFvB;AAAA,iCAME,QAAC,WAAD;AACE,YAAA,KAAK,EAAEL,KADT;AAEE,YAAA,QAAQ,EAAED,QAFZ;AAGE,YAAA,YAAY,EAAEX,YAHhB;AAIE,YAAA,aAAa,EAAEwB,aAJjB;AAKE,YAAA,gBAAgB,EAAEvB,gBALpB;AAME,YAAA,qBAAqB,EAAEsB;AANzB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,iBADF,eAgBE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,KAAK,EAAEF,KADT;AAEE,YAAA,KAAK,EAAET,KAFT;AAGE,YAAA,QAAQ,EAAED,QAHZ;AAIE,YAAA,UAAU,EAAEe,UAJd;AAKE,YAAA,WAAW,EAAEP,WALf;AAME,YAAA,WAAW,EAAErB,WANf;AAOE,YAAA,WAAW,EAAEC,WAPf;AAQE,YAAA,aAAa,EAAEyB,aARjB;AASE,YAAA,cAAc,EAAEpB,cATlB;AAUE,YAAA,cAAc,EAAEgB,cAVlB;AAWE,YAAA,qBAAqB,EAAEG;AAXzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAhBF,eA+BE;AACE,UAAA,SAAS,EAAEnC,UAAU,CAAC,sBAAD,EAAyB;AAC5CkD,YAAAA,IAAI,EAAErB,eAAe,KAAK;AADkB,WAAzB,CADvB;AAIE,UAAA,OAAO,EAAE;AAAA,mBAAMO,aAAa,CAAC,KAAD,CAAnB;AAAA;AAJX;AAAA;AAAA;AAAA;AAAA,iBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAyCE,QAAC,eAAD;AACE,MAAA,KAAK,EAAEZ,KADT;AAEE,MAAA,QAAQ,EAAED,QAFZ;AAGE,MAAA,QAAQ,EAAET,QAHZ;AAIE,MAAA,IAAI,EAAEa,cAJR;AAKE,MAAA,WAAW,EAAEjB,WALf;AAME,MAAA,WAAW,EAAEC,WANf;AAOE,MAAA,WAAW,EAAEI,WAPf;AAQE,MAAA,WAAW,EAAEgB,WARf;AASE,MAAA,aAAa,EAAEiB,aATjB;AAUE,MAAA,cAAc,EAAEhC,cAVlB;AAWE,MAAA,qBAAqB,EAAEmB;AAXzB;AAAA;AAAA;AAAA;AAAA,aAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAyDD,CAvGD;;GAAMb,iB;UAEad,W,EACHD,W,EAQYD,M;;;KAXtBgB,iB;AAyGN,eAAeA,iBAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Calendar App Component Imports\r\nimport Calendar from './Calendar'\r\nimport SidebarLeft from './SidebarLeft'\r\nimport AddEventSidebar from './AddEventSidebar'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  fetchEvents,\r\n  selectEvent,\r\n  updateEvent,\r\n  updateFilter,\r\n  updateAllFilters,\r\n  addEvent,\r\n  removeEvent\r\n} from './store/actions/index'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-calendar.scss'\r\n\r\n// ** CalendarColors\r\nconst calendarsColor = {\r\n  Business: 'primary',\r\n  Holiday: 'success',\r\n  Personal: 'danger',\r\n  Family: 'warning',\r\n  ETC: 'info'\r\n}\r\n\r\nconst CalendarComponent = () => {\r\n  // ** Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.calendar)\r\n\r\n  // ** states\r\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false),\r\n    [leftSidebarOpen, setLeftSidebarOpen] = useState(false),\r\n    [calendarApi, setCalendarApi] = useState(null)\r\n\r\n  // ** Hooks\r\n  const [isRtl, setIsRtl] = useRTL()\r\n\r\n  // ** AddEventSidebar Toggle Function\r\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\r\n\r\n  // ** LeftSidebar Toggle Function\r\n  const toggleSidebar = val => setLeftSidebarOpen(val)\r\n\r\n  // ** Blank Event Object\r\n  const blankEvent = {\r\n    title: '',\r\n    start: '',\r\n    end: '',\r\n    allDay: false,\r\n    url: '',\r\n    extendedProps: {\r\n      calendar: '',\r\n      guests: [],\r\n      location: '',\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  // ** refetchEvents\r\n  const refetchEvents = () => {\r\n    if (calendarApi !== null) {\r\n      calendarApi.refetchEvents()\r\n    }\r\n  }\r\n\r\n  // ** Fetch Events On Mount\r\n  useEffect(() => {\r\n    dispatch(fetchEvents(store.selectedCalendars))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='app-calendar overflow-hidden border'>\r\n        <Row noGutters>\r\n          <Col\r\n            id='app-calendar-sidebar'\r\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\r\n              show: leftSidebarOpen\r\n            })}\r\n          >\r\n            <SidebarLeft\r\n              store={store}\r\n              dispatch={dispatch}\r\n              updateFilter={updateFilter}\r\n              toggleSidebar={toggleSidebar}\r\n              updateAllFilters={updateAllFilters}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <Col className='position-relative'>\r\n            <Calendar\r\n              isRtl={isRtl}\r\n              store={store}\r\n              dispatch={dispatch}\r\n              blankEvent={blankEvent}\r\n              calendarApi={calendarApi}\r\n              selectEvent={selectEvent}\r\n              updateEvent={updateEvent}\r\n              toggleSidebar={toggleSidebar}\r\n              calendarsColor={calendarsColor}\r\n              setCalendarApi={setCalendarApi}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: leftSidebarOpen === true\r\n            })}\r\n            onClick={() => toggleSidebar(false)}\r\n          ></div>\r\n        </Row>\r\n      </div>\r\n      <AddEventSidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        addEvent={addEvent}\r\n        open={addSidebarOpen}\r\n        selectEvent={selectEvent}\r\n        updateEvent={updateEvent}\r\n        removeEvent={removeEvent}\r\n        calendarApi={calendarApi}\r\n        refetchEvents={refetchEvents}\r\n        calendarsColor={calendarsColor}\r\n        handleAddEventSidebar={handleAddEventSidebar}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CalendarComponent\r\n"]},"metadata":{},"sourceType":"module"}