{"ast":null,"code":"import _defineProperty from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics'; // Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\n\nvar hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\n\nfunction getDisplayName(Component) {\n  return Component.displayName || Component.name || 'Component';\n} // TODO: We should provide initial value here\n\n\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer,\n    IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n  var _ref = options || {},\n      _ref$intlPropName = _ref.intlPropName,\n      intlPropName = _ref$intlPropName === void 0 ? 'intl' : _ref$intlPropName,\n      _ref$forwardRef = _ref.forwardRef,\n      forwardRef = _ref$forwardRef === void 0 ? false : _ref$forwardRef,\n      _ref$enforceContext = _ref.enforceContext,\n      enforceContext = _ref$enforceContext === void 0 ? true : _ref$enforceContext;\n\n  var WithIntl = function WithIntl(props) {\n    return React.createElement(IntlConsumer, null, function (intl) {\n      if (enforceContext) {\n        invariantIntlContext(intl);\n      }\n\n      return React.createElement(WrappedComponent, Object.assign({}, props, _defineProperty({}, intlPropName, intl), {\n        ref: forwardRef ? props.forwardedRef : null\n      }));\n    });\n  };\n\n  WithIntl.displayName = \"injectIntl(\".concat(getDisplayName(WrappedComponent), \")\");\n  WithIntl.WrappedComponent = WrappedComponent;\n\n  if (forwardRef) {\n    return hoistNonReactStatics(React.forwardRef(function (props, ref) {\n      return React.createElement(WithIntl, Object.assign({}, props, {\n        forwardedRef: ref\n      }));\n    }), WrappedComponent);\n  }\n\n  return hoistNonReactStatics(WithIntl, WrappedComponent);\n}","map":{"version":3,"sources":["D:/nodejs/IMA/node_modules/react-intl/lib/components/injectIntl.js"],"names":["React","hoistNonReactStatics_","hoistNonReactStatics","default","invariantIntlContext","getDisplayName","Component","displayName","name","IntlContext","createContext","IntlConsumer","Consumer","IntlProvider","Provider","Context","injectIntl","WrappedComponent","options","intlPropName","forwardRef","enforceContext","WithIntl","props","createElement","intl","Object","assign","ref","forwardedRef"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,qBAAZ,MAAuC,yBAAvC,C,CACA;AACA;AACA;AACA;;AACA,IAAMC,oBAAoB,GAAGD,qBAAqB,CAACE,OAAtB,IAAiCF,qBAA9D;AACA,SAASG,oBAAT,QAAqC,UAArC;;AACA,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AAC/B,SAAOA,SAAS,CAACC,WAAV,IAAyBD,SAAS,CAACE,IAAnC,IAA2C,WAAlD;AACH,C,CACD;;;AACA,IAAMC,WAAW,GAAGT,KAAK,CAACU,aAAN,CAAoB,IAApB,CAApB;AACA,IAAkBC,YAAlB,GAA2DF,WAA3D,CAAQG,QAAR;AAAA,IAA0CC,YAA1C,GAA2DJ,WAA3D,CAAgCK,QAAhC;AACA,OAAO,IAAMA,QAAQ,GAAGD,YAAjB;AACP,OAAO,IAAME,OAAO,GAAGN,WAAhB;AACP,eAAe,SAASO,UAAT,CAAoBC,gBAApB,EAAsCC,OAAtC,EAA+C;AAC1D,aAA6EA,OAAO,IAAI,EAAxF;AAAA,+BAAQC,YAAR;AAAA,MAAQA,YAAR,kCAAuB,MAAvB;AAAA,6BAA+BC,UAA/B;AAAA,MAA+BA,UAA/B,gCAA4C,KAA5C;AAAA,iCAAmDC,cAAnD;AAAA,MAAmDA,cAAnD,oCAAoE,IAApE;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,WAAKvB,KAAK,CAACwB,aAAN,CAAoBb,YAApB,EAAkC,IAAlC,EAAwC,UAACc,IAAD,EAAU;AACzE,UAAIJ,cAAJ,EAAoB;AAChBjB,QAAAA,oBAAoB,CAACqB,IAAD,CAApB;AACH;;AACD,aAAQzB,KAAK,CAACwB,aAAN,CAAoBP,gBAApB,EAAsCS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,sBACzCJ,YADyC,EAC1BM,IAD0B,GAE3C;AAAEG,QAAAA,GAAG,EAAER,UAAU,GAAGG,KAAK,CAACM,YAAT,GAAwB;AAAzC,OAF2C,CAAtC,CAAR;AAGH,KAP0B,CAAL;AAAA,GAAtB;;AAQAP,EAAAA,QAAQ,CAACf,WAAT,wBAAqCF,cAAc,CAACY,gBAAD,CAAnD;AACAK,EAAAA,QAAQ,CAACL,gBAAT,GAA4BA,gBAA5B;;AACA,MAAIG,UAAJ,EAAgB;AACZ,WAAOlB,oBAAoB,CAACF,KAAK,CAACoB,UAAN,CAAiB,UAACG,KAAD,EAAQK,GAAR;AAAA,aAAiB5B,KAAK,CAACwB,aAAN,CAAoBF,QAApB,EAA8BI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEM,QAAAA,YAAY,EAAED;AAAhB,OAAzB,CAA9B,CAAjB;AAAA,KAAjB,CAAD,EAAqHX,gBAArH,CAA3B;AACH;;AACD,SAAOf,oBAAoB,CAACoB,QAAD,EAAWL,gBAAX,CAA3B;AACH","sourcesContent":["import * as React from 'react';\r\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics';\r\n// Since rollup cannot deal with namespace being a function,\r\n// this is to interop with TypeScript since `invariant`\r\n// does not export a default\r\n// https://github.com/rollup/rollup/issues/1267\r\nconst hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\r\nimport { invariantIntlContext } from '../utils';\r\nfunction getDisplayName(Component) {\r\n    return Component.displayName || Component.name || 'Component';\r\n}\r\n// TODO: We should provide initial value here\r\nconst IntlContext = React.createContext(null);\r\nconst { Consumer: IntlConsumer, Provider: IntlProvider } = IntlContext;\r\nexport const Provider = IntlProvider;\r\nexport const Context = IntlContext;\r\nexport default function injectIntl(WrappedComponent, options) {\r\n    const { intlPropName = 'intl', forwardRef = false, enforceContext = true } = options || {};\r\n    const WithIntl = props => (React.createElement(IntlConsumer, null, (intl) => {\r\n        if (enforceContext) {\r\n            invariantIntlContext(intl);\r\n        }\r\n        return (React.createElement(WrappedComponent, Object.assign({}, props, {\r\n            [intlPropName]: intl,\r\n        }, { ref: forwardRef ? props.forwardedRef : null })));\r\n    }));\r\n    WithIntl.displayName = `injectIntl(${getDisplayName(WrappedComponent)})`;\r\n    WithIntl.WrappedComponent = WrappedComponent;\r\n    if (forwardRef) {\r\n        return hoistNonReactStatics(React.forwardRef((props, ref) => (React.createElement(WithIntl, Object.assign({}, props, { forwardedRef: ref })))), WrappedComponent);\r\n    }\r\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}