{"ast":null,"code":"import _objectSpread from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// ** Initial State\nvar initialState={suggestions:[],bookmarks:[],query:''};var navbarReducer=function navbarReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'HANDLE_SEARCH_QUERY':return _objectSpread(_objectSpread({},state),{},{query:action.val});case'GET_BOOKMARKS':return _objectSpread(_objectSpread({},state),{},{suggestions:action.data,bookmarks:action.bookmarks});case'UPDATE_BOOKMARKED':var objectToUpdate;// ** find & update object\nstate.suggestions.find(function(item){if(item.id===action.id){item.isBookmarked=!item.isBookmarked;objectToUpdate=item;}});// ** Get index to add or remove bookmark from array\nvar bookmarkIndex=state.bookmarks.findIndex(function(x){return x.id===action.id;});if(bookmarkIndex===-1){state.bookmarks.push(objectToUpdate);}else{state.bookmarks.splice(bookmarkIndex,1);}return _objectSpread({},state);default:return state;}};export default navbarReducer;","map":{"version":3,"sources":["D:/nodejs/IMA/src/redux/reducers/navbar/index.js"],"names":["initialState","suggestions","bookmarks","query","navbarReducer","state","action","type","val","data","objectToUpdate","find","item","id","isBookmarked","bookmarkIndex","findIndex","x","push","splice"],"mappings":"mIAAA;AACA,GAAMA,CAAAA,YAAY,CAAG,CACnBC,WAAW,CAAE,EADM,CAEnBC,SAAS,CAAE,EAFQ,CAGnBC,KAAK,CAAE,EAHY,CAArB,CAMA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CACtD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,qBAAL,CACE,sCAAYF,KAAZ,MAAmBF,KAAK,CAAEG,MAAM,CAACE,GAAjC,GACF,IAAK,eAAL,CACE,sCAAYH,KAAZ,MAAmBJ,WAAW,CAAEK,MAAM,CAACG,IAAvC,CAA6CP,SAAS,CAAEI,MAAM,CAACJ,SAA/D,GACF,IAAK,mBAAL,CACE,GAAIQ,CAAAA,cAAJ,CAEA;AACAL,KAAK,CAACJ,WAAN,CAAkBU,IAAlB,CAAuB,SAAAC,IAAI,CAAI,CAC7B,GAAIA,IAAI,CAACC,EAAL,GAAYP,MAAM,CAACO,EAAvB,CAA2B,CACzBD,IAAI,CAACE,YAAL,CAAoB,CAACF,IAAI,CAACE,YAA1B,CACAJ,cAAc,CAAGE,IAAjB,CACD,CACF,CALD,EAOA;AACA,GAAMG,CAAAA,aAAa,CAAGV,KAAK,CAACH,SAAN,CAAgBc,SAAhB,CAA0B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACJ,EAAF,GAASP,MAAM,CAACO,EAApB,EAA3B,CAAtB,CAEA,GAAIE,aAAa,GAAK,CAAC,CAAvB,CAA0B,CACxBV,KAAK,CAACH,SAAN,CAAgBgB,IAAhB,CAAqBR,cAArB,EACD,CAFD,IAEO,CACLL,KAAK,CAACH,SAAN,CAAgBiB,MAAhB,CAAuBJ,aAAvB,CAAsC,CAAtC,EACD,CAED,wBAAYV,KAAZ,EACF,QACE,MAAOA,CAAAA,KAAP,CA3BJ,CA6BD,CA9BD,CAgCA,cAAeD,CAAAA,aAAf","sourcesContent":["// ** Initial State\r\nconst initialState = {\r\n  suggestions: [],\r\n  bookmarks: [],\r\n  query: ''\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'HANDLE_SEARCH_QUERY':\r\n      return { ...state, query: action.val }\r\n    case 'GET_BOOKMARKS':\r\n      return { ...state, suggestions: action.data, bookmarks: action.bookmarks }\r\n    case 'UPDATE_BOOKMARKED':\r\n      let objectToUpdate\r\n\r\n      // ** find & update object\r\n      state.suggestions.find(item => {\r\n        if (item.id === action.id) {\r\n          item.isBookmarked = !item.isBookmarked\r\n          objectToUpdate = item\r\n        }\r\n      })\r\n\r\n      // ** Get index to add or remove bookmark from array\r\n      const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.id)\r\n\r\n      if (bookmarkIndex === -1) {\r\n        state.bookmarks.push(objectToUpdate)\r\n      } else {\r\n        state.bookmarks.splice(bookmarkIndex, 1)\r\n      }\r\n\r\n      return { ...state }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default navbarReducer\r\n"]},"metadata":{},"sourceType":"module"}