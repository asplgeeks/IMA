{"ast":null,"code":"//** React Imports\nimport{useEffect}from'react';// ** Store & Actions\nimport{handleRTL}from'@store/actions/layout';import{useDispatch,useSelector}from'react-redux';export var useRTL=function useRTL(){// ** Store Vars\nvar dispatch=useDispatch();var isRtl=useSelector(function(state){return state.layout.isRTL;});// ** Return a wrapped version of useState's setter function\nvar setValue=function setValue(value){try{// ** Allow value to be a function so we have same API as useState\nvar valueToStore=value instanceof Function?value(isRtl):value;dispatch(handleRTL(valueToStore));}catch(error){// ** A more advanced implementation would handle the error case\nconsole.log(error);}};useEffect(function(){// ** Get HTML Tag\nvar element=document.getElementsByTagName('html')[0];// ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\nif(isRtl){element.setAttribute('dir','rtl');}else{element.setAttribute('dir','ltr');}},[isRtl]);return[isRtl,setValue];};","map":{"version":3,"sources":["D:/nodejs/IMA/src/utility/hooks/useRTL.js"],"names":["useEffect","handleRTL","useDispatch","useSelector","useRTL","dispatch","isRtl","state","layout","isRTL","setValue","value","valueToStore","Function","error","console","log","element","document","getElementsByTagName","setAttribute"],"mappings":"AAAA;AACA,OAASA,SAAT,KAA0B,OAA1B,CAEA;AACA,OAASC,SAAT,KAA0B,uBAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CAC1B;AACA,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CACA,GAAMI,CAAAA,KAAK,CAAGH,WAAW,CAAC,SAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACC,MAAN,CAAaC,KAAjB,EAAN,CAAzB,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CACxB,GAAI,CACF;AACA,GAAMC,CAAAA,YAAY,CAAGD,KAAK,WAAYE,CAAAA,QAAjB,CAA4BF,KAAK,CAACL,KAAD,CAAjC,CAA2CK,KAAhE,CACAN,QAAQ,CAACJ,SAAS,CAACW,YAAD,CAAV,CAAR,CACD,CAAC,MAAOE,KAAP,CAAc,CACd;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CACF,CATD,CAWAd,SAAS,CAAC,UAAM,CACd;AACA,GAAMiB,CAAAA,OAAO,CAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAhB,CAEA;AACA,GAAIb,KAAJ,CAAW,CACTW,OAAO,CAACG,YAAR,CAAqB,KAArB,CAA4B,KAA5B,EACD,CAFD,IAEO,CACLH,OAAO,CAACG,YAAR,CAAqB,KAArB,CAA4B,KAA5B,EACD,CACF,CAVQ,CAUN,CAACd,KAAD,CAVM,CAAT,CAYA,MAAO,CAACA,KAAD,CAAQI,QAAR,CAAP,CACD,CA9BM","sourcesContent":["//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}