{"ast":null,"code":"import _slicedToArray from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef}from\"react\";import{Link}from'react-router-dom';import{ChevronLeft}from'react-feather';import{useSkin}from'@hooks/useSkin';import classnames from'classnames';import{CreatePassword}from'@store/actions/auth';import{useDispatch}from'react-redux';import{useForm}from'react-hook-form';import InputPassword from'@components/input-password-toggle';import{Card,CardBody,Row,Col,CardTitle,CardText,Form,FormGroup,Label,Button}from'reactstrap';import'@styles/base/pages/page-auth.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ResetPassword=function ResetPassword(props){var _useSkin=useSkin(),_useSkin2=_slicedToArray(_useSkin,2),skin=_useSkin2[0],setSkin=_useSkin2[1];var dispatch=useDispatch();var _useForm=useForm({}),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit,watch=_useForm.watch;var illustration=skin==='dark'?'login-v2-dark.svg':'login-v2.svg',source=require(\"@src/assets/images/pages/\".concat(illustration)).default;var password=useRef({});password.current=watch(\"password\",\"\");var onSubmit=function onSubmit(data){console.log(data);dispatch(CreatePassword(data,props));// history.push('/forgot-password')\n};console.log(props);return/*#__PURE__*/_jsx(\"div\",{className:\"auth-wrapper auth-v2 \",children:/*#__PURE__*/_jsxs(Row,{className:\"auth-inner mb-0\",children:[/*#__PURE__*/_jsx(Col,{className:\"d-none d-lg-flex align-items-center p-5\",lg:\"8\",sm:\"12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-100 d-lg-flex align-items-center justify-content-center px-5\",children:/*#__PURE__*/_jsx(\"img\",{className:\"img-fluid\",src:source,alt:\"Login V2\"})})}),/*#__PURE__*/_jsx(Col,{className:\"d-flex align-items-center auth-bg px-2 p-lg-5\",lg:\"4\",sm:\"12\",children:/*#__PURE__*/_jsx(Col,{className:\"px-xl-2 mx-auto\",sm:\"8\",md:\"6\",lg:\"12\",children:/*#__PURE__*/_jsx(Card,{className:\"mb-0\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",className:\"mb-1\",children:\"Reset Password \\uD83D\\uDD12\"}),/*#__PURE__*/_jsx(CardText,{className:\"mb-2\",children:\"Your new password must be different from previously used passwords\"}),/*#__PURE__*/_jsxs(Form,{className:\"auth-reset-password-form mt-2\",onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"new-password\",children:\"New Password\"}),/*#__PURE__*/_jsx(InputPassword// className='input-group-merge'\n,{name:\"password\"//  className={classnames({ 'is-invalid': errors['login_password'] })}\n,innerRef:register({required:\"You must specify a password\",minLength:{value:8,message:\"Password must have at least 8 characters\"}}),id:\"new-password\",autoFocus:true}),errors.password&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:errors.password.message})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"confirm-password\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(InputPassword//  className='input-group-merge'\n,{name:\"password_repeat\"//  className={classnames({ 'is-invalid': errors['login_password'] })}\n,innerRef:register({validate:function validate(value){return value===password.current||\"The passwords does not match\";}}),id:\"confirm-password\"}),errors.password_repeat&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:errors.password_repeat.message})]}),/*#__PURE__*/_jsx(Button.Ripple,{color:\"primary\",type:\"submit\",block:true,children:\"Set New Password\"})]})]})})})})]})});};export default ResetPassword;","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/pages/authentication/SetPassword.js"],"names":["React","useRef","Link","ChevronLeft","useSkin","classnames","CreatePassword","useDispatch","useForm","InputPassword","Card","CardBody","Row","Col","CardTitle","CardText","Form","FormGroup","Label","Button","ResetPassword","props","skin","setSkin","dispatch","register","errors","handleSubmit","watch","illustration","source","require","default","password","current","onSubmit","data","console","log","required","minLength","value","message","color","validate","password_repeat"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport { ChevronLeft } from 'react-feather'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport classnames from 'classnames'\r\nimport { CreatePassword } from '@store/actions/auth'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useForm } from 'react-hook-form'\r\nimport InputPassword from '@components/input-password-toggle'\r\nimport { Card, CardBody, Row, Col, CardTitle, CardText, Form, FormGroup, Label, Button } from 'reactstrap'\r\nimport '@styles/base/pages/page-auth.scss'\r\n\r\n\r\nconst ResetPassword = (props) => {\r\n    const [skin, setSkin] = useSkin()\r\n    const dispatch = useDispatch()\r\n    const { register, errors, handleSubmit, watch } = useForm({})\r\n    const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\nsource = require(`@src/assets/images/pages/${illustration}`).default\r\nconst password = useRef({})\r\npassword.current = watch(\"password\", \"\")\r\nconst onSubmit = data => {\r\n    console.log(data)\r\n    dispatch(CreatePassword(data, props))\r\n// history.push('/forgot-password')\r\n  }\r\nconsole.log(props)\r\n  return (\r\n    <div className='auth-wrapper auth-v2 '>\r\n      <Row className='auth-inner mb-0'>\r\n      <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login V2' />\r\n          </div>\r\n        </Col>\r\n      <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n        <Card className='mb-0'>\r\n          <CardBody>\r\n            <CardTitle tag='h4' className='mb-1'>\r\n              Reset Password ðŸ”’\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Your new password must be different from previously used passwords</CardText>\r\n            <Form className='auth-reset-password-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='new-password'>\r\n                  New Password\r\n                </Label>\r\n                <InputPassword \r\n                // className='input-group-merge'\r\n                name=\"password\"\r\n                    //  className={classnames({ 'is-invalid': errors['login_password'] })}\r\n                     innerRef={register({\r\n                        required: \"You must specify a password\",\r\n                        minLength: {\r\n                          value: 8,\r\n                          message: \"Password must have at least 8 characters\"\r\n                        }\r\n                      })}\r\n                id='new-password' \r\n                autoFocus />\r\n                      {errors.password && <p style={{color : \"red\"}}>{errors.password.message}</p>}\r\n\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className='form-label' for='confirm-password'>\r\n                  Confirm Password\r\n                </Label>\r\n                <InputPassword\r\n                //  className='input-group-merge'\r\n                 name=\"password_repeat\"\r\n                //  className={classnames({ 'is-invalid': errors['login_password'] })}\r\n                innerRef={register({\r\n                    validate: value => value === password.current || \"The passwords does not match\"\r\n                  })}\r\n                  id='confirm-password' />\r\n                        {errors.password_repeat && <p style={{color : \"red\"}}>{errors.password_repeat.message}</p>}\r\n\r\n              </FormGroup>\r\n              <Button.Ripple color='primary' type=\"submit\" block>\r\n                Set New Password\r\n              </Button.Ripple>\r\n            </Form>\r\n            {/* <p className='text-center mt-2'>\r\n              <Link to='/pages/login-v1'>\r\n                <ChevronLeft className='mr-25' size={14} />\r\n                <span className='align-middle'>Back to login</span>\r\n              </Link>\r\n            </p> */}\r\n          </CardBody>\r\n        </Card>\r\n        </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}