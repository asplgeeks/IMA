{"ast":null,"code":"import _defineProperty from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nvar config = useJwt.jwtConfig; // ** Handle User Login\n\nexport var handleLogin = function handleLogin(data) {\n  console.log(data);\n  axios.post(\"http://172.105.49.15:3030/api/user/login_user\", {\n    mobile_number: data.phone,\n    password: data.role\n  });\n  return function (dispatch) {\n    var _dispatch;\n\n    dispatch((_dispatch = {\n      type: 'LOGIN',\n      data: data,\n      config: config\n    }, _defineProperty(_dispatch, config.storageTokenKeyName, data[config.storageTokenKeyName]), _defineProperty(_dispatch, config.storageRefreshTokenKeyName, data[config.storageRefreshTokenKeyName]), _dispatch)); // ** Add to user, accessToken & refreshToken to localStorage\n\n    localStorage.setItem('userData', JSON.stringify(data));\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken));\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken));\n  };\n}; // ** Handle User Logout\n\nexport var handleLogout = function handleLogout() {\n  return function (dispatch) {\n    var _dispatch2;\n\n    dispatch((_dispatch2 = {\n      type: 'LOGOUT'\n    }, _defineProperty(_dispatch2, config.storageTokenKeyName, null), _defineProperty(_dispatch2, config.storageRefreshTokenKeyName, null), _dispatch2)); // ** Remove user, accessToken & refreshToken from localStorage\n\n    localStorage.removeItem('userData');\n    localStorage.removeItem(config.storageTokenKeyName);\n    localStorage.removeItem(config.storageRefreshTokenKeyName);\n  };\n};\nexport var handleForgotPassword = function handleForgotPassword(props, data) {\n  console.log(data.login_phone);\n\n  if (data.login_phone === \"9096324272\") {\n    axios.post(\"http://172.105.49.15:3030/api/user/send_otp\", {\n      mobile_number: data.login_phone // password:data.password\n\n    }).then(function (response) {\n      console.log(response);\n    });\n    alert(\"Mobile number already exist\");\n  } else {\n    axios.post(\"http://172.105.49.15:3030/api/user/check_mobile_number_exist\", {\n      mobile_number: data.login_phone // password:data.password\n\n    }).then(function (r) {\n      console.log(r.ok);\n    });\n    props.history.push('/otp');\n    alert(\"we'll send you instructions to reset your password\");\n  }\n\n  return function (dispatch) {\n    dispatch({\n      type: 'Create_New',\n      data: data\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/redux/actions/auth/index.js"],"names":["useJwt","axios","useHistory","config","jwtConfig","handleLogin","data","console","log","post","mobile_number","phone","password","role","dispatch","type","storageTokenKeyName","storageRefreshTokenKeyName","localStorage","setItem","JSON","stringify","accessToken","refreshToken","handleLogout","removeItem","handleForgotPassword","props","login_phone","then","response","alert","r","ok","history","push"],"mappings":"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","sourcesContent":["// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\nconst config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = (data) => {\n  console.log(data)\n  axios.post(`http://172.105.49.15:3030/api/user/login_user`, {\n    mobile_number:data.phone,\n    password:data.role\n})\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n\nexport const handleForgotPassword = (props,data) => {\n  console.log(data.login_phone)\nif (data.login_phone === \"9096324272\") {\n  axios.post(`http://172.105.49.15:3030/api/user/send_otp`, {\n    mobile_number:data.login_phone\n    // password:data.password\n}) \n.then(function (response) {\n  console.log(response)\n})\nalert(\"Mobile number already exist\")\n} else {\n  axios.post(`http://172.105.49.15:3030/api/user/check_mobile_number_exist`, {\n    mobile_number:data.login_phone\n    // password:data.password\n})\n.then(r => {\n  console.log(r.ok)\n\n \n})\nprops.history.push('/otp')\nalert(\"we'll send you instructions to reset your password\")\n}\n  return dispatch => {\n    dispatch({ type: 'Create_New', data })\n  }\n}"]},"metadata":{},"sourceType":"module"}