{"ast":null,"code":"var _jsxFileName = \"D:\\\\IMA\\\\src\\\\views\\\\pages\\\\account-settings\\\\PasswordTabContent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as yup from 'yup';\nimport classnames from 'classnames';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Form, FormGroup, Row, Col, Button } from 'reactstrap';\nimport InputPasswordToggle from '@components/input-password-toggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PasswordTabContent = function PasswordTabContent() {\n  _s();\n\n  var SignupSchema = yup.object().shape({\n    'old-password': yup.string().required(),\n    'new-password': yup.string().required(),\n    'retype-new-password': yup.string().required().oneOf([yup.ref(\"new-password\"), null], 'Passwords must match')\n  });\n\n  var _useForm = useForm({\n    resolver: yupResolver(SignupSchema)\n  }),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      trigger = _useForm.trigger;\n\n  var onSubmit = function onSubmit() {\n    return trigger();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"6\",\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(InputPasswordToggle, {\n            label: \"Old Password\",\n            htmlFor: \"old-password\",\n            name: \"old-password\",\n            innerRef: register({\n              required: true\n            }),\n            className: classnames('input-group-merge', {\n              'is-invalid': errors['old-password']\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: \"6\",\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(InputPasswordToggle, {\n            label: \"New Password\",\n            htmlFor: \"new-password\",\n            name: \"new-password\",\n            innerRef: register({\n              required: true\n            }),\n            className: classnames('input-group-merge', {\n              'is-invalid': errors['new-password']\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"6\",\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(InputPasswordToggle, {\n            label: \"Retype New Password\",\n            htmlFor: \"retype-new-password\",\n            name: \"retype-new-password\",\n            innerRef: register({\n              required: true\n            }),\n            className: classnames('input-group-merge', {\n              'is-invalid': errors['retype-new-password']\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"mt-1\",\n        sm: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n          type: \"submit\",\n          className: \"mr-1\",\n          color: \"primary\",\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button.Ripple, {\n          color: \"secondary\",\n          outline: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PasswordTabContent, \"R69JDp0S7jLKeMQPIkVcvcOHHVg=\", false, function () {\n  return [useForm];\n});\n\n_c = PasswordTabContent;\nexport default PasswordTabContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordTabContent\");","map":{"version":3,"sources":["D:/IMA/src/views/pages/account-settings/PasswordTabContent.js"],"names":["yup","classnames","useForm","yupResolver","Form","FormGroup","Row","Col","Button","InputPasswordToggle","PasswordTabContent","SignupSchema","object","shape","string","required","oneOf","ref","resolver","register","errors","handleSubmit","trigger","onSubmit"],"mappings":"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","sourcesContent":["import * as yup from 'yup'\r\nimport classnames from 'classnames'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, FormGroup, Row, Col, Button } from 'reactstrap'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\nconst PasswordTabContent = () => {\r\n  const SignupSchema = yup.object().shape({\r\n    'old-password': yup.string().required(),\r\n    'new-password': yup.string().required(),\r\n    'retype-new-password': yup\r\n      .string()\r\n      .required()\r\n      .oneOf([yup.ref(`new-password`), null], 'Passwords must match')\r\n  })\r\n\r\n  const { register, errors, handleSubmit, trigger } = useForm({\r\n    resolver: yupResolver(SignupSchema)\r\n  })\r\n\r\n  const onSubmit = () => trigger()\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)}>\r\n      <Row>\r\n        <Col sm='6'>\r\n          <FormGroup>\r\n            <InputPasswordToggle\r\n              label='Old Password'\r\n              htmlFor='old-password'\r\n              name='old-password'\r\n              innerRef={register({ required: true })}\r\n              className={classnames('input-group-merge', {\r\n                'is-invalid': errors['old-password']\r\n              })}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm='6'>\r\n          <FormGroup>\r\n            <InputPasswordToggle\r\n              label='New Password'\r\n              htmlFor='new-password'\r\n              name='new-password'\r\n              innerRef={register({ required: true })}\r\n              className={classnames('input-group-merge', {\r\n                'is-invalid': errors['new-password']\r\n              })}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm='6'>\r\n          <FormGroup>\r\n            <InputPasswordToggle\r\n              label='Retype New Password'\r\n              htmlFor='retype-new-password'\r\n              name='retype-new-password'\r\n              innerRef={register({ required: true })}\r\n              className={classnames('input-group-merge', {\r\n                'is-invalid': errors['retype-new-password']\r\n              })}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className='mt-1' sm='12'>\r\n          <Button.Ripple type='submit' className='mr-1' color='primary'>\r\n            Save changes\r\n          </Button.Ripple>\r\n          <Button.Ripple color='secondary' outline>\r\n            Cancel\r\n          </Button.Ripple>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PasswordTabContent\r\n"]},"metadata":{},"sourceType":"module"}