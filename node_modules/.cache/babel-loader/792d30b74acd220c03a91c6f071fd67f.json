{"ast":null,"code":"/**\r\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\r\n * removing extra characters and adding type, size and lastModified\r\n *\r\n * @param {object} file\r\n * @returns {string} the fileID\r\n */\nmodule.exports = function generateFileID(file) {\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\n  // is slower! simple string concatenation is fast\n  var id = 'uppy';\n\n  if (typeof file.name === 'string') {\n    id += \"-\" + encodeFilename(file.name.toLowerCase());\n  }\n\n  if (file.type !== undefined) {\n    id += \"-\" + file.type;\n  }\n\n  if (file.meta && typeof file.meta.relativePath === 'string') {\n    id += \"-\" + encodeFilename(file.meta.relativePath.toLowerCase());\n  }\n\n  if (file.data.size !== undefined) {\n    id += \"-\" + file.data.size;\n  }\n\n  if (file.data.lastModified !== undefined) {\n    id += \"-\" + file.data.lastModified;\n  }\n\n  return id;\n};\n\nfunction encodeFilename(name) {\n  var suffix = '';\n  return name.replace(/[^A-Z0-9]/ig, function (character) {\n    suffix += \"-\" + encodeCharacter(character);\n    return '/';\n  }) + suffix;\n}\n\nfunction encodeCharacter(character) {\n  return character.charCodeAt(0).toString(32);\n}","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/node_modules/@uppy/utils/lib/generateFileID.js"],"names":["module","exports","generateFileID","file","id","name","encodeFilename","toLowerCase","type","undefined","meta","relativePath","data","size","lastModified","suffix","replace","character","encodeCharacter","charCodeAt","toString"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC7C;AACA;AACA,MAAIC,EAAE,GAAG,MAAT;;AAEA,MAAI,OAAOD,IAAI,CAACE,IAAZ,KAAqB,QAAzB,EAAmC;AACjCD,IAAAA,EAAE,IAAI,MAAME,cAAc,CAACH,IAAI,CAACE,IAAL,CAAUE,WAAV,EAAD,CAA1B;AACD;;AAED,MAAIJ,IAAI,CAACK,IAAL,KAAcC,SAAlB,EAA6B;AAC3BL,IAAAA,EAAE,IAAI,MAAMD,IAAI,CAACK,IAAjB;AACD;;AAED,MAAIL,IAAI,CAACO,IAAL,IAAa,OAAOP,IAAI,CAACO,IAAL,CAAUC,YAAjB,KAAkC,QAAnD,EAA6D;AAC3DP,IAAAA,EAAE,IAAI,MAAME,cAAc,CAACH,IAAI,CAACO,IAAL,CAAUC,YAAV,CAAuBJ,WAAvB,EAAD,CAA1B;AACD;;AAED,MAAIJ,IAAI,CAACS,IAAL,CAAUC,IAAV,KAAmBJ,SAAvB,EAAkC;AAChCL,IAAAA,EAAE,IAAI,MAAMD,IAAI,CAACS,IAAL,CAAUC,IAAtB;AACD;;AAED,MAAIV,IAAI,CAACS,IAAL,CAAUE,YAAV,KAA2BL,SAA/B,EAA0C;AACxCL,IAAAA,EAAE,IAAI,MAAMD,IAAI,CAACS,IAAL,CAAUE,YAAtB;AACD;;AAED,SAAOV,EAAP;AACD,CA1BD;;AA4BA,SAASE,cAAT,CAAwBD,IAAxB,EAA8B;AAC5B,MAAIU,MAAM,GAAG,EAAb;AACA,SAAOV,IAAI,CAACW,OAAL,CAAa,aAAb,EAA4B,UAAUC,SAAV,EAAqB;AACtDF,IAAAA,MAAM,IAAI,MAAMG,eAAe,CAACD,SAAD,CAA/B;AACA,WAAO,GAAP;AACD,GAHM,IAGFF,MAHL;AAID;;AAED,SAASG,eAAT,CAAyBD,SAAzB,EAAoC;AAClC,SAAOA,SAAS,CAACE,UAAV,CAAqB,CAArB,EAAwBC,QAAxB,CAAiC,EAAjC,CAAP;AACD","sourcesContent":["/**\r\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\r\n * removing extra characters and adding type, size and lastModified\r\n *\r\n * @param {object} file\r\n * @returns {string} the fileID\r\n */\r\nmodule.exports = function generateFileID(file) {\r\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\r\n  // is slower! simple string concatenation is fast\r\n  var id = 'uppy';\r\n\r\n  if (typeof file.name === 'string') {\r\n    id += \"-\" + encodeFilename(file.name.toLowerCase());\r\n  }\r\n\r\n  if (file.type !== undefined) {\r\n    id += \"-\" + file.type;\r\n  }\r\n\r\n  if (file.meta && typeof file.meta.relativePath === 'string') {\r\n    id += \"-\" + encodeFilename(file.meta.relativePath.toLowerCase());\r\n  }\r\n\r\n  if (file.data.size !== undefined) {\r\n    id += \"-\" + file.data.size;\r\n  }\r\n\r\n  if (file.data.lastModified !== undefined) {\r\n    id += \"-\" + file.data.lastModified;\r\n  }\r\n\r\n  return id;\r\n};\r\n\r\nfunction encodeFilename(name) {\r\n  var suffix = '';\r\n  return name.replace(/[^A-Z0-9]/ig, function (character) {\r\n    suffix += \"-\" + encodeCharacter(character);\r\n    return '/';\r\n  }) + suffix;\r\n}\r\n\r\nfunction encodeCharacter(character) {\r\n  return character.charCodeAt(0).toString(32);\r\n}"]},"metadata":{},"sourceType":"script"}