{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\views\\\\apps\\\\email\\\\navbar.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect, useState } from 'react'; // ** Third Party Components\n\nimport axios from 'axios';\nimport classnames from 'classnames';\nimport * as Icon from 'react-feather';\nimport { NavItem, NavLink } from 'reactstrap'; // ** Store & Actions\n\nimport { useDispatch } from 'react-redux';\nimport { handleSearchQuery } from '@store/actions/navbar'; // ** Custom Components\n\nimport Autocomplete from '@components/autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar NavbarSearch = function NavbarSearch() {\n  _s();\n\n  // ** Store Vars\n  var dispatch = useDispatch(); // ** States\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      suggestions = _useState2[0],\n      setSuggestions = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      navbarSearch = _useState4[0],\n      setNavbarSearch = _useState4[1]; // ** ComponentDidMount\n\n\n  useEffect(function () {\n    axios.get('/api/main-search/data').then(function (_ref) {\n      var data = _ref.data;\n      setSuggestions(data.searchArr);\n    });\n  }, []); // ** Removes query in store\n\n  var handleClearQueryInStore = function handleClearQueryInStore() {\n    return dispatch(handleSearchQuery(''));\n  }; // ** Function to handle external Input click\n\n\n  var handleExternalClick = function handleExternalClick() {\n    if (navbarSearch === true) {\n      setNavbarSearch(false);\n      handleClearQueryInStore();\n    }\n  }; // ** Function to clear input value\n\n\n  var handleClearInput = function handleClearInput(setUserInput) {\n    if (!navbarSearch) {\n      setUserInput('');\n      handleClearQueryInStore();\n    }\n  }; // ** Function to close search on ESC & ENTER Click\n\n\n  var onKeyDown = function onKeyDown(e) {\n    if (e.keyCode === 27 || e.keyCode === 13) {\n      setTimeout(function () {\n        setNavbarSearch(false);\n        handleClearQueryInStore();\n      }, 1);\n    }\n  }; // ** Function to handle search suggestion Click\n\n\n  var handleSuggestionItemClick = function handleSuggestionItemClick() {\n    setNavbarSearch(false);\n    handleClearQueryInStore();\n  }; // ** Function to handle search list Click\n\n\n  var handleListItemClick = function handleListItemClick(func, link, e) {\n    func(link, e);\n    setTimeout(function () {\n      setNavbarSearch(false);\n    }, 1);\n    handleClearQueryInStore();\n  };\n\n  return /*#__PURE__*/_jsxDEV(NavItem, {\n    className: \"nav-search\",\n    onClick: function onClick() {\n      return setNavbarSearch(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      className: \"nav-link-search\",\n      children: /*#__PURE__*/_jsxDEV(Icon.Search, {\n        className: \"ficon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('search-input', {\n        open: navbarSearch === true\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-icon\",\n        children: /*#__PURE__*/_jsxDEV(Icon.Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, _this), navbarSearch ? /*#__PURE__*/_jsxDEV(Autocomplete, {\n        className: \"form-control\",\n        suggestions: suggestions,\n        filterKey: \"title\",\n        filterHeaderKey: \"groupTitle\",\n        grouped: true,\n        placeholder: \"Explore Vuexy...\",\n        autoFocus: true // onSuggestionItemClick={handleSuggestionItemClick}\n        ,\n        externalClick: handleExternalClick,\n        clearInput: function clearInput(userInput, setUserInput) {\n          return handleClearInput(setUserInput);\n        },\n        onKeyDown: onKeyDown,\n        onChange: function onChange(e) {\n          return dispatch(handleSearchQuery(e.target.value));\n        } // customRender={(item, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover) => {\n        //   const IconTag = Icon[item.icon ? item.icon : 'X']\n        //   return (\n        //     <li\n        //       className={classnames('suggestion-item', {\n        //         active: filteredData.indexOf(item) === activeSuggestion\n        //       })}\n        //       key={i}\n        //       onClick={e => handleListItemClick(onSuggestionItemClick, item.link, e)}\n        //       onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\n        //     >\n        //       <div\n        //         className={classnames({\n        //           'd-flex justify-content-between align-items-center': item.file || item.img\n        //         })}\n        //       >\n        //         <div className='item-container d-flex'>\n        //           {item.icon ? (\n        //             <IconTag size={17} />\n        //           ) : item.file ? (\n        //             <img src={item.file} height='36' width='28' alt={item.title} />\n        //           ) : item.img ? (\n        //             <img className='rounded-circle mt-25' src={item.img} height='28' width='28' alt={item.title} />\n        //           ) : null}\n        //           <div className='item-info ml-1'>\n        //             <p className='align-middle mb-0'>{item.title}</p>\n        //             {item.by || item.email ? (\n        //               <small className='text-muted'>{item.by ? item.by : item.email ? item.email : null}</small>\n        //             ) : null}\n        //           </div>\n        //         </div>\n        //         {item.size || item.date ? (\n        //           <div className='meta-container'>\n        //             <small className='text-muted'>{item.size ? item.size : item.date ? item.date : null}</small>\n        //           </div>\n        //         ) : null}\n        //       </div>\n        //     </li>\n        //   )\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, _this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-close\",\n        children: /*#__PURE__*/_jsxDEV(Icon.X, {\n          className: \"ficon\",\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            setNavbarSearch(false);\n            handleClearQueryInStore();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NavbarSearch, \"jQRY1D7clUxkpv7Ue3dVthNUDLw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NavbarSearch;\nexport default NavbarSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavbarSearch\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/apps/email/navbar.js"],"names":["useEffect","useState","axios","classnames","Icon","NavItem","NavLink","useDispatch","handleSearchQuery","Autocomplete","NavbarSearch","dispatch","suggestions","setSuggestions","navbarSearch","setNavbarSearch","get","then","data","searchArr","handleClearQueryInStore","handleExternalClick","handleClearInput","setUserInput","onKeyDown","e","keyCode","setTimeout","handleSuggestionItemClick","handleListItemClick","func","link","open","userInput","target","value","stopPropagation"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport classnames from 'classnames'\r\nimport * as Icon from 'react-feather'\r\nimport { NavItem, NavLink } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleSearchQuery } from '@store/actions/navbar'\r\n\r\n// ** Custom Components\r\nimport Autocomplete from '@components/autocomplete'\r\n\r\nconst NavbarSearch = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** States\r\n  const [suggestions, setSuggestions] = useState([])\r\n  const [navbarSearch, setNavbarSearch] = useState(false)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    axios.get('/api/main-search/data').then(({ data }) => {\r\n      setSuggestions(data.searchArr)\r\n    })\r\n  }, [])\r\n\r\n  // ** Removes query in store\r\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\r\n\r\n  // ** Function to handle external Input click\r\n  const handleExternalClick = () => {\r\n    if (navbarSearch === true) {\r\n      setNavbarSearch(false)\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to clear input value\r\n  const handleClearInput = setUserInput => {\r\n    if (!navbarSearch) {\r\n      setUserInput('')\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to close search on ESC & ENTER Click\r\n  const onKeyDown = e => {\r\n    if (e.keyCode === 27 || e.keyCode === 13) {\r\n      setTimeout(() => {\r\n        setNavbarSearch(false)\r\n        handleClearQueryInStore()\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle search suggestion Click\r\n  const handleSuggestionItemClick = () => {\r\n    setNavbarSearch(false)\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  // ** Function to handle search list Click\r\n  const handleListItemClick = (func, link, e) => {\r\n    func(link, e)\r\n    setTimeout(() => {\r\n      setNavbarSearch(false)\r\n    }, 1)\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  return (\r\n    <NavItem className='nav-search' onClick={() => setNavbarSearch(true)}>\r\n      <NavLink className='nav-link-search'>\r\n        <Icon.Search className='ficon' />\r\n      </NavLink>\r\n      <div\r\n        className={classnames('search-input', {\r\n          open: navbarSearch === true\r\n        })}\r\n      >\r\n        <div className='search-input-icon'>\r\n          <Icon.Search />\r\n        </div>\r\n        {navbarSearch ? (\r\n          <Autocomplete\r\n            className='form-control'\r\n            suggestions={suggestions}\r\n            filterKey='title'\r\n            filterHeaderKey='groupTitle'\r\n            grouped={true}\r\n            placeholder='Explore Vuexy...'\r\n            autoFocus={true}\r\n            // onSuggestionItemClick={handleSuggestionItemClick}\r\n            externalClick={handleExternalClick}\r\n            clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\r\n            onKeyDown={onKeyDown}\r\n            onChange={e => dispatch(handleSearchQuery(e.target.value))}\r\n            // customRender={(item, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover) => {\r\n            //   const IconTag = Icon[item.icon ? item.icon : 'X']\r\n            //   return (\r\n            //     <li\r\n            //       className={classnames('suggestion-item', {\r\n            //         active: filteredData.indexOf(item) === activeSuggestion\r\n            //       })}\r\n            //       key={i}\r\n            //       onClick={e => handleListItemClick(onSuggestionItemClick, item.link, e)}\r\n            //       onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\r\n            //     >\r\n            //       <div\r\n            //         className={classnames({\r\n            //           'd-flex justify-content-between align-items-center': item.file || item.img\r\n            //         })}\r\n            //       >\r\n            //         <div className='item-container d-flex'>\r\n            //           {item.icon ? (\r\n            //             <IconTag size={17} />\r\n            //           ) : item.file ? (\r\n            //             <img src={item.file} height='36' width='28' alt={item.title} />\r\n            //           ) : item.img ? (\r\n            //             <img className='rounded-circle mt-25' src={item.img} height='28' width='28' alt={item.title} />\r\n            //           ) : null}\r\n            //           <div className='item-info ml-1'>\r\n            //             <p className='align-middle mb-0'>{item.title}</p>\r\n            //             {item.by || item.email ? (\r\n            //               <small className='text-muted'>{item.by ? item.by : item.email ? item.email : null}</small>\r\n            //             ) : null}\r\n            //           </div>\r\n            //         </div>\r\n            //         {item.size || item.date ? (\r\n            //           <div className='meta-container'>\r\n            //             <small className='text-muted'>{item.size ? item.size : item.date ? item.date : null}</small>\r\n            //           </div>\r\n            //         ) : null}\r\n            //       </div>\r\n            //     </li>\r\n            //   )\r\n            // }}\r\n          />\r\n        ) : null}\r\n        <div className='search-input-close'>\r\n          <Icon.X\r\n            className='ficon'\r\n            onClick={e => {\r\n              e.stopPropagation()\r\n              setNavbarSearch(false)\r\n              handleClearQueryInStore()\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </NavItem>\r\n  )\r\n}\r\n\r\nexport default NavbarSearch\r\n"]},"metadata":{},"sourceType":"module"}