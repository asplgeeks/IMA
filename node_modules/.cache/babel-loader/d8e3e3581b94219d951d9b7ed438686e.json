{"ast":null,"code":"import _objectSpread from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\@core\\\\layouts\\\\VerticalLayout.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // ** Store & Actions\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { ArrowUp } from 'react-feather';\nimport ScrollToTop from 'react-scroll-up';\nimport { Navbar, Button } from 'reactstrap';\nimport dashboards from './../../navigation/vertical/dashboards'; // ** Configs\n\nimport themeConfig from '@configs/themeConfig'; // ** Custom Components\n\nimport Customizer from '@components/customizer';\nimport FooterComponent from './components/footer';\nimport NavbarComponent from './components/navbar';\nimport SidebarComponent from './components/menu/vertical-menu'; // ** Custom Hooks\n\nimport { useRTL } from '@hooks/useRTL';\nimport { useSkin } from '@hooks/useSkin';\nimport { useNavbarType } from '@hooks/useNavbarType';\nimport { useFooterType } from '@hooks/useFooterType';\nimport { useNavbarColor } from '@hooks/useNavbarColor'; //adjust the route \n\nimport navigationlink from '@src/router/routes'; // ** Styles\n\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss';\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar VerticalLayout = function VerticalLayout(props) {\n  _s();\n\n  // ** Props\n  var children = props.children,\n      navbar = props.navbar,\n      footer = props.footer,\n      menu = props.menu,\n      routerProps = props.routerProps,\n      currentActiveItem = props.currentActiveItem; // console.log(\"router\", navigationlink.Routes)\n  // ** Hooks\n\n  var _useSkin = useSkin(),\n      _useSkin2 = _slicedToArray(_useSkin, 2),\n      skin = _useSkin2[0],\n      setSkin = _useSkin2[1];\n\n  var _useRTL = useRTL(),\n      _useRTL2 = _slicedToArray(_useRTL, 2),\n      isRtl = _useRTL2[0],\n      setIsRtl = _useRTL2[1];\n\n  var _useNavbarType = useNavbarType(),\n      _useNavbarType2 = _slicedToArray(_useNavbarType, 2),\n      navbarType = _useNavbarType2[0],\n      setNavbarType = _useNavbarType2[1];\n\n  var _useFooterType = useFooterType(),\n      _useFooterType2 = _slicedToArray(_useFooterType, 2),\n      footerType = _useFooterType2[0],\n      setFooterType = _useFooterType2[1];\n\n  var _useNavbarColor = useNavbarColor(),\n      _useNavbarColor2 = _slicedToArray(_useNavbarColor, 2),\n      navbarColor = _useNavbarColor2[0],\n      setNavbarColor = _useNavbarColor2[1]; // ** States\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isMounted = _useState2[0],\n      setIsMounted = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      menuVisibility = _useState4[0],\n      setMenuVisibility = _useState4[1];\n\n  var _useState5 = useState(window.innerWidth),\n      _useState6 = _slicedToArray(_useState5, 2),\n      windowWidth = _useState6[0],\n      setWindowWidth = _useState6[1]; // ** Store Vars\n\n\n  var dispatch = useDispatch();\n  var layoutStore = useSelector(function (state) {\n    return state.layout;\n  }); // ** Update Window Width\n\n  var handleWindowWidth = function handleWindowWidth() {\n    setWindowWidth(window.innerWidth);\n  }; // ** Vars\n\n\n  var location = useLocation();\n  var contentWidth = layoutStore.contentWidth;\n  var menuCollapsed = layoutStore.menuCollapsed;\n  var isHidden = layoutStore.menuHidden; // ** Toggles Menu Collapsed\n\n  var setMenuCollapsed = function setMenuCollapsed(val) {\n    return dispatch(handleMenuCollapsed(val));\n  }; // ** Handles Content Width\n\n\n  var setContentWidth = function setContentWidth(val) {\n    return dispatch(handleContentWidth(val));\n  }; // ** Handles Content Width\n\n\n  var setIsHidden = function setIsHidden(val) {\n    return dispatch(handleMenuHidden(val));\n  }; //** This function will detect the Route Change and will hide the menu on menu item click\n\n\n  useEffect(function () {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false);\n    }\n  }, [location]); //** Sets Window Size & Layout Props\n\n  useEffect(function () {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth);\n    }\n  }, [windowWidth]); //** ComponentDidMount\n\n  useEffect(function () {\n    setIsMounted(true);\n    return function () {\n      return setIsMounted(false);\n    };\n  }, []); // ** Vars\n\n  var footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  };\n  var navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  };\n  var navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  };\n  var bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white';\n\n  if (!isMounted) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    className: classnames(\"wrapper vertical-layout \".concat(navbarWrapperClasses[navbarType] || 'navbar-floating', \" \").concat(footerClasses[footerType] || 'footer-static'), {\n      // Modern Menu\n      'vertical-menu-modern': windowWidth >= 1200,\n      'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n      'menu-expanded': !menuCollapsed && windowWidth > 1200,\n      // Overlay Menu\n      'vertical-overlay-menu': windowWidth < 1200,\n      'menu-hide': !menuVisibility && windowWidth < 1200,\n      'menu-open': menuVisibility && windowWidth < 1200\n    })\n  }, isHidden ? {\n    'data-col': '1-column'\n  } : {}), {}, {\n    children: [!isHidden ? /*#__PURE__*/_jsxDEV(SidebarComponent, {\n      skin: skin,\n      menu: menu,\n      menuCollapsed: menuCollapsed,\n      menuVisibility: menuVisibility,\n      setMenuCollapsed: setMenuCollapsed,\n      setMenuVisibility: setMenuVisibility,\n      routerProps: routerProps,\n      currentActiveItem: currentActiveItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, _this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('sidenav-overlay', {\n        show: menuVisibility\n      }),\n      onClick: function onClick() {\n        return setMenuVisibility(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, _this), themeConfig.layout.customizer === true ?\n    /*#__PURE__*/\n    // <Customizer\n    //   skin={skin}\n    //   setSkin={setSkin}\n    //   footerType={footerType}\n    //   setFooterType={setFooterType}\n    //   navbarType={navbarType}\n    //   setNavbarType={setNavbarType}\n    //   navbarColor={navbarColor}\n    //   setNavbarColor={setNavbarColor}\n    //   isRtl={isRtl}\n    //   setIsRtl={setIsRtl}\n    //   layout={props.layout}\n    //   setLayout={props.setLayout}\n    //   isHidden={isHidden}\n    //   setIsHidden={setIsHidden}\n    //   contentWidth={contentWidth}\n    //   setContentWidth={setContentWidth}\n    //   menuCollapsed={menuCollapsed}\n    //   setMenuCollapsed={setMenuCollapsed}\n    //   transition={props.transition}\n    //   setTransition={props.setTransition}\n    //   themeConfig={themeConfig}\n    // />\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, _this) : null, themeConfig.layout.scrollTop === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll-to-top\",\n      children: /*#__PURE__*/_jsxDEV(ScrollToTop, {\n        showUnder: 300,\n        style: {\n          bottom: '5%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-icon\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(ArrowUp, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, _this) : null]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(VerticalLayout, \"RXUtUfYw47ddK5ubzS+FnP++V0A=\", false, function () {\n  return [useSkin, useRTL, useNavbarType, useFooterType, useNavbarColor, useDispatch, useSelector, useLocation];\n});\n\n_c = VerticalLayout;\nexport default VerticalLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalLayout\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/@core/layouts/VerticalLayout.js"],"names":["useState","useEffect","useLocation","useSelector","useDispatch","handleMenuCollapsed","handleContentWidth","handleMenuHidden","classnames","ArrowUp","ScrollToTop","Navbar","Button","dashboards","themeConfig","Customizer","FooterComponent","NavbarComponent","SidebarComponent","useRTL","useSkin","useNavbarType","useFooterType","useNavbarColor","navigationlink","VerticalLayout","props","children","navbar","footer","menu","routerProps","currentActiveItem","skin","setSkin","isRtl","setIsRtl","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isMounted","setIsMounted","menuVisibility","setMenuVisibility","window","innerWidth","windowWidth","setWindowWidth","dispatch","layoutStore","state","layout","handleWindowWidth","location","contentWidth","menuCollapsed","isHidden","menuHidden","setMenuCollapsed","val","setContentWidth","setIsHidden","undefined","addEventListener","footerClasses","static","sticky","hidden","navbarWrapperClasses","floating","navbarClasses","bgColorCondition","show","customizer","scrollTop","bottom"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, Button } from 'reactstrap'\r\nimport dashboards from './../../navigation/vertical/dashboards'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n//adjust the route \r\nimport navigationlink from '@src/router/routes'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\r\n// console.log(\"router\", navigationlink.Routes)\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n          routerProps={routerProps}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      ) : null}\r\n\r\n      {/* <Navbar\r\n        expand='lg'\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-border`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar : <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar>\r\n      {children} */}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      {/* Vertical Nav Menu Overlay */}\r\n\r\n      {themeConfig.layout.customizer === true ? (\r\n        // <Customizer\r\n        //   skin={skin}\r\n        //   setSkin={setSkin}\r\n        //   footerType={footerType}\r\n        //   setFooterType={setFooterType}\r\n        //   navbarType={navbarType}\r\n        //   setNavbarType={setNavbarType}\r\n        //   navbarColor={navbarColor}\r\n        //   setNavbarColor={setNavbarColor}\r\n        //   isRtl={isRtl}\r\n        //   setIsRtl={setIsRtl}\r\n        //   layout={props.layout}\r\n        //   setLayout={props.setLayout}\r\n        //   isHidden={isHidden}\r\n        //   setIsHidden={setIsHidden}\r\n        //   contentWidth={contentWidth}\r\n        //   setContentWidth={setContentWidth}\r\n        //   menuCollapsed={menuCollapsed}\r\n        //   setMenuCollapsed={setMenuCollapsed}\r\n        //   transition={props.transition}\r\n        //   setTransition={props.setTransition}\r\n        //   themeConfig={themeConfig}\r\n        // />\r\n        <div></div>\r\n      ) : null}\r\n      {/* <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer> */}\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n"]},"metadata":{},"sourceType":"module"}