{"ast":null,"code":"import _defineProperty from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt';\nimport axios from 'axios';\nimport { data } from 'jquery';\nimport { useHistory } from 'react-router-dom';\nvar config = useJwt.jwtConfig;\nvar result; // ** Handle User Login\n\nexport var handleLogin = function handleLogin(data) {\n  console.log(data);\n  axios.post(\"http://172.105.49.15:3030/api/user/login_user\", {\n    mobile_number: data.phone,\n    password: data.role\n  });\n  return function (dispatch) {\n    var _dispatch;\n\n    dispatch((_dispatch = {\n      type: 'LOGIN',\n      data: data,\n      config: config\n    }, _defineProperty(_dispatch, config.storageTokenKeyName, data[config.storageTokenKeyName]), _defineProperty(_dispatch, config.storageRefreshTokenKeyName, data[config.storageRefreshTokenKeyName]), _dispatch)); // ** Add to user, accessToken & refreshToken to localStorage\n\n    localStorage.setItem('userData', JSON.stringify(data));\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken));\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken));\n  };\n}; // ** Handle User Logout\n\nexport var handleLogout = function handleLogout() {\n  return function (dispatch) {\n    var _dispatch2;\n\n    dispatch((_dispatch2 = {\n      type: 'LOGOUT'\n    }, _defineProperty(_dispatch2, config.storageTokenKeyName, null), _defineProperty(_dispatch2, config.storageRefreshTokenKeyName, null), _dispatch2)); // ** Remove user, accessToken & refreshToken from localStorage\n\n    localStorage.removeItem('userData');\n    localStorage.removeItem(config.storageTokenKeyName);\n    localStorage.removeItem(config.storageRefreshTokenKeyName);\n  };\n};\nexport var handleForgotPassword = function handleForgotPassword(props, data) {\n  axios.post(\"http://172.105.49.15:3030/api/user/check_mobile_number_exist\", {\n    mobile_number: data.login_phone // password:data.password\n\n  }).then(function (r) {\n    return r;\n  }).then(function (res) {\n    return result = res;\n  });\n  console.log(res);\n\n  if (r.data === null) {\n    axios.post(\"http://172.105.49.15:3030/api/user/send_otp\", {\n      mobile_number: data.login_phone // password:data.password\n\n    }).then(function (r) {\n      console.log(r);\n    });\n    props.history.push('/otp');\n    alert(\"we'll send you instructions to reset your password\");\n  } else {\n    alert(\"Mobile number already exist\");\n  }\n\n  return function (dispatch) {\n    dispatch({\n      type: 'Create_New',\n      data: data\n    });\n  };\n};\nexport var SendOtp = function SendOtp(data) {\n  axios.post('http://172.105.49.15:3030/api/user/check_otp', {\n    otp: data.login_otp\n  });\n  return function (dispatch) {\n    dispatch({\n      type: 'Otp',\n      data: data\n    });\n  };\n};\n_c = SendOtp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendOtp\");","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/redux/actions/auth/index.js"],"names":["useJwt","axios","data","useHistory","config","jwtConfig","result","handleLogin","console","log","post","mobile_number","phone","password","role","dispatch","type","storageTokenKeyName","storageRefreshTokenKeyName","localStorage","setItem","JSON","stringify","accessToken","refreshToken","handleLogout","removeItem","handleForgotPassword","props","login_phone","then","r","res","history","push","alert","SendOtp","otp","login_otp"],"mappings":"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","sourcesContent":["// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\nimport axios from 'axios'\nimport { data } from 'jquery'\nimport {useHistory} from 'react-router-dom'\nconst config = useJwt.jwtConfig\nlet result\n// ** Handle User Login\nexport const handleLogin = (data) => {\n  console.log(data)\n  axios.post(`http://172.105.49.15:3030/api/user/login_user`, {\n    mobile_number:data.phone,\n    password:data.role\n})\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n\nexport const handleForgotPassword = (props, data) => {\n\n  axios.post(`http://172.105.49.15:3030/api/user/check_mobile_number_exist`, {\n    mobile_number:data.login_phone\n    // password:data.password\n}) \n.then(r => r)\n.then(res =>{\n  return result = res\n}\n )\nconsole.log(res)\nif (r.data === null) {\n  axios.post(`http://172.105.49.15:3030/api/user/send_otp`, {\n    mobile_number:data.login_phone\n    // password:data.password\n})\n.then(r => {\n  console.log(r)\n})\nprops.history.push('/otp')\nalert(\"we'll send you instructions to reset your password\")\n} else {\n  alert(\"Mobile number already exist\")\n}\n  return dispatch => {\n    dispatch({ type: 'Create_New', data })\n  }\n}\n\nexport const SendOtp = (data) => {\n  axios.post('http://172.105.49.15:3030/api/user/check_otp', {\n    otp:data.login_otp\n  })\n  return dispatch => {\n    dispatch({ type: 'Otp', data })\n  }\n}"]},"metadata":{},"sourceType":"module"}