{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\star\\\\erpfrontend\\\\src\\\\views\\\\pages\\\\master\\\\custommaster.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useContext, Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Facebook, Twitter, Mail, GitHub, Edit2 } from 'react-feather';\nimport InputPasswordToggle from '@components/input-password-toggle';\nimport { Col, Row, Card, CardBody, CardTitle, CardText, UncontrolledTooltip, Form, FormGroup, Label, Input, CustomInput, Button } from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport classnames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { addCustomMaster, updateCustomMaster } from '@store/actions/masteruser';\nimport axios from 'axios';\n\nvar moment = require('moment');\n\nimport '@styles/base/pages/page-auth.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow'; //Optional Import\n\nimport { uploadFile } from 'react-s3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AWS = require('aws-sdk/global');\n\nvar S3 = require('aws-sdk/clients/s3');\n\nvar loginAuthID = sessionStorage.getItem('id_token');\nAWS.config.update({\n  accessKeyId: 'AKIARS26YOAJD4KZJDNK',\n  secretAccessKey: 'Ck06E0hZUaQvPkNLqpU6RYhEIBxER4BrOq4jC',\n  region: 'ap-south-1'\n});\nvar s3 = new AWS.S3();\nvar params = {\n  Bucket: 'ilovenagar',\n  Delimiter: '',\n  Prefix: ''\n}; //config for s3\n\nvar config = {\n  bucketName: 'ilovenagar',\n  dirName: 'ilovenagar',\n\n  /* optional */\n  region: 'ap-south-1',\n  accessKeyId: 'AKIARS26YOAJD4KZJDNK',\n  secretAccessKey: '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'\n};\nvar columns = [{\n  id: 'index',\n  label: 'Sr.No.',\n  minWidth: 120\n}, {\n  id: 'code',\n  label: 'Customer Code',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'name',\n  label: 'Customer Name',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'group',\n  label: 'Customer Group',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'person',\n  label: 'Contact Person',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'pan',\n  label: 'Pan No.',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'gst',\n  label: 'Gst No.',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'address',\n  label: 'Address',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'city',\n  label: 'City',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'state',\n  label: 'State',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'country',\n  label: 'Country',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'zip',\n  label: 'zip Code',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'email',\n  label: 'Email Id',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'contact',\n  label: 'Contact No',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'action',\n  label: 'ACTION',\n  minWidth: 100\n}];\nvar useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nvar MasterForm = function MasterForm(props) {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: props ? props.preloadValue && props.preloadValue.detail : \"\"\n  }),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      customgroup = _useState2[0],\n      setCustomGroup = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      country = _useState4[0],\n      setCountry = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      state = _useState6[0],\n      setState = _useState6[1];\n\n  var customgroupid = 'http://172.105.49.15:3030/api/master/list_customer_group';\n  useEffect(function () {\n    axios.get(customgroupid, {\n      headers: {\n        token: loginAuthID\n      }\n    }).then(function (r) {\n      setCustomGroup(r);\n    });\n  }, [setCustomGroup]);\n  var countryid = 'http://172.105.49.15:3030/api/master/get_country_list';\n  useEffect(function () {\n    axios.get(countryid, {\n      headers: {\n        token: loginAuthID\n      }\n    }).then(function (r) {\n      setCountry(r);\n    });\n  }, [setCustomGroup]);\n  var stateid = 'http://172.105.49.15:3030/api/master/get_state_list';\n  useEffect(function () {\n    axios.get(stateid, {\n      headers: {\n        token: loginAuthID\n      }\n    }).then(function (r) {\n      return setState(r);\n    });\n  }, [stateid]);\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data); // alert(\"SUBMITED SUCCESSFULLY\")\n\n    if (props && props.preloadValue) {\n      dispatch(updateCustomMaster(data, props));\n    } else {\n      dispatch(addCustomMaster(data, props));\n    }\n  };\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"auth-login-form mt-2\",\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Custom Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              id: \"code\",\n              name: \"customer_code\",\n              className: classnames({\n                'is-invalid': errors['customer_code']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your customer code\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, _this), errors.customer_code && errors.customer_code.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Customer code is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 84\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 12\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"code\",\n              name: \"customer_name\",\n              className: classnames({\n                'is-invalid': errors['customer_name']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your customer name\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, _this), errors.customer_name && errors.customer_name.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Customer name is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 84\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Customer Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              id: \"exampleselect\",\n              name: \"customer_group\",\n              className: classnames({\n                'is-invalid': errors['customer_group']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              autoFocus: true,\n              children: customgroup && customgroup.data && customgroup.data.data && customgroup.data.data.map(function (customer, index) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: customer._id,\n                  children: customer.Customer_group_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, _this), errors.customer_group && errors.customer_group.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Customer group is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 86\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Contact Person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"code\",\n              name: \"contact_person\",\n              className: classnames({\n                'is-invalid': errors['contact_person']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your contact person\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, _this), errors.contact_person && errors.contact_person.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Contact person is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 86\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Pan No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"code\",\n              name: \"pan_no\",\n              className: classnames({\n                'is-invalid': errors['pan_no']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your pan no.\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, _this), errors.pan_no && errors.pan_no.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Pan number is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 70\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Gst No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"code\",\n              name: \"gst_no\",\n              className: classnames({\n                'is-invalid': errors['gst_no']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your gst no.\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, _this), errors.gst_no && errors.gst_no.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Gst number is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 70\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"code\",\n              name: \"address\",\n              className: classnames({\n                'is-invalid': errors['address']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your address\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, _this), errors.address && errors.address.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Address is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 72\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"code\",\n              name: \"city\",\n              className: classnames({\n                'is-invalid': errors['city']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your city\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, _this), errors.city && errors.city.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"City is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 66\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              id: \"code\",\n              name: \"state_id\",\n              className: classnames({\n                'is-invalid': errors['state_id']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your state id\",\n              autoFocus: true,\n              children: state && state.data && state.data.data && state.data.data.map(function (stateuser, index) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: stateuser._id,\n                  children: stateuser.state_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              id: \"code\",\n              name: \"country_id\",\n              className: classnames({\n                'is-invalid': errors['country_id']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              autoFocus: true,\n              children: country && country.data && country.data.data && country.data.data.map(function (country, index) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: country._id,\n                  children: country.country_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Zip Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"code\",\n              name: \"zip_code\",\n              className: classnames({\n                'is-invalid': errors['zip_code']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your zip code\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, _this), errors.zip_code && errors.zip_code.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Zip code is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 74\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Email Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              id: \"email\",\n              name: \"email_id\",\n              className: classnames({\n                'is-invalid': errors['email_id']\n              }),\n              innerRef: register({\n                required: true,\n                pattern: {\n                  value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                  message: \"please enter your 10 digit otp\"\n                },\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your email\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, _this), errors.email_id && errors.email_id.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Email id is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 74\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Contact No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              id: \"code\",\n              name: \"contact_no\",\n              className: classnames({\n                'is-invalid': errors['contact_no']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"please enter your contact no.\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, _this), errors.contact_no && errors.contact_no.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Contact no is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 78\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-group-btn\",\n            children: /*#__PURE__*/_jsxDEV(Button.Ripple, {\n              type: \"submit\",\n              className: \"ripple-button  btn-theam theam_m\",\n              size: \"sm\",\n              style: {\n                float: \"right\"\n              },\n              children: props.preloadValue ? 'Update' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(MasterForm, \"lMR+LpLmSf16MR7gV++5uWF3/Wc=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = MasterForm;\n\nvar CustomMaster = function CustomMaster(props) {\n  _s2();\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      addform = _useState8[0],\n      setAddForm = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      updateuser = _useState10[0],\n      setUpdateuser = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      addbutton = _useState12[0],\n      setAddButton = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userdetail = _useState14[0],\n      setUserDetail = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      user = _useState16[0],\n      setUser = _useState16[1];\n\n  var classes = useStyles();\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      page = _useState18[0],\n      setPage = _useState18[1];\n\n  var _useState19 = useState(7),\n      _useState20 = _slicedToArray(_useState19, 2),\n      rowsPerPage = _useState20[0],\n      setRowsPerPage = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      searching = _useState22[0],\n      setSearchStream = _useState22[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }; ///search table data\n\n\n  var searchChange = function searchChange(e) {\n    e.preventDefault();\n    var searchstream = e.target.value; //  setSearchStream(searchstream)\n    //  const searchString = searching\n\n    if (searchstream.length > 2) {\n      var newstring = new RegExp(searchstream, 'gi');\n      var searchitem = userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.filter(function (item) {\n        //  console.log(item.name, searchstream, item.text.match(newstring))\n        return item.customer_name.match(newstring) || item.contact_person.match(newstring);\n      });\n      console.log(searchitem);\n      setUserDetail({\n        data: {\n          data: searchitem\n        }\n      });\n    } else {\n      setUserDetail(user);\n    }\n  };\n\n  var onAddClick = function onAddClick() {\n    setAddForm(true);\n    setAddButton(true);\n    setUpdateuser(false);\n  };\n\n  var onCancleClick = function onCancleClick() {\n    setAddForm(false);\n    setAddButton(false);\n  };\n\n  var onEditClick = function onEditClick(detail) {\n    props.history.push({\n      state: {\n        detail: detail\n      }\n    });\n    setUpdateuser(true);\n    setAddForm(false);\n  };\n\n  var userdetailapi = 'http://172.105.49.15:3030/api/master/list_customer_master';\n  useEffect(function () {\n    axios.get(userdetailapi, {\n      headers: {\n        token: loginAuthID\n      }\n    }).then(function (r) {\n      setUser(r);\n      setUserDetail(r);\n    });\n  }, [addform, updateuser]);\n  useEffect(function () {\n    var location = props.location,\n        history = props.history; //use the state via location.state\n    //and replace the state via\n\n    history.replace();\n  }, [history]);\n  console.log(userdetail);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper auth-v1 px-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner py-2\",\n      children: [addform === true ? /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-0\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h4\",\n            className: \"mb-1\",\n            children: \"Customer Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MasterForm, {\n            onAdd: function onAdd() {\n              setAddForm(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 12\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 30\n      }, _this) : \" \", updateuser === true ? /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-0\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h4\",\n            className: \"mb-1\",\n            children: \"Customer Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MasterForm, {\n            preloadValue: props && props.location && props.location.state,\n            onAdd: function onAdd() {\n              setUpdateuser(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 34\n      }, _this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-0\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  margin: '10px'\n                },\n                className: \"mb-1\",\n                children: \"Customer List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                style: {\n                  float: \"right\",\n                  marginTop: \"10px\"\n                },\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"search\",\n                  onChange: function onChange(e) {\n                    searchChange(e);\n                  },\n                  id: \"code\",\n                  name: \"image\" //   className={classnames({ 'is-invalid': errors['image'] })}\n                  //   innerRef={register({ required: true, validate: value => value !== '' })}\n                  ,\n                  placeholder: \"search...\",\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 17\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 13\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: addbutton === false ? /*#__PURE__*/_jsxDEV(Button.Ripple, {\n                className: \"ripple-button\",\n                type: \"submit\",\n                size: \"sm\",\n                onClick: onAddClick,\n                style: {\n                  margin: '10px',\n                  float: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-plus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 11\n                }, _this), \" Add Customer\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 40\n              }, _this) : /*#__PURE__*/_jsxDEV(Button.Ripple, {\n                className: \"ripple-button\",\n                type: \"submit\",\n                size: \"sm\",\n                onClick: onCancleClick,\n                style: {\n                  margin: '10px',\n                  float: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-minus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 11\n                }, _this), \" Add Customer\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 34\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                stickyHeader: true,\n                size: \"small\",\n                \"aria-label\": \"a dense table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: columns.map(function (column) {\n                      return /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: column.align,\n                        style: {\n                          minWidth: column.minWidth\n                        },\n                        children: column.label\n                      }, column.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 511,\n                        columnNumber: 17\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 13\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 11\n                }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (detail, index) {\n                    console.log(detail);\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      role: \"checkbox\",\n                      tabIndex: -1,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 526,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.customer_code\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.customer_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.customer_group === null ? \"not found\" : detail.customer_group.Customer_group_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.contact_person\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 538,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.pan_no\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 541,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.gst_no\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.address\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 547,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.city\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 550,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.state_id === null ? 'not found' : detail.state_id.state_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.country_id === null ? 'not found' : detail.country_id.country_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.zip_code\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 559,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.email_id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 562,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: detail.contact_no\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 565,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n                          className: \"btn-icon btn-sm rounded-circle\",\n                          color: \"flat-success\",\n                          onClick: function onClick() {\n                            return onEditClick(detail, props);\n                          },\n                          outline: true,\n                          id: \"positionTop_\".concat(index + 1),\n                          children: /*#__PURE__*/_jsxDEV(Edit2, {\n                            size: 16\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 570,\n                            columnNumber: 9\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 569,\n                          columnNumber: 23\n                        }, _this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n                          placement: \"top\",\n                          target: \"positionTop_\".concat(index + 1),\n                          children: \"Edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 572,\n                          columnNumber: 7\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 568,\n                        columnNumber: 23\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 17\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 11\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [7, 20, 30],\n              component: \"div\",\n              count: userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(CustomMaster, \"Znlr6CLQMp/p4nPzl9BOVOUqVQw=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CustomMaster;\nexport default CustomMaster;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MasterForm\");\n$RefreshReg$(_c2, \"CustomMaster\");","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/src/views/pages/master/custommaster.js"],"names":["useState","useContext","Fragment","useEffect","Link","Facebook","Twitter","Mail","GitHub","Edit2","InputPasswordToggle","Col","Row","Card","CardBody","CardTitle","CardText","UncontrolledTooltip","Form","FormGroup","Label","Input","CustomInput","Button","useForm","classnames","useDispatch","addCustomMaster","updateCustomMaster","axios","moment","require","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","uploadFile","AWS","S3","loginAuthID","sessionStorage","getItem","config","update","accessKeyId","secretAccessKey","region","s3","params","Bucket","Delimiter","Prefix","bucketName","dirName","columns","id","label","minWidth","align","useStyles","root","width","container","maxHeight","MasterForm","props","defaultValues","preloadValue","detail","register","errors","setValue","handleSubmit","dispatch","customgroup","setCustomGroup","country","setCountry","state","setState","customgroupid","get","headers","token","then","r","countryid","stateid","onSubmit","data","console","log","required","validate","value","customer_code","type","color","customer_name","map","customer","index","_id","Customer_group_name","customer_group","contact_person","pan_no","gst_no","address","city","stateuser","state_name","country_name","zip_code","pattern","message","email_id","contact_no","float","CustomMaster","addform","setAddForm","updateuser","setUpdateuser","addbutton","setAddButton","userdetail","setUserDetail","user","setUser","classes","page","setPage","rowsPerPage","setRowsPerPage","searching","setSearchStream","handleChangePage","event","newPage","handleChangeRowsPerPage","target","searchChange","e","preventDefault","searchstream","length","newstring","RegExp","searchitem","filter","item","match","onAddClick","onCancleClick","onEditClick","history","push","userdetailapi","location","replace","padding","margin","marginTop","column","slice","state_id","country_id"],"mappings":"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","sourcesContent":["import { useState, useContext, Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Facebook, Twitter, Mail, GitHub, Edit2 } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport {Col, Row, Card, CardBody, CardTitle, CardText, UncontrolledTooltip, Form, FormGroup, Label, Input, CustomInput, Button } from 'reactstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport classnames from 'classnames'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addCustomMaster, updateCustomMaster } from '@store/actions/masteruser'\r\nimport axios from 'axios'\r\nconst moment = require('moment')\r\nimport '@styles/base/pages/page-auth.scss'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\n//Optional Import\r\nimport { uploadFile } from 'react-s3'\r\nconst AWS = require('aws-sdk/global')\r\n\r\nconst S3 = require('aws-sdk/clients/s3')\r\nconst loginAuthID = sessionStorage.getItem('id_token')\r\nAWS.config.update({ accessKeyId: 'AKIARS26YOAJD4KZJDNK', secretAccessKey: 'Ck06E0hZUaQvPkNLqpU6RYhEIBxER4BrOq4jC', region: 'ap-south-1' })\r\nconst s3 = new AWS.S3()\r\n\r\nconst params = {\r\n Bucket: 'ilovenagar',\r\n Delimiter: '',\r\n Prefix: ''\r\n}\r\n\r\n//config for s3\r\nconst config = {\r\n  bucketName: 'ilovenagar',\r\n  dirName: 'ilovenagar', /* optional */\r\n  region: 'ap-south-1',\r\n  accessKeyId: 'AKIARS26YOAJD4KZJDNK',\r\n  secretAccessKey: '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'\r\n}\r\nconst columns = [\r\n  { id: 'index', label: 'Sr.No.', minWidth: 120 },\r\n  { id: 'code', label: 'Customer Code', minWidth: 170, align: 'right' },\r\n  { id: 'name', label: 'Customer Name', minWidth: 170, align: 'right' },\r\n  { id: 'group', label: 'Customer Group', minWidth: 170, align: 'right' },\r\n  { id: 'person', label: 'Contact Person', minWidth: 170, align: 'right' },\r\n  { id: 'pan', label: 'Pan No.', minWidth: 170, align: 'right' },\r\n  { id: 'gst', label: 'Gst No.', minWidth: 170, align: 'right' },\r\n  { id: 'address', label: 'Address', minWidth: 170, align: 'right' },\r\n  { id: 'city', label: 'City', minWidth: 170, align: 'right' },\r\n  { id: 'state', label: 'State', minWidth: 170, align: 'right' },\r\n  { id: 'country', label: 'Country', minWidth: 170, align: 'right' },\r\n  { id: 'zip', label: 'zip Code', minWidth: 170, align: 'right' },\r\n  { id: 'email', label: 'Email Id', minWidth: 170, align: 'right' },\r\n  { id: 'contact', label: 'Contact No', minWidth: 170, align: 'right' },\r\n  { id: 'action', label: 'ACTION', minWidth: 100 }\r\n]\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  container: {\r\n    maxHeight: 440\r\n  }\r\n})\r\n\r\nconst MasterForm = (props) => {\r\n    const { register, errors, setValue, handleSubmit } = useForm({defaultValues:props ? props.preloadValue && props.preloadValue.detail : \"\"})\r\n    const dispatch = useDispatch()\r\n    const [customgroup, setCustomGroup] = useState([])\r\n    const [country, setCountry] = useState([])\r\n    const [state, setState] = useState([])\r\n\r\n  const  customgroupid = 'http://172.105.49.15:3030/api/master/list_customer_group'\r\nuseEffect(() => {\r\naxios.get(customgroupid, {\r\nheaders:{\r\n  token:loginAuthID\r\n}\r\n})\r\n.then(r => {\r\n  setCustomGroup(r)\r\n})\r\n}, [setCustomGroup])\r\n\r\nconst  countryid = 'http://172.105.49.15:3030/api/master/get_country_list'\r\nuseEffect(() => {\r\naxios.get(countryid, {\r\nheaders:{\r\n  token:loginAuthID\r\n}\r\n})\r\n.then(r => {\r\n  setCountry(r)\r\n})\r\n}, [setCustomGroup])\r\n\r\nconst stateid = 'http://172.105.49.15:3030/api/master/get_state_list'\r\n   \r\nuseEffect(() => {\r\n  axios.get(stateid, {\r\n    headers:{\r\n      token:loginAuthID\r\n    }\r\n  })\r\n  .then(r => setState(r))\r\n}, [stateid])\r\n    const onSubmit = data => {\r\n        console.log(data)\r\n        // alert(\"SUBMITED SUCCESSFULLY\")\r\n        if (props && props.preloadValue) { \r\n          dispatch(updateCustomMaster(data, props))\r\n        } else {\r\n          dispatch(addCustomMaster(data, props))\r\n        }\r\n      }\r\n\r\n    console.log(props)\r\nreturn (\r\n  <div>\r\n  <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n            <Row>\r\n          \r\n           <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Custom Code\r\n                </Label>\r\n                <Input type='number' id='code'\r\n                name=\"customer_code\"\r\n                  className={classnames({ 'is-invalid': errors['customer_code'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your customer code'\r\n                  autoFocus />\r\n              </FormGroup>\r\n              {errors.customer_code && errors.customer_code.type === 'required' && <p style={{color:\"red\"}}>Customer code is required</p>}\r\n\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Customer Name\r\n                </Label>\r\n                <Input type='text' id='code'\r\n                name=\"customer_name\"\r\n                  className={classnames({ 'is-invalid': errors['customer_name'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your customer name'\r\n                  autoFocus />\r\n              </FormGroup>\r\n              {errors.customer_name && errors.customer_name.type === 'required' && <p style={{color:\"red\"}}>Customer name is required</p>}\r\n\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Customer Group \r\n                </Label>\r\n                <Input type='select' id='exampleselect'\r\n                name=\"customer_group\"\r\n                  className={classnames({ 'is-invalid': errors['customer_group'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  autoFocus >\r\n                  {customgroup && customgroup.data && customgroup.data.data && customgroup.data.data.map((customer, index) => {\r\n                    return (\r\n                    <option value ={customer._id}>{customer.Customer_group_name}</option>\r\n                    )\r\n                  })}\r\n                  </Input>\r\n              </FormGroup>\r\n              {errors.customer_group && errors.customer_group.type === 'required' && <p style={{color:\"red\"}}>Customer group is required</p>}\r\n\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Contact Person\r\n                </Label>\r\n                <Input type='text' id='code'\r\n                name=\"contact_person\"\r\n                  className={classnames({ 'is-invalid': errors['contact_person'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your contact person'\r\n                  autoFocus />\r\n              </FormGroup>\r\n              {errors.contact_person && errors.contact_person.type === 'required' && <p style={{color:\"red\"}}>Contact person is required</p>}\r\n\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Pan No\r\n                </Label>\r\n                <Input type='text' id='code'\r\n                name=\"pan_no\"\r\n                  className={classnames({ 'is-invalid': errors['pan_no'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your pan no.'\r\n                  autoFocus />\r\n              </FormGroup>\r\n              {errors.pan_no && errors.pan_no.type === 'required' && <p style={{color:\"red\"}}>Pan number is required</p>}\r\n\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Gst No\r\n                </Label>\r\n                <Input type='text' id='code'\r\n                name=\"gst_no\"\r\n                  className={classnames({ 'is-invalid': errors['gst_no'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your gst no.'\r\n                  autoFocus />\r\n              </FormGroup>\r\n              {errors.gst_no && errors.gst_no.type === 'required' && <p style={{color:\"red\"}}>Gst number is required</p>}\r\n\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Address\r\n                </Label>\r\n                <Input type='text' id='code'\r\n                name=\"address\"\r\n                  className={classnames({ 'is-invalid': errors['address'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your address'\r\n                  autoFocus />\r\n              {errors.address && errors.address.type === 'required' && <p style={{color:\"red\"}}>Address is required</p>}\r\n\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                City\r\n                </Label>\r\n                <Input type='text' id='code'\r\n                name=\"city\"\r\n                  className={classnames({ 'is-invalid': errors['city'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your city'\r\n                  autoFocus />\r\n              </FormGroup>\r\n              {errors.city && errors.city.type === 'required' && <p style={{color:\"red\"}}>City is required</p>}\r\n\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                State\r\n                </Label>\r\n                <Input type='select' id='code'\r\n                name=\"state_id\"\r\n                  className={classnames({ 'is-invalid': errors['state_id'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your state id'\r\n                  autoFocus >\r\n                     {state && state.data && state.data.data && state.data.data.map((stateuser, index) => {\r\n                    return (\r\n                    <option value ={stateuser._id}>{stateuser.state_name}</option>\r\n                    )\r\n                  })}\r\n               </Input>\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Country\r\n                </Label>\r\n                <Input type='select' id='code'\r\n                name=\"country_id\"\r\n                  className={classnames({ 'is-invalid': errors['country_id'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  autoFocus>\r\n               {country && country.data && country.data.data && country.data.data.map((country, index) => {\r\n                    return (\r\n                    <option value ={country._id}>{country.country_name}</option>\r\n                    )\r\n                  })}\r\n               </Input>\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Zip Code\r\n                </Label>\r\n                <Input type='text' id='code'\r\n                name=\"zip_code\"\r\n                  className={classnames({ 'is-invalid': errors['zip_code'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your zip code'\r\n                  autoFocus />\r\n              </FormGroup>\r\n              {errors.zip_code && errors.zip_code.type === 'required' && <p style={{color:\"red\"}}>Zip code is required</p>}\r\n\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 Email Id\r\n                </Label>\r\n                <Input type='email' id='email'\r\n                name=\"email_id\"\r\n                  className={classnames({ 'is-invalid': errors['email_id'] })}\r\n                  innerRef={register({ required: true, \r\n                    pattern:{value:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                    message:\"please enter your 10 digit otp\"},\r\n                    validate: value => value !== '' })}\r\n                 placeholder='please enter your email' \r\n                 autoFocus />\r\n              </FormGroup>\r\n              {errors.email_id && errors.email_id.type === 'required' && <p style={{color:\"red\"}}>Email id is required</p>}\r\n\r\n              </Col>\r\n              <Col md={4}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Contact No\r\n                </Label>\r\n                <Input type='number' id='code'\r\n                name=\"contact_no\"\r\n                  className={classnames({ 'is-invalid': errors['contact_no'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  \r\n                  placeholder='please enter your contact no.'\r\n                  autoFocus />\r\n              </FormGroup>\r\n              {errors.contact_no && errors.contact_no.type === 'required' && <p style={{color:\"red\"}}>Contact no is required</p>}\r\n\r\n              </Col>\r\n              <Col md={8}>\r\n              <span className=\"input-group-btn\">\r\n          <Button.Ripple  type=\"submit\" className='ripple-button  btn-theam theam_m' size=\"sm\" style={{float:\"right\"}}>\r\n          { props.preloadValue ? 'Update' : 'Submit' }\r\n              </Button.Ripple>\r\n              </span>\r\n              </Col>\r\n              </Row>\r\n              {/* { props.preloadValue ?    <Button.Ripple color='primary' className='ripple-button' type=\"submit\" size=\"sm\" style={{float:\"right\"}} >\r\n               Update\r\n              </Button.Ripple> :   <Button.Ripple color='primary' className='ripple-button' type=\"submit\" size=\"sm\" style={{float:\"right\"}} >\r\n                Save\r\n              </Button.Ripple>} */}\r\n            \r\n            </Form>\r\n  </div>\r\n)\r\n}\r\n\r\n\r\nconst CustomMaster = (props) => {\r\n  const [addform, setAddForm] = useState(false)\r\n  const [updateuser, setUpdateuser] = useState(false)\r\n  const [addbutton, setAddButton] = useState(false)\r\n  const [userdetail, setUserDetail] = useState([])\r\n  const [user, setUser] = useState([])\r\n  const classes = useStyles()\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(7)\r\n  const [searching, setSearchStream] = useState('')\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value)\r\n    setPage(0)\r\n  }\r\n ///search table data\r\nconst searchChange = (e) => {\r\n e.preventDefault()\r\n const searchstream = e.target.value\r\n//  setSearchStream(searchstream)\r\n//  const searchString = searching\r\nif (searchstream.length > 2) {\r\n  const newstring = new RegExp(searchstream, 'gi')\r\n       const searchitem = userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.filter(item => {\r\n        //  console.log(item.name, searchstream, item.text.match(newstring))\r\n         return item.customer_name.match(newstring) || item.contact_person.match(newstring)\r\n       })\r\n       console.log(searchitem)\r\n       setUserDetail({data:{data:searchitem}})\r\n      } else {\r\n        setUserDetail(user)\r\n      }\r\n}\r\n  const onAddClick = () => {\r\n    setAddForm(true)\r\n    setAddButton(true)\r\n    setUpdateuser(false)\r\n  }\r\n  const onCancleClick = () => {\r\n    setAddForm(false)\r\n    setAddButton(false)\r\n  }\r\n\r\n  const onEditClick = (detail) => {\r\n    props.history.push({\r\n      state : {\r\n     detail\r\n     }})\r\n     setUpdateuser(true)\r\n     setAddForm(false)\r\n  }\r\n  const userdetailapi = 'http://172.105.49.15:3030/api/master/list_customer_master'\r\n  useEffect(() => {\r\n    axios.get(userdetailapi, {\r\n      headers:{\r\n        token:loginAuthID\r\n      }})\r\n    .then(r => {\r\n      setUser(r)\r\n      setUserDetail(r)\r\n    })\r\n  }, [addform, updateuser])\r\n\r\n\r\n  useEffect(() => {\r\n    const {location, history} = props\r\n    //use the state via location.state\r\n    //and replace the state via\r\n    history.replace() \r\n  }, [history])\r\nconsole.log(userdetail)\r\n  return (\r\n    <div className='auth-wrapper auth-v1 px-2'>\r\n      <div className='auth-inner py-2'>\r\n      { addform === true ?   <Card className='mb-0'>\r\n          <CardBody>\r\n            <CardTitle tag='h4' className='mb-1'>\r\n            Customer Master\r\n            </CardTitle>\r\n            {/* <CardText className='mb-2'>Please Register for master</CardText> */}\r\n           <MasterForm onAdd={() => { setAddForm(false) }} />\r\n          </CardBody>\r\n        </Card> : \" \"}\r\n        {updateuser === true ?   <Card className='mb-0'>\r\n          <CardBody>\r\n            <CardTitle tag='h4' className='mb-1'>\r\n            Customer Master\r\n            </CardTitle>\r\n            {/* <CardText className='mb-2'>Please Register for master</CardText> */}\r\n            <MasterForm\r\n             preloadValue={props && props.location && props.location.state} onAdd={() => { setUpdateuser(false) }}\r\n             />\r\n          </CardBody>\r\n        </Card> : \"\" }\r\n      \r\n        <div style={{padding:10}}>\r\n     \r\n        </div>\r\n        <Card className='mb-0'>\r\n          <CardBody> \r\n          <Row>\r\n              <Col md={3}>\r\n              <h4 style={{margin:'10px'}} className='mb-1'>Customer List</h4>\r\n              </Col>\r\n              <Col md={2}>\r\n                  <h6 style={{float:\"right\", marginTop:\"10px\"}}>Search</h6>\r\n                  </Col>\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Input \r\n                type='search'\r\n                onChange ={(e) => {\r\n                  searchChange(e)\r\n                }}\r\n                id='code'\r\n                name=\"image\"\r\n                //   className={classnames({ 'is-invalid': errors['image'] })}\r\n                //   innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='search...' autoFocus />\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n              {addbutton === false ?   <Button.Ripple className='ripple-button' type=\"submit\" size=\"sm\" onClick={onAddClick} style={{margin:'10px', float:\"right\"}}>\r\n          <i class=\"fa fa-plus\"></i> Add Customer\r\n              </Button.Ripple> : <Button.Ripple className='ripple-button' type=\"submit\" size=\"sm\" onClick={onCancleClick} style={{margin:'10px', float:\"right\"}}>\r\n          <i class=\"fa fa-minus\"></i> Add Customer\r\n              </Button.Ripple>\r\n              \r\n            }\r\n              </Col>\r\n            </Row>\r\n        \r\n            <div className={classes.root}>\r\n    <TableContainer>\r\n        <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.slice((page * rowsPerPage), (page * rowsPerPage) + rowsPerPage).map((detail, index) => {\r\n              console.log(detail)\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} >\r\n                      <TableCell>\r\n                    {index + 1}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.customer_code}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.customer_name}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                     {detail.customer_group === null ?  \"not found\" : detail.customer_group.Customer_group_name}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.contact_person}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.pan_no}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.gst_no}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.address}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.city}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.state_id === null ? 'not found' : detail.state_id.state_name}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.country_id === null ? 'not found' : detail.country_id.country_name}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.zip_code}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.email_id}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      {detail.contact_no}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                      <Button.Ripple className='btn-icon btn-sm rounded-circle' color='flat-success'  onClick={() => onEditClick(detail, props)} outline id={`positionTop_${index + 1}`}>\r\n        <Edit2 size={16} />\r\n      </Button.Ripple>\r\n      <UncontrolledTooltip placement='top' target={`positionTop_${index + 1}`}>\r\n       Edit\r\n      </UncontrolledTooltip>\r\n                      </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[7, 20, 30]}\r\n        component=\"div\"\r\n        count={userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n      </div>\r\n    </CardBody>\r\n    </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomMaster"]},"metadata":{},"sourceType":"module"}