{"ast":null,"code":"import _objectSpread from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/nodejs/star/erpfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\star\\\\erpfrontend\\\\src\\\\views\\\\pages\\\\authentication\\\\Master.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { React, useState, useContext, Fragment, useEffect } from 'react';\nimport { createBrowserHistory } from 'history';\nimport { Link } from 'react-router-dom';\nimport { Facebook, Twitter, Mail, GitHub, Edit2 } from 'react-feather';\nimport InputPasswordToggle from '@components/input-password-toggle';\nimport { Col, Row, Card, CardBody, CardTitle, CardText, Form, FormGroup, Label, Input, CustomInput, Button, UncontrolledTooltip } from 'reactstrap';\n\nvar moment = require('moment');\n\nimport { useForm, Controller } from 'react-hook-form';\nimport Switch from '@material-ui/core/Switch';\nimport classnames from 'classnames';\nimport Select from 'react-select';\nimport { useDispatch } from 'react-redux';\nimport { handleMaster, handleMasterUpdate } from '@store/actions/masteruser';\nimport { forIdToken } from '@store/actions/auth';\nimport axios from 'axios';\nimport '@styles/base/pages/page-auth.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { uploadFile } from 'react-s3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar loginAuthID = sessionStorage.getItem('id_token'); // console.log(loginAuthID)\n//config for s3\n\nvar config = {\n  bucketName: 'ilovenagar',\n  dirName: 'ilovenagar',\n\n  /* optional */\n  region: 'ap-south-1',\n  accessKeyId: 'AKIARS26YOAJD4KZJDNK',\n  secretAccessKey: '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'\n};\nvar columns = [{\n  id: 'index',\n  label: 'Sr. No.',\n  minWidth: 80\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 100,\n  align: 'right'\n}, {\n  id: 'size',\n  label: 'Mobile Number',\n  minWidth: 100,\n  align: 'right'\n}, {\n  id: 'email',\n  label: 'Email',\n  minWidth: 100,\n  align: 'right',\n  format: function format(value) {\n    return value.toFixed(2);\n  }\n}, {\n  id: 'user',\n  label: 'User Type',\n  minWidth: 100\n}, {\n  id: 'photo',\n  label: 'Photo',\n  minWidth: 100\n}, {\n  id: 'dbb',\n  label: 'Date Of Birth',\n  minWidth: 140\n}, {\n  id: 'doj',\n  label: 'Date Of Joining',\n  minWidth: 140\n}, {\n  id: 'ei',\n  label: 'Employe Id',\n  minWidth: 140\n}, {\n  id: 'dp',\n  label: 'Departmente',\n  minWidth: 100\n}, {\n  id: 'ds',\n  label: 'Designation',\n  minWidth: 100\n}, {\n  id: 'rm',\n  label: 'Reporting Manager',\n  minWidth: 100\n}, {\n  id: 'an',\n  label: 'Adhar Number',\n  minWidth: 100\n}, {\n  id: 'pn',\n  label: 'Pan Number',\n  minWidth: 100\n}, {\n  id: 'bs',\n  label: 'Bank A/C Number',\n  minWidth: 180\n}, {\n  id: 'bn',\n  label: 'Bank Name',\n  minWidth: 100\n}, {\n  id: 'ic',\n  label: 'IFSC Code',\n  minWidth: 100\n}, {\n  id: 'org',\n  label: 'Organization',\n  minWidth: 100\n}, {\n  id: 'satus',\n  label: 'Status',\n  minWidth: 100\n}, {\n  id: 'action',\n  label: 'Action',\n  minWidth: 100\n}];\nvar useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  },\n  closebutton: {\n    borderRadius: \"50% !important\",\n    backgroundColor: \"red !important\",\n    padding: \"2px\",\n    position: \"absolute\",\n    right: \"-10px\",\n    height: \"20px\",\n    width: \"20px\",\n    top: \"-10px\"\n  }\n}); // var dummyobject = Array;\n\nvar MasterForm = function MasterForm(props) {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: props ? props && props.preloadValue && props.preloadValue.detail : \"\"\n  }),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      reset = _useForm.reset,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userdetail = _useState4[0],\n      setUserDetail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      department = _useState6[0],\n      setDepartment = _useState6[1];\n\n  var classes = useStyles();\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      designation = _useState8[0],\n      setDesignation = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      organization = _useState10[0],\n      setOrganization = _useState10[1];\n\n  var _useState11 = useState(props && props.preloadValue && props.preloadValue.detail.photo),\n      _useState12 = _slicedToArray(_useState11, 2),\n      updatedImage = _useState12[0],\n      setUpdatedImage = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      bucketimage = _useState14[0],\n      setImage = _useState14[1];\n\n  var _useState15 = useState(props && props.preloadValue && props.preloadValue.detail.organization),\n      _useState16 = _slicedToArray(_useState15, 2),\n      stuff = _useState16[0],\n      setStuff = _useState16[1];\n\n  var dispatch = useDispatch();\n\n  var uploadImage = function uploadImage(e) {\n    console.log(e.target.files[0]);\n    uploadFile(e.target.files[0], config).then(function (data) {\n      setImage(data);\n      setValue(\"photo\", data.location);\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n\n  var userdetailapi = 'http://172.105.49.15:3030/api/user/get_user_list';\n  useEffect(function () {\n    axios.get(userdetailapi).then(function (r) {\n      console.log(r);\n      setUserDetail(r);\n    });\n  }, [setUserDetail]);\n  console.log(department);\n  var departmentmaster = 'http://172.105.49.15:3030/api/master/get_department_list';\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(departmentmaster).then(function (r) {\n              return setDepartment(r);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [departmentmaster]);\n  var designations = 'http://172.105.49.15:3030/api/master/get_designation_list';\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(designations).then(function (r) {\n              return setDesignation(r);\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [designations]);\n  var organizations = 'http://172.105.49.15:3030/api/master/list_organization';\n  useEffect(function () {\n    axios.get(organizations).then(function (r) {\n      return setOrganization(r);\n    });\n  }, [organizations]); //handlesubmit\n\n  var onSubmit = function onSubmit(data, e) {\n    e.preventDefault();\n    console.log(data.photo);\n\n    if (props && props.preloadValue) {\n      dispatch(handleMasterUpdate(data, props));\n    } else {\n      dispatch(handleMaster(data, props));\n    }\n  }; ///set the date for update \n\n\n  useEffect(function () {\n    // console.log(props && props.preloadValue && props.preloadValue.detail.photo)\n    setValue(\"date_of_birth\", moment(props && props.preloadValue && props.preloadValue.detail.date_of_birth).format(\"YYYY-MM-DD\"));\n    setValue(\"date_of_joining\", moment(props && props.preloadValue && props.preloadValue.detail.date_of_joining).format(\"YYYY-MM-DD\"));\n    setValue(\"status\", props && props.preloadValue && props.preloadValue.detail.status === 0 ? 0 : 1);\n    setValue(\"photo\", props && props.preloadValue && props.preloadValue.detail.photo);\n  }, [setValue]);\n\n  var changeValue = function changeValue(selected) {\n    // console.log(stuff)\n    console.log(selected);\n    setValue(\"organization_id\", selected);\n  };\n\n  var handleChange = function handleChange(selected) {\n    console.log(selected);\n    setValue(selected); // console.log(stuff)\n  };\n\n  console.log(props);\n  var options = props && props.preloadValue && props.preloadValue.detail.organization.map(function (values, index) {\n    return {\n      value: values._id,\n      label: values.location_name\n    };\n  });\n  console.log(options);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"auth-login-form mt-2\",\n      onSubmit: handleSubmit(function (data, e) {\n        return onSubmit(data, e);\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              name: \"name\",\n              className: classnames({\n                'is-invalid': errors['name']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your full name\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, _this), errors.name && errors.name.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"full name is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 70\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              id: \"login_email\",\n              name: \"email_id\",\n              onChange: function onChange(e) {\n                return setEmail(e.target.value);\n              },\n              className: classnames({\n                'is-invalid': errors['email_id']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your mail id\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, _this), errors.email_id && errors.email_id.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Mail id is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 74\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-label\",\n                for: \"login-password\",\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"mobile\",\n              maxLength: \"10\",\n              name: \"mobile_number\",\n              className: classnames({\n                'is-invalid': errors['mobile_number']\n              }),\n              innerRef: register({\n                required: true,\n                pattern: {\n                  value: /[1-9]{1}[0-9]{9}/,\n                  message: \"Enter your 10 digit mobile number\"\n                },\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your mobile\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, _this), errors.mobile_number && errors.mobile_number.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Mobile number is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 86\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"exampleText\",\n              children: \"User Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"type\",\n              className: classnames({\n                'is-invalid': errors['type']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              id: \"exampleSelect\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Staff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 9\n            }, _this), errors.type && errors.type.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Type is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 60\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Date Of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              name: \"date_of_birth\",\n              className: classnames({\n                'is-invalid': errors['date_of_birth']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, _this), errors.date_of_birth && errors.date_of_birth.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Date of birth id is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 84\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Date Of Joining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              id: \"code\",\n              name: \"date_of_joining\",\n              className: classnames({\n                'is-invalid': errors['date_of_joining']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }) // defaultValue={moment(props && props.preloadValue && props.preloadValue.detail.date_of_joining).format(\"YYYY-MM-DD\")}\n              ,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, _this), errors.date_of_joining && errors.date_of_joining.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Date of joining is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 88\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Employee Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"employee_id\",\n              className: classnames({\n                'is-invalid': errors['employee_id']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your employe id\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, _this), errors.employee_id && errors.employee_id.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Employe id is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 80\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"exampleText\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"department_id\",\n              className: classnames({\n                'is-invalid': errors['department_id']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              id: \"exampleSelect\",\n              children: department && department.data && department.data.data && department.data.data.map(function (depart, index) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: depart._id,\n                  children: depart.department_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 13\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 9\n            }, _this), errors.department_id && errors.department_id.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"department id is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 78\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"exampleText\",\n              children: \"Designation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"designation_id\",\n              className: classnames({\n                'is-invalid': errors['designation_id']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              id: \"exampleSelect\",\n              children: designation && designation.data && designation.data.data && designation.data.data.map(function (countries, index) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: countries._id,\n                  children: countries.designation_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 13\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 9\n            }, _this), errors.designation_id && errors.designation_id.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"designation id is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 80\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"exampleText\",\n              children: \"Organization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"organization_id\",\n              render: function render(_ref3) {\n                var field = _ref3.field;\n                return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, field), {}, {\n                  isMulti: true // value={{label:props && props.preloadValue && props.preloadValue.detail.organization_name}}\n                  ,\n                  options: organization && organization.data && organization.data.data && organization.data.data.map(function (org, index) {\n                    return {\n                      value: org._id,\n                      label: org.location_name\n                    };\n                  }),\n                  onChange: changeValue // {console.log()}\n                  ,\n                  defaultValue: options\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 11\n                }, _this);\n              },\n              control: control\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 9\n            }, _this), errors.a && errors.a.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"organization id is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 52\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Reporting Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"reporting_manager_id\",\n              className: classnames({\n                'is-invalid': errors['reporting_manager_id']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your reporting manager id\",\n              autoFocus: true,\n              children: userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.map(function (detail, index) {\n                // console.log(detail)\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: detail._id,\n                  children: detail.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 23\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, _this), errors.reporting_manager_id && errors.reporting_manager_id.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"reporting manager is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 98\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }, _this), bucketimage && bucketimage.location || updatedImage ? /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            close: true,\n            className: classes.closebutton,\n            onClick: function onClick() {\n              setImage(\"\");\n              setUpdatedImage(\"\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 19\n          }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: bucketimage && bucketimage.location || props && props.preloadValue && props.preloadValue.detail && props.preloadValue.detail.photo,\n            width: \"80px\",\n            height: \"80px\",\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 74\n        }, _this) : /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Feed Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              type: \"file\",\n              id: \"exampleCustomFileBrowser\",\n              name: \"photo\",\n              onChange: function onChange(e) {\n                return uploadImage(e);\n              },\n              className: classnames({\n                'is-invalid': errors['photo']\n              }),\n              innerRef: register(\"photo\", {\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, _this), errors.photo && errors.photo.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"logo is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 70\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 42\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 30\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Aadhar Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"adhar_no\",\n              className: classnames({\n                'is-invalid': errors['adhar_no']\n              }),\n              innerRef: register({\n                required: true,\n                pattern: {\n                  value: /^\\d{12}$/,\n                  message: \"Enter your adhar number properly\"\n                },\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your adhar number\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, _this), errors.adhar_no && errors.adhar_no.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"adhar no. is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 74\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"PAN Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              name: \"pan_no\",\n              className: classnames({\n                'is-invalid': errors['pan_no']\n              }),\n              innerRef: register({\n                required: true,\n                pattern: {\n                  value: /[A-Z]{5}[0-9]{4}[A-Z]{1}$/,\n                  message: \"Enter your adhar number properly\"\n                },\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your pan number\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, _this), errors.pan_no && errors.pan_no.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"pan no. is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 73\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Bank A/C Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"bank_account_no\",\n              className: classnames({\n                'is-invalid': errors['bank_account_no']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your a/c number\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, _this), errors.bank_account_no && errors.bank_account_no.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"bank a/c number is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 91\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"Bank Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              name: \"bank_name\",\n              className: classnames({\n                'is-invalid': errors['bank_name']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your bank name\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, _this), errors.bank_name && errors.bank_name.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"bank name is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 79\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"login-email\",\n              children: \"IFSC Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              name: \"ifsc_code\",\n              className: classnames({\n                'is-invalid': errors['ifsc_code']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              placeholder: \"Enter your ifsc code\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, _this), errors.ifsc_code && errors.ifsc_code.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Ifsc is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 79\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"exampleText\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"status\",\n              className: classnames({\n                'is-invalid': errors['status']\n              }),\n              innerRef: register({\n                required: true,\n                validate: function validate(value) {\n                  return value !== '';\n                }\n              }),\n              id: \"exampleSelect\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"1\",\n                value: 1,\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"Deactive\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 9\n            }, _this), errors.status && errors.status.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"status is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 64\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, _this), props.preloadValue ? /*#__PURE__*/_jsxDEV(Button.Ripple, {\n        className: \"ripple-button btn-theam\",\n        type: \"submit\",\n        size: \"sm\",\n        style: {\n          float: \"right\"\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 41\n      }, _this) : /*#__PURE__*/_jsxDEV(Button.Ripple, {\n        className: \"ripple-button btn-theam\",\n        type: \"submit\",\n        size: \"sm\",\n        style: {\n          float: \"right\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 36\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 3\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(MasterForm, \"hR+0ap89Uxc/uc34q+rvxVZFzW0=\", false, function () {\n  return [useForm, useStyles, useDispatch];\n});\n\n_c = MasterForm;\n\nvar Master = function Master(props) {\n  _s2();\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      addform = _useState18[0],\n      setAddForm = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      updateuser = _useState20[0],\n      setUpdateuser = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      addbutton = _useState22[0],\n      setAddButton = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      userdetail = _useState24[0],\n      setUserDetail = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      user = _useState26[0],\n      setUser = _useState26[1];\n\n  var _useState27 = useState(props.location.state),\n      _useState28 = _slicedToArray(_useState27, 2),\n      locationhistory = _useState28[0],\n      setLocationhistory = _useState28[1];\n\n  var classes = useStyles();\n\n  var _useState29 = useState(0),\n      _useState30 = _slicedToArray(_useState29, 2),\n      page = _useState30[0],\n      setPage = _useState30[1];\n\n  var _useState31 = useState(10),\n      _useState32 = _slicedToArray(_useState31, 2),\n      rowsPerPage = _useState32[0],\n      setRowsPerPage = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      searching = _useState34[0],\n      setSearchStream = _useState34[1]; // console.log(userdetail)\n\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }; ///search table data\n\n\n  var searchChange = function searchChange(e) {\n    e.preventDefault();\n    var searchstream = e.target.value; //  setSearchStream(searchstream)\n    //  const searchString = searching\n\n    if (searchstream.length > 3) {\n      var newstring = new RegExp(searchstream);\n      var searchitem = userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.filter(function (item) {\n        //  console.log(item.name, searchstream, item.name.match(newstring))\n        return item.name.match(newstring) || item.mobile_number.match(newstring) || item.type.match(newstring) || item.email_id.match(newstring);\n      });\n      console.log(searchitem);\n      setUserDetail({\n        data: {\n          data: searchitem\n        }\n      });\n    } else {\n      setUserDetail(user);\n    }\n  };\n\n  var onAddClick = function onAddClick() {\n    setAddForm(true);\n    setAddButton(true);\n    setUpdateuser(false);\n  };\n\n  var onCancleClick = function onCancleClick() {\n    setAddForm(false);\n    setAddButton(false);\n  };\n\n  var onEditClick = function onEditClick(detail, props) {\n    props.history.push({\n      state: {\n        detail: detail\n      }\n    });\n    setUpdateuser(true);\n    setAddForm(false);\n  };\n\n  useEffect(function () {}, [props]);\n  var userdetailapi = 'http://172.105.49.15:3030/api/user/get_user_list';\n  useEffect(function () {\n    axios.get(userdetailapi).then(function (r) {\n      // console.log(r)\n      setUser(r);\n      setUserDetail(r);\n    });\n  }, [addform, updateuser]); //  console.log(locationhistory)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper auth-v1 px-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner py-2\",\n      children: [addform === true ? /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-0\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h4\",\n            className: \"mb-1\",\n            children: \"User Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MasterForm, {\n            onAdd: function onAdd() {\n              setAddForm(false);\n            },\n            onMasterSave: function onMasterSave() {\n              return setAddButton(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 12\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 32\n      }, _this) : \" \", updateuser === true ? /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-0\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h4\",\n            className: \"mb-1\",\n            children: \"User Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MasterForm, {\n            preloadValue: props && props.location && props.location.state,\n            onAdd: function onAdd() {\n              setUpdateuser(false);\n            },\n            onMasterSave: function onMasterSave() {\n              return setAddButton(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 34\n      }, _this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-0\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  margin: '10px'\n                },\n                className: \"mb-1\",\n                children: \"User List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                style: {\n                  float: \"right\",\n                  marginTop: \"10px\"\n                },\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"search\",\n                  onChange: function onChange(e) {\n                    searchChange(e);\n                  },\n                  id: \"code\",\n                  name: \"image\" //   className={classnames({ 'is-invalid': errors['image'] })}\n                  //   innerRef={register({ required: true, validate: value => value !== '' })}\n                  ,\n                  placeholder: \"search...\",\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 17\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 13\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: addbutton === false ? /*#__PURE__*/_jsxDEV(Button.Ripple, {\n                className: \"ripple-button btn-theam\",\n                type: \"submit\",\n                size: \"sm\",\n                onClick: onAddClick,\n                style: {\n                  margin: '10px',\n                  float: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-plus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 11\n                }, _this), \" Add User\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 40\n              }, _this) : /*#__PURE__*/_jsxDEV(Button.Ripple, {\n                className: \"ripple-button btn-theam\",\n                type: \"submit\",\n                size: \"sm\",\n                onClick: onCancleClick,\n                style: {\n                  margin: '10px',\n                  float: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-minus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 11\n                }, _this), \" Add User\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 34\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              stickyHeader: true,\n              size: \"small\",\n              \"aria-label\": \"a dense table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: columns.map(function (column) {\n                    return /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: column.align,\n                      style: {\n                        minWidth: column.minWidth\n                      },\n                      children: column.label\n                    }, column.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 697,\n                      columnNumber: 17\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 13\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (detail, index) {\n                  // console.log(detail)\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    role: \"checkbox\",\n                    tabIndex: -1,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 715,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.mobile_number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 718,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.email_id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 724,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 727,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.photo === 'photo' ? '' : /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: detail.photo,\n                        width: \"50px\",\n                        height: \"50px\",\n                        alt: \"img\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 731,\n                        columnNumber: 59\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: moment(detail.date_of_birth).format(\"DD-MM-YYYY\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: moment(detail.date_of_joining).format(\"DD-MM-YYYY\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 736,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.employee_id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.department_id && detail.department_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 742,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.designation_id && detail.designation_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 745,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.reporting_manager_id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 748,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.adhar_no\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 751,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.pan_no\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 754,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.bank_account_no\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 757,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.bank_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 760,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.ifsc_code\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.organization_name.map(function (organizations, index) {\n                        return /*#__PURE__*/_jsxDEV(\"p\", {\n                          style: {\n                            display: \"inline\"\n                          },\n                          children: [organizations, \",\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 768,\n                          columnNumber: 33\n                        }, _this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 766,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: detail.status === true ? /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: true,\n                        color: \"primary\",\n                        name: \"checkedB\",\n                        inputProps: {\n                          'aria-label': 'primary checkbox'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 772,\n                        columnNumber: 50\n                      }, _this) : /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: false,\n                        name: \"checkedA\",\n                        inputProps: {\n                          'aria-label': 'secondary checkbox'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 777,\n                        columnNumber: 12\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 771,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n                        className: \"btn-icon btn-sm rounded-circle\",\n                        color: \"flat-success\",\n                        onClick: function onClick() {\n                          return onEditClick(detail, props);\n                        },\n                        outline: true,\n                        id: \"positionTop_\".concat(index + 1),\n                        children: /*#__PURE__*/_jsxDEV(Edit2, {\n                          size: 16\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 785,\n                          columnNumber: 9\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 784,\n                        columnNumber: 23\n                      }, _this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n                        placement: \"top\",\n                        target: \"positionTop_\".concat(index + 1),\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 787,\n                        columnNumber: 7\n                      }, _this)]\n                    }, detail._v, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 783,\n                      columnNumber: 23\n                    }, _this)]\n                  }, detail.code, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 17\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [10, 20, 30],\n            component: \"div\",\n            count: userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onPageChange: handleChangePage,\n            onRowsPerPageChange: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 599,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(Master, \"2PWyOKn1oWieFALRNZGU1PmFnhI=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Master;\nexport default Master;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MasterForm\");\n$RefreshReg$(_c2, \"Master\");","map":{"version":3,"sources":["D:/nodejs/star/erpfrontend/src/views/pages/authentication/Master.js"],"names":["React","useState","useContext","Fragment","useEffect","createBrowserHistory","Link","Facebook","Twitter","Mail","GitHub","Edit2","InputPasswordToggle","Col","Row","Card","CardBody","CardTitle","CardText","Form","FormGroup","Label","Input","CustomInput","Button","UncontrolledTooltip","moment","require","useForm","Controller","Switch","classnames","Select","useDispatch","handleMaster","handleMasterUpdate","forIdToken","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","uploadFile","loginAuthID","sessionStorage","getItem","config","bucketName","dirName","region","accessKeyId","secretAccessKey","columns","id","label","minWidth","align","format","value","toFixed","useStyles","root","width","container","maxHeight","closebutton","borderRadius","backgroundColor","padding","position","right","height","top","MasterForm","props","defaultValues","preloadValue","detail","register","errors","reset","setValue","handleSubmit","control","email","setEmail","userdetail","setUserDetail","department","setDepartment","classes","designation","setDesignation","organization","setOrganization","photo","updatedImage","setUpdatedImage","bucketimage","setImage","stuff","setStuff","dispatch","uploadImage","e","console","log","target","files","then","data","location","catch","err","error","userdetailapi","get","r","departmentmaster","designations","organizations","onSubmit","preventDefault","date_of_birth","date_of_joining","status","changeValue","selected","handleChange","options","map","values","index","_id","location_name","required","validate","name","type","color","email_id","pattern","message","mobile_number","employee_id","depart","department_name","department_id","countries","designation_name","designation_id","field","org","a","reporting_manager_id","adhar_no","pan_no","bank_account_no","bank_name","ifsc_code","float","Master","addform","setAddForm","updateuser","setUpdateuser","addbutton","setAddButton","user","setUser","state","locationhistory","setLocationhistory","page","setPage","rowsPerPage","setRowsPerPage","searching","setSearchStream","handleChangePage","event","newPage","handleChangeRowsPerPage","searchChange","searchstream","length","newstring","RegExp","searchitem","filter","item","match","onAddClick","onCancleClick","onEditClick","history","push","margin","marginTop","column","slice","organization_name","display","_v","code"],"mappings":"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","sourcesContent":["import {React, useState, useContext, Fragment, useEffect } from 'react'\r\nimport { createBrowserHistory } from 'history'\r\nimport { Link } from 'react-router-dom'\r\nimport { Facebook, Twitter, Mail, GitHub, Edit2 } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport {Col, Row, Card, CardBody, CardTitle, CardText, Form, FormGroup, Label, Input, CustomInput, Button, UncontrolledTooltip } from 'reactstrap'\r\nconst moment = require('moment')\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport classnames from 'classnames'\r\nimport Select from 'react-select'\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleMaster, handleMasterUpdate } from '@store/actions/masteruser'\r\nimport {  forIdToken } from '@store/actions/auth'\r\nimport axios from 'axios'\r\nimport '@styles/base/pages/page-auth.scss'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { uploadFile } from 'react-s3'\r\n\r\nconst loginAuthID = sessionStorage.getItem('id_token')\r\n// console.log(loginAuthID)\r\n//config for s3\r\nconst config = {\r\n  bucketName: 'ilovenagar',\r\n  dirName: 'ilovenagar', /* optional */\r\n  region: 'ap-south-1',\r\n  accessKeyId: 'AKIARS26YOAJD4KZJDNK',\r\n  secretAccessKey: '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'\r\n}\r\nconst columns = [\r\n  { id: 'index', label: 'Sr. No.', minWidth: 80 },\r\n  {\r\n    id: 'name',\r\n    label: 'Name',\r\n    minWidth: 100,\r\n    align: 'right'\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Mobile Number',\r\n    minWidth: 100,\r\n    align: 'right'\r\n  },\r\n  {\r\n    id: 'email',\r\n    label: 'Email',\r\n    minWidth: 100,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2)\r\n  },\r\n  { id: 'user', label: 'User Type', minWidth: 100 },\r\n  { id: 'photo', label: 'Photo', minWidth: 100 },\r\n  { id: 'dbb', label: 'Date Of Birth', minWidth: 140 },\r\n  { id: 'doj', label: 'Date Of Joining', minWidth: 140 },\r\n  { id: 'ei', label: 'Employe Id', minWidth: 140 },\r\n  { id: 'dp', label: 'Departmente', minWidth: 100 },\r\n  { id: 'ds', label: 'Designation', minWidth: 100 },\r\n  { id: 'rm', label: 'Reporting Manager', minWidth: 100 },\r\n  { id: 'an', label: 'Adhar Number', minWidth: 100 },\r\n  { id: 'pn', label: 'Pan Number', minWidth: 100 },\r\n  { id: 'bs', label: 'Bank A/C Number', minWidth: 180 },\r\n  { id: 'bn', label: 'Bank Name', minWidth: 100 },\r\n  { id: 'ic', label: 'IFSC Code', minWidth: 100 },\r\n  { id: 'org', label: 'Organization', minWidth: 100 },\r\n  { id: 'satus', label: 'Status', minWidth: 100 },\r\n  { id: 'action', label: 'Action', minWidth: 100 }\r\n]\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  container: {\r\n    maxHeight: 440\r\n  },\r\n  closebutton: {\r\n    borderRadius: \"50% !important\",\r\n    backgroundColor: \"red !important\",\r\n    padding: \"2px\",\r\n    position: \"absolute\",\r\n    right: \"-10px\",\r\n    height: \"20px\",\r\n    width: \"20px\",\r\n    top: \"-10px\"\r\n  }\r\n})\r\n// var dummyobject = Array;\r\nconst MasterForm = (props) => {\r\n    const { register, errors, reset, setValue, handleSubmit, control } = useForm({defaultValues: props ? props && props.preloadValue && props.preloadValue.detail : \"\"})\r\n    const [email, setEmail] = useState('')\r\n    const [userdetail, setUserDetail] = useState([])\r\n    const [department, setDepartment] = useState('')\r\n    const classes = useStyles()\r\n    const [designation, setDesignation] = useState('')\r\n    const [organization, setOrganization] = useState('')\r\n    const [updatedImage, setUpdatedImage] = useState(props && props.preloadValue && props.preloadValue.detail.photo)\r\n    const [bucketimage, setImage] = useState()\r\n    const [stuff, setStuff] = useState(props && props.preloadValue && props.preloadValue.detail.organization)\r\n    const dispatch = useDispatch()\r\n\r\n    const uploadImage = (e) => {\r\n      console.log(e.target.files[0])\r\n      uploadFile(e.target.files[0], config)\r\n    .then(data => {\r\n      setImage(data)\r\n      setValue(\"photo\", data.location)\r\n    })\r\n    .catch(err => console.error(err))\r\n    }\r\n\r\n    const userdetailapi = 'http://172.105.49.15:3030/api/user/get_user_list'\r\n    useEffect(() => {\r\n      axios.get(userdetailapi)\r\n      .then(r => {\r\n        console.log(r)\r\n        setUserDetail(r)\r\n      })\r\n    }, [setUserDetail])\r\n\r\n console.log(department)\r\n    const departmentmaster = 'http://172.105.49.15:3030/api/master/get_department_list'\r\n    useEffect(async() => {\r\n     await axios.get(departmentmaster)\r\n      .then(r => setDepartment(r))\r\n\r\n    }, [departmentmaster])\r\n    const designations = 'http://172.105.49.15:3030/api/master/get_designation_list'\r\n    useEffect(async() => {\r\n     await axios.get(designations)\r\n      .then(r => setDesignation(r))\r\n    }, [designations])\r\n        const organizations = 'http://172.105.49.15:3030/api/master/list_organization'\r\n    useEffect(() => {\r\n      axios.get(organizations)\r\n      .then(r => setOrganization(r))\r\n    }, [organizations])\r\n\r\n    //handlesubmit\r\n    const onSubmit = (data, e) => {\r\n      e.preventDefault()\r\n      console.log(data.photo)\r\n        if (props && props.preloadValue) { \r\n          dispatch(handleMasterUpdate(data, props))\r\n        } else {\r\n          dispatch(handleMaster(data, props))\r\n        }\r\n      }\r\n\r\n///set the date for update \r\n      useEffect(() => {\r\n        // console.log(props && props.preloadValue && props.preloadValue.detail.photo)\r\n        setValue(\"date_of_birth\", moment(props && props.preloadValue && props.preloadValue.detail.date_of_birth).format(\"YYYY-MM-DD\"))\r\n        setValue(\"date_of_joining\", moment(props && props.preloadValue && props.preloadValue.detail.date_of_joining).format(\"YYYY-MM-DD\"))\r\n        setValue(\"status\", props && props.preloadValue && props.preloadValue.detail.status === 0 ? 0 : 1)\r\n        setValue(\"photo\", props && props.preloadValue && props.preloadValue.detail.photo)\r\n      }, [setValue])\r\n      \r\n      const changeValue = (selected) => {\r\n        // console.log(stuff)\r\n      console.log(selected)\r\n      setValue(\"organization_id\", selected)\r\n      }\r\n\r\n      const handleChange = selected => {\r\n        console.log(selected)\r\n        setValue(selected)\r\n        // console.log(stuff)\r\n      }\r\n    console.log(props)\r\n    const options = props && props.preloadValue && props.preloadValue.detail.organization.map((values, index) => {\r\n      return {value:values._id, label : values.location_name}\r\n        })\r\n\r\nconsole.log(options)\r\nreturn (\r\n  <div>\r\n  <Form className='auth-login-form mt-2' onSubmit={handleSubmit((data, e) => onSubmit(data, e))}>\r\n            <Row>\r\n\r\n            <Col md={3}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 Name\r\n                </Label>\r\n                <Input type='name' \r\n                name=\"name\"\r\n                  className={classnames({ 'is-invalid': errors['name'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your full name' autoFocus />\r\n                  {errors.name && errors.name.type === 'required' && <p style={{color:\"red\"}}>full name is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                  Email\r\n                </Label>\r\n                <Input\r\n                 type='email'\r\n                 id='login_email'\r\n                 name='email_id'\r\n                 onChange={e => setEmail(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['email_id'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                placeholder='Enter your mail id'\r\n                 autoFocus />\r\n              {errors.email_id && errors.email_id.type === 'required' && <p style={{color:\"red\"}}>Mail id is required</p>}\r\n              </FormGroup>\r\n\r\n              </Col>\r\n              <Col md={3}>\r\n              <FormGroup>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Mobile Number\r\n                  </Label>\r\n                </div>\r\n                <Input type='text'\r\n                 id='mobile'\r\n                 maxLength=\"10\"\r\n                 name=\"mobile_number\"\r\n                 className={classnames({ 'is-invalid': errors['mobile_number'] })}\r\n                 innerRef={register({ \r\n                  required: true,\r\n                  pattern:{value:/[1-9]{1}[0-9]{9}/,\r\n                  message:\"Enter your 10 digit mobile number\"},\r\n                   validate: value => value !== '' })}\r\n                 placeholder='Enter your mobile' autoFocus />\r\n                {/* <InputPasswordToggle className='input-group-merge' id='login-password' /> */}\r\n                {errors.mobile_number && errors.mobile_number.type === 'required' && <p style={{color:\"red\"}}>Mobile number is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              {/* <Col md={3}>\r\n              <FormGroup>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                </div>\r\n                <Input type='text'\r\n                 id='password'\r\n                 name=\"password\"\r\n                 className={classnames({ 'is-invalid': errors['password'] })}\r\n                 innerRef={register({ \r\n                  required: true,\r\n                   validate: value => value !== '' })}\r\n                 placeholder='Enter your password' autoFocus />\r\n              </FormGroup>\r\n              </Col> */}\r\n              <Col md={3}>\r\n              <FormGroup>\r\n        <Label for=\"exampleText\" >User Type</Label>\r\n        <Input type=\"select\" name=\"type\" \r\n             className={classnames({ 'is-invalid': errors['type'] })}\r\n             innerRef={register({ required: true, validate: value => value !== '' })}\r\n        id=\"exampleSelect\">\r\n          <option>Staff</option>\r\n          <option>Admin</option>\r\n        </Input>\r\n        {errors.type && errors.type.type === 'required' && <p style={{color:\"red\"}}>Type is required</p>}\r\n      </FormGroup>\r\n      </Col>\r\n\r\n      <Col md={3}>\r\n      <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n             Date Of Birth\r\n                </Label>\r\n                <Input type='date'\r\n                name=\"date_of_birth\"\r\n                  className={classnames({ 'is-invalid': errors['date_of_birth'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  autoFocus />\r\n              {errors.date_of_birth && errors.date_of_birth.type === 'required' && <p style={{color:\"red\"}}>Date of birth id is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n             Date Of Joining\r\n                </Label>\r\n                <Input type='date' id='code'\r\n                name=\"date_of_joining\"\r\n                  className={classnames({ 'is-invalid': errors['date_of_joining'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                  // defaultValue={moment(props && props.preloadValue && props.preloadValue.detail.date_of_joining).format(\"YYYY-MM-DD\")}\r\n                  autoFocus />\r\n              {errors.date_of_joining && errors.date_of_joining.type === 'required' && <p style={{color:\"red\"}}>Date of joining is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 Employee Id\r\n                </Label>\r\n                <Input type='number' \r\n                name=\"employee_id\"\r\n                  className={classnames({ 'is-invalid': errors['employee_id'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your employe id' autoFocus />\r\n              {errors.employee_id && errors.employee_id.type === 'required' && <p style={{color:\"red\"}}>Employe id is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n              <FormGroup>\r\n        <Label for=\"exampleText\" >Department</Label>\r\n        <Input type=\"select\" name=\"department_id\"\r\n                 className={classnames({ 'is-invalid': errors['department_id'] })}\r\n                 innerRef={register({ required: true, validate: value => value !== '' })}\r\n        id=\"exampleSelect\">\r\n         {department && department.data && department.data.data && department.data.data.map((depart, index) => {\r\n           return (\r\n            <option value={depart._id}>{depart.department_name}</option>\r\n           )\r\n         })} \r\n        </Input>\r\n        {errors.department_id && errors.department_id.type === 'required' && <p style={{color:\"red\"}}>department id is required</p>}\r\n      </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n              <FormGroup>\r\n        <Label for=\"exampleText\" >Designation</Label>\r\n        <Input type=\"select\" name=\"designation_id\"\r\n                 className={classnames({ 'is-invalid': errors['designation_id'] })}\r\n                 innerRef={register({ required: true, validate: value => value !== '' })}\r\n        id=\"exampleSelect\">\r\n         {designation && designation.data && designation.data.data && designation.data.data.map((countries, index) => {\r\n           return (\r\n            <option value={countries._id}>{countries.designation_name}</option>\r\n           )\r\n         })} \r\n        </Input>\r\n        {errors.designation_id && errors.designation_id.type === 'required' && <p style={{color:\"red\"}}>designation id is required</p>}\r\n      </FormGroup>\r\n        </Col>\r\n              {/* <Col md={3}>\r\n      <FormGroup>\r\n        <Label id=\"demo-mutiple-chip-label\">Attendies</Label>\r\n        <Select \r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              defaultValue={[]}\r\n              isMulti\r\n              options={options} />\r\n        </FormGroup>\r\n      </Col> */}\r\n          <Col md={3}>\r\n              <FormGroup>\r\n        <Label for=\"exampleText\" >Organization</Label>\r\n        <Controller\r\n        name=\"organization_id\"\r\n        render={({ field }) => (\r\n          <Select\r\n            {...field}\r\n            isMulti\r\n            // value={{label:props && props.preloadValue && props.preloadValue.detail.organization_name}}\r\n            options={organization && organization.data && organization.data.data && organization.data.data.map((org, index) => {\r\n              return  { value : org._id, label : org.location_name }\r\n            })}\r\n            onChange = {changeValue}\r\n            // {console.log()}\r\n            defaultValue={options}\r\n          />\r\n        )}\r\n        control={control}\r\n      />\r\n      {errors.a && errors.a.type === 'required' && <p style={{color:\"red\"}}>organization id is required</p>}\r\n         {/* {organization && organization.data && organization.data.data && organization.data.data.map((org, index) => {\r\n           return (\r\n            <option value={org._id}>{org.location_name}</option>\r\n           )\r\n         })}  */}\r\n        {/* </Input> */}\r\n      </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 Reporting Manager\r\n                </Label>\r\n                <Input type='select' \r\n                name=\"reporting_manager_id\"\r\n                  className={classnames({ 'is-invalid': errors['reporting_manager_id'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your reporting manager id' autoFocus >\r\n                             {userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.map((detail, index) => {\r\n              // console.log(detail)\r\n              return (<option value={detail._id}>{detail.name}</option>) \r\n            }\r\n              )}\r\n              </Input>\r\n              {errors.reporting_manager_id && errors.reporting_manager_id.type === 'required' && <p style={{color:\"red\"}}>reporting manager is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              {(bucketimage && bucketimage.location) || (updatedImage) ? <Col md={1}>       \r\n                  <Button close className={classes.closebutton} onClick={() => {\r\n                     setImage(\"\")\r\n                     setUpdatedImage(\"\")\r\n                  }}/>\r\n                <img src={(bucketimage && bucketimage.location) || (props && props.preloadValue && props.preloadValue.detail && props.preloadValue.detail.photo)} width=\"80px\" height=\"80px\" alt=\"img\"/> \r\n                </Col> :     <Col md={3}><FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                Feed Logo\r\n                </Label>\r\n                <CustomInput type=\"file\"\r\n                 id=\"exampleCustomFileBrowser\"\r\n                 name=\"photo\"\r\n                 onChange={(e) => uploadImage(e)}\r\n                 className={classnames({ 'is-invalid': errors['photo'] })}\r\n                 innerRef={register(\"photo\", {required: true, validate: value => value !== '' })}\r\n                />\r\n                {errors.photo && errors.photo.type === 'required' && <p style={{color:\"red\"}}>logo is required</p>}\r\n              </FormGroup>\r\n              </Col> \r\n               }\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 Aadhar Number\r\n                </Label>\r\n                <Input type='number' \r\n                name=\"adhar_no\"\r\n                  className={classnames({ 'is-invalid': errors['adhar_no'] })}\r\n                  innerRef={register({ required: true,\r\n                    pattern:{value:/^\\d{12}$/,\r\n                  message:\"Enter your adhar number properly\"},\r\n                    validate: value => value !== '' })}\r\n                 placeholder='Enter your adhar number' autoFocus />\r\n              {errors.adhar_no && errors.adhar_no.type === 'required' && <p style={{color:\"red\"}}>adhar no. is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 PAN Number\r\n                </Label>\r\n                <Input type='name' \r\n                name=\"pan_no\"\r\n                  className={classnames({ 'is-invalid': errors['pan_no'] })}\r\n                  innerRef={register({ required: true,\r\n                    pattern:{value:/[A-Z]{5}[0-9]{4}[A-Z]{1}$/,\r\n                    message:\"Enter your adhar number properly\"},\r\n                    validate: value => value !== '' })}\r\n                  \r\n                 placeholder='Enter your pan number' autoFocus />\r\n                 {errors.pan_no && errors.pan_no.type === 'required' && <p style={{color:\"red\"}}>pan no. is required</p>}\r\n              </FormGroup>     \r\n              </Col>\r\n\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 Bank A/C Number\r\n                </Label>\r\n                <Input type='number' \r\n                name=\"bank_account_no\"\r\n                  className={classnames({ 'is-invalid': errors['bank_account_no'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your a/c number' autoFocus />\r\n                 {errors.bank_account_no && errors.bank_account_no.type === 'required' && <p style={{color:\"red\"}}>bank a/c number is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 Bank Name\r\n                </Label>\r\n                <Input type='name' \r\n                name=\"bank_name\"\r\n                  className={classnames({ 'is-invalid': errors['bank_name'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your bank name' autoFocus />\r\n                 {errors.bank_name && errors.bank_name.type === 'required' && <p style={{color:\"red\"}}>bank name is required</p>}\r\n              </FormGroup>\r\n\r\n              </Col>\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                 IFSC Code\r\n                </Label>\r\n                <Input type='name' \r\n                name=\"ifsc_code\"\r\n                  className={classnames({ 'is-invalid': errors['ifsc_code'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='Enter your ifsc code' autoFocus />\r\n                 {errors.ifsc_code && errors.ifsc_code.type === 'required' && <p style={{color:\"red\"}}>Ifsc is required</p>}\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n              <FormGroup>\r\n        <Label for=\"exampleText\" >Status</Label>\r\n        <Input type=\"select\"\r\n         name=\"status\"\r\n        className={classnames({ 'is-invalid': errors['status'] })}\r\n        innerRef={register({ required: true, validate: value => value !== ''  })}\r\n        id=\"exampleSelect\">\r\n          <option id=\"1\" value={1}>Active</option>\r\n          <option value={0}>Deactive</option>\r\n        </Input>\r\n        {errors.status && errors.status.type === 'required' && <p style={{color:\"red\"}}>status is required</p>}\r\n      </FormGroup>\r\n      </Col>\r\n              </Row>\r\n              { props.preloadValue ?    <Button.Ripple className='ripple-button btn-theam' type=\"submit\" size=\"sm\" style={{float:\"right\"}} >\r\n               Update\r\n              </Button.Ripple> :   <Button.Ripple className='ripple-button btn-theam' type=\"submit\" size=\"sm\" style={{float:\"right\"}} >\r\n                Save\r\n              </Button.Ripple>}          \r\n            </Form>\r\n  </div>\r\n)\r\n}\r\n\r\nconst Master = (props) => {\r\n  const [addform, setAddForm] = useState(false)\r\n  const [updateuser, setUpdateuser] = useState(false)\r\n  const [addbutton, setAddButton] = useState(false)\r\n  const [userdetail, setUserDetail] = useState('')\r\n  const [user, setUser] = useState('')\r\n  const [locationhistory, setLocationhistory] = useState(props.location.state)\r\n  const classes = useStyles()\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [searching, setSearchStream] = useState('')\r\n  // console.log(userdetail)\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value)\r\n    setPage(0)\r\n  }\r\n ///search table data\r\nconst searchChange = (e) => {\r\n e.preventDefault()\r\n const searchstream = e.target.value\r\n//  setSearchStream(searchstream)\r\n//  const searchString = searching\r\nif (searchstream.length > 3) {\r\n const newstring = new RegExp(searchstream)\r\n       const searchitem = userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.filter(item => {\r\n        //  console.log(item.name, searchstream, item.name.match(newstring))\r\n         return item.name.match(newstring) || item.mobile_number.match(newstring) || item.type.match(newstring) || item.email_id.match(newstring)\r\n       })\r\n       console.log(searchitem)\r\n       setUserDetail({data:{data:searchitem}})\r\n      } else {\r\n        setUserDetail(user)\r\n      }\r\n}\r\n\r\n\r\n  const onAddClick = () => {\r\n    setAddForm(true)\r\n    setAddButton(true)\r\n    setUpdateuser(false)\r\n  }\r\n  const onCancleClick = () => {\r\n    setAddForm(false)\r\n    setAddButton(false)\r\n  }\r\n  const onEditClick = (detail, props) => {\r\n    props.history.push({\r\n      state : {\r\n        detail\r\n     }})\r\n     setUpdateuser(true)\r\n     setAddForm(false)\r\n  }\r\nuseEffect(() => {\r\n\r\n}, [props])\r\n\r\n  const userdetailapi = 'http://172.105.49.15:3030/api/user/get_user_list'\r\n  useEffect(() => {\r\n    axios.get(userdetailapi)\r\n    .then(r => {\r\n      // console.log(r)\r\n      setUser(r)\r\n      setUserDetail(r)\r\n    })\r\n  }, [addform, updateuser])\r\n\r\n  //  console.log(locationhistory)\r\n  return (\r\n    <div className='auth-wrapper auth-v1 px-2'>\r\n      <div className='auth-inner py-2'>\r\n        { addform === true ?   <Card className='mb-0'>\r\n          <CardBody>\r\n            <CardTitle tag='h4' className='mb-1'>\r\n            User Master\r\n            </CardTitle>\r\n            {/* <CardText className='mb-2'>Please Register for master</CardText> */}\r\n           <MasterForm onAdd={() => { setAddForm(false) }} onMasterSave={() => setAddButton(false)}/>\r\n          </CardBody>\r\n        </Card> : \" \"}\r\n        {updateuser === true ?   <Card className='mb-0'>\r\n          <CardBody>\r\n            <CardTitle tag='h4' className='mb-1'>\r\n            User Master\r\n            </CardTitle>\r\n            {/* <CardText className='mb-2'>Please Register for master</CardText> */}\r\n            <MasterForm\r\n             preloadValue={props && props.location && props.location.state} onAdd={() => { setUpdateuser(false) }}\r\n             onMasterSave={() => setAddButton(false)}\r\n             />\r\n          </CardBody>\r\n        </Card> : \"\" }\r\n   \r\n        <div style={{padding:5}}>\r\n     \r\n        </div>\r\n        <Card className='mb-0'>\r\n          <CardBody> \r\n            <Row>\r\n              <Col md={3}>\r\n              <h4 style={{margin:'10px'}} className='mb-1'>User List</h4>\r\n              </Col>\r\n              <Col md={2}>\r\n                  <h6 style={{float:\"right\", marginTop:\"10px\"}}>Search</h6>\r\n                  </Col>\r\n              <Col md={3}>\r\n            <FormGroup>\r\n                <Input type='search'\r\n                onChange ={(e) => {\r\n                  searchChange(e)\r\n                }}\r\n                id='code'\r\n                name=\"image\"\r\n                //   className={classnames({ 'is-invalid': errors['image'] })}\r\n                //   innerRef={register({ required: true, validate: value => value !== '' })}\r\n                 placeholder='search...' autoFocus />\r\n              </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n              {addbutton === false ?   <Button.Ripple className='ripple-button btn-theam' type=\"submit\" size=\"sm\" onClick={onAddClick} style={{margin:'10px', float:\"right\"}}>\r\n          <i class=\"fa fa-plus\"></i> Add User\r\n              </Button.Ripple> : <Button.Ripple className='ripple-button btn-theam' type=\"submit\" size=\"sm\" onClick={onCancleClick} style={{margin:'10px', float:\"right\"}}>\r\n          <i class=\"fa fa-minus\"></i> Add User\r\n              </Button.Ripple>\r\n              \r\n            }\r\n              </Col>\r\n            </Row>\r\n         \r\n     \r\n             {/* <Table  responsive>\r\n     <thead>\r\n        <tr>\r\n          <th>Sr. No.</th>\r\n          <th> Name</th>\r\n          <th>Number</th>\r\n          <th>Email</th>\r\n          <th>User Type</th>\r\n          <th>Status</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n           \r\n      <tbody>\r\n      { userdetail && userdetail.data && userdetail.data.map((detail, index) => {\r\n        return (\r\n          <tr>\r\n           <th scope=\"row\">{index + 1}</th>\r\n          <td>{detail.name}</td>\r\n          <td>{detail.mobile_number}</td>\r\n          <td>{detail.email_id}</td>\r\n          <td>{detail.type}</td>\r\n          <td>{detail.status}</td>\r\n          <td><span onClick={() => onEditClick(detail, props)}>&#9998;</span></td>\r\n        </tr>  \r\n        )\r\n \r\n         })\r\n      }\r\n      </tbody>\r\n    </Table>  */}\r\n\r\n      <TableContainer>\r\n        <Table stickyHeader  size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.slice((page * rowsPerPage), (page * rowsPerPage) + rowsPerPage).map((detail, index) => {\r\n              // console.log(detail)\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={detail.code}>\r\n                      <TableCell >\r\n                    {index + 1}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.name}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.mobile_number}\r\n                      </TableCell>\r\n                      {/* <TableCell >\r\n                     hjdhjsa88\r\n                      </TableCell> */}\r\n                      <TableCell >\r\n                      {detail.email_id}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.type}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                        {detail.photo === 'photo' ? '' :  <img src={detail.photo} width=\"50px\" height=\"50px\" alt=\"img\"/> }\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {moment(detail.date_of_birth).format(\"DD-MM-YYYY\")}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {moment(detail.date_of_joining).format(\"DD-MM-YYYY\")}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.employee_id}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.department_id && detail.department_name}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.designation_id && detail.designation_name}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.reporting_manager_id}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.adhar_no}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.pan_no}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.bank_account_no}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.bank_name}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.ifsc_code}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.organization_name.map((organizations, index) => {\r\n                        return (<p style={{display:\"inline\"}}>{organizations},</p>)\r\n                      })}\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {detail.status === true ?  <Switch\r\n        checked={true}\r\n        color=\"primary\"\r\n        name=\"checkedB\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      /> : <Switch\r\n      checked={false}\r\n      name=\"checkedA\"\r\n      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n    />}\r\n                      </TableCell>\r\n                      <TableCell key={detail._v} >\r\n                      <Button.Ripple className='btn-icon btn-sm rounded-circle' color='flat-success'  onClick={() => onEditClick(detail, props)} outline id={`positionTop_${index + 1}`}>\r\n        <Edit2 size={16} />\r\n      </Button.Ripple>\r\n      <UncontrolledTooltip placement='top' target={`positionTop_${index + 1}`}>\r\n       Edit\r\n      </UncontrolledTooltip>\r\n                      </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 20, 30]}\r\n        component=\"div\"\r\n        count={userdetail && userdetail.data && userdetail.data.data && userdetail.data.data.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n\r\n    </CardBody>\r\n    </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Master"]},"metadata":{},"sourceType":"module"}