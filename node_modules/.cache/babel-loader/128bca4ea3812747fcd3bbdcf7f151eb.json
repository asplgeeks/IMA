{"ast":null,"code":"import*as yup from'yup';import classnames from'classnames';import{useForm}from'react-hook-form';import{yupResolver}from'@hookform/resolvers/yup';import{Form,FormGroup,Row,Col,Button}from'reactstrap';import InputPasswordToggle from'@components/input-password-toggle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PasswordTabContent=function PasswordTabContent(){var SignupSchema=yup.object().shape({'old-password':yup.string().required(),'new-password':yup.string().required(),'retype-new-password':yup.string().required().oneOf([yup.ref(\"new-password\"),null],'Passwords must match')});var _useForm=useForm({resolver:yupResolver(SignupSchema)}),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit,trigger=_useForm.trigger;var onSubmit=function onSubmit(){return trigger();};return/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:\"6\",children:/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(InputPasswordToggle,{label:\"Old Password\",htmlFor:\"old-password\",name:\"old-password\",innerRef:register({required:true}),className:classnames('input-group-merge',{'is-invalid':errors['old-password']})})})})}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:\"6\",children:/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(InputPasswordToggle,{label:\"New Password\",htmlFor:\"new-password\",name:\"new-password\",innerRef:register({required:true}),className:classnames('input-group-merge',{'is-invalid':errors['new-password']})})})}),/*#__PURE__*/_jsx(Col,{sm:\"6\",children:/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(InputPasswordToggle,{label:\"Retype New Password\",htmlFor:\"retype-new-password\",name:\"retype-new-password\",innerRef:register({required:true}),className:classnames('input-group-merge',{'is-invalid':errors['retype-new-password']})})})}),/*#__PURE__*/_jsxs(Col,{className:\"mt-1\",sm:\"12\",children:[/*#__PURE__*/_jsx(Button.Ripple,{type:\"submit\",className:\"mr-1\",color:\"primary\",children:\"Save changes\"}),/*#__PURE__*/_jsx(Button.Ripple,{color:\"secondary\",outline:true,children:\"Cancel\"})]})]})]});};export default PasswordTabContent;","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/pages/account-settings/PasswordTabContent.js"],"names":["yup","classnames","useForm","yupResolver","Form","FormGroup","Row","Col","Button","InputPasswordToggle","PasswordTabContent","SignupSchema","object","shape","string","required","oneOf","ref","resolver","register","errors","handleSubmit","trigger","onSubmit"],"mappings":"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","sourcesContent":["import * as yup from 'yup'\r\nimport classnames from 'classnames'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, FormGroup, Row, Col, Button } from 'reactstrap'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\nconst PasswordTabContent = () => {\r\n  const SignupSchema = yup.object().shape({\r\n    'old-password': yup.string().required(),\r\n    'new-password': yup.string().required(),\r\n    'retype-new-password': yup\r\n      .string()\r\n      .required()\r\n      .oneOf([yup.ref(`new-password`), null], 'Passwords must match')\r\n  })\r\n\r\n  const { register, errors, handleSubmit, trigger } = useForm({\r\n    resolver: yupResolver(SignupSchema)\r\n  })\r\n\r\n  const onSubmit = () => trigger()\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)}>\r\n      <Row>\r\n        <Col sm='6'>\r\n          <FormGroup>\r\n            <InputPasswordToggle\r\n              label='Old Password'\r\n              htmlFor='old-password'\r\n              name='old-password'\r\n              innerRef={register({ required: true })}\r\n              className={classnames('input-group-merge', {\r\n                'is-invalid': errors['old-password']\r\n              })}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm='6'>\r\n          <FormGroup>\r\n            <InputPasswordToggle\r\n              label='New Password'\r\n              htmlFor='new-password'\r\n              name='new-password'\r\n              innerRef={register({ required: true })}\r\n              className={classnames('input-group-merge', {\r\n                'is-invalid': errors['new-password']\r\n              })}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm='6'>\r\n          <FormGroup>\r\n            <InputPasswordToggle\r\n              label='Retype New Password'\r\n              htmlFor='retype-new-password'\r\n              name='retype-new-password'\r\n              innerRef={register({ required: true })}\r\n              className={classnames('input-group-merge', {\r\n                'is-invalid': errors['retype-new-password']\r\n              })}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className='mt-1' sm='12'>\r\n          <Button.Ripple type='submit' className='mr-1' color='primary'>\r\n            Save changes\r\n          </Button.Ripple>\r\n          <Button.Ripple color='secondary' outline>\r\n            Cancel\r\n          </Button.Ripple>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PasswordTabContent\r\n"]},"metadata":{},"sourceType":"module"}