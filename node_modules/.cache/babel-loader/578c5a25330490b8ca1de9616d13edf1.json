{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\views\\\\ui-elements\\\\cards\\\\advance\\\\CardChat.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport classnames from 'classnames';\nimport Avatar from '@components/avatar';\nimport { useState, useEffect } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { MoreVertical, Send, Image } from 'react-feather';\nimport { Card, CardHeader, Form, Label, InputGroup, InputGroupAddon, Input, InputGroupText, Button } from 'reactstrap';\nimport profilePic from '@src/assets/images/portrait/small/avatar-s-11.jpg';\nimport '@styles/base/pages/app-chat-list.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar data = {\n  chat: {\n    id: 2,\n    userId: 1,\n    unseenMsgs: 0,\n    chat: [{\n      message: \"How can we help? We're here for you!\",\n      time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\n      senderId: 11\n    }, {\n      message: 'Hey John, I am looking for the best admin template. Could you please help me to find it out?',\n      time: 'Mon Dec 10 2018 07:45:23 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: 'It should be Bootstrap 4 compatible.',\n      time: 'Mon Dec 10 2018 07:45:55 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: 'Absolutely!',\n      time: 'Mon Dec 10 2018 07:46:00 GMT+0000 (GMT)',\n      senderId: 11\n    }, {\n      message: 'Modern admin is the responsive bootstrap 4 admin template.!',\n      time: 'Mon Dec 10 2018 07:46:05 GMT+0000 (GMT)',\n      senderId: 11\n    }, {\n      message: 'Looks clean and fresh UI.',\n      time: 'Mon Dec 10 2018 07:46:23 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: \"It's perfect for my next project.\",\n      time: 'Mon Dec 10 2018 07:46:33 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: 'How can I purchase it?',\n      time: 'Mon Dec 10 2018 07:46:43 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: 'Thanks, from ThemeForest.',\n      time: 'Mon Dec 10 2018 07:46:53 GMT+0000 (GMT)',\n      senderId: 11\n    }, {\n      message: 'I will purchase it for sure. üëç',\n      time: '2020-12-08T13:52:38.013Z',\n      senderId: 1\n    }]\n  },\n  contact: {\n    id: 1,\n    fullName: 'Felecia Rower',\n    avatar: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default,\n    status: 'away'\n  }\n};\n\nvar CardChat = function CardChat() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      msg = _useState2[0],\n      setMsg = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chatRef = _useState4[0],\n      setChatRef = _useState4[1];\n\n  var _useState5 = useState(data),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chatData = _useState6[0],\n      setChatData = _useState6[1]; //** Formats chat data based on sender\n\n\n  var formattedChatData = function formattedChatData() {\n    var chatLog = [];\n\n    if (chatData) {\n      chatLog = chatData.chat.chat;\n    }\n\n    var formattedChatLog = [];\n    var chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined;\n    var msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    };\n    chatLog.forEach(function (msg, index) {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          time: msg.time\n        });\n      } else {\n        chatMessageSenderId = msg.senderId;\n        formattedChatLog.push(msgGroup);\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [{\n            msg: msg.message,\n            time: msg.time\n          }]\n        };\n      }\n\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup);\n    });\n    return formattedChatLog;\n  }; //** Renders user chat\n\n\n  var renderChats = function renderChats() {\n    return formattedChatData().map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('chat', {\n          'chat-left': item.senderId !== 11\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-avatar\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"box-shadow-1 cursor-pointer\",\n            img: item.senderId === 11 ? profilePic : chatData.contact.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: item.messages.map(function (chat) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-content\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: chat.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, _this)\n            }, chat.msg, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this);\n    });\n  }; //** Scroll to chat bottom\n\n\n  var scrollToBottom = function scrollToBottom() {\n    chatRef.scrollTop = Number.MAX_SAFE_INTEGER;\n  };\n\n  useEffect(function () {\n    if (chatRef !== null) {\n      scrollToBottom();\n    }\n  }, [chatRef, chatData.chat.chat.length]);\n\n  var handleSendMsg = function handleSendMsg(e) {\n    e.preventDefault();\n\n    if (msg.trim().length) {\n      var newMsg = chatData;\n      newMsg.chat.chat.push({\n        message: msg,\n        time: new Date(),\n        senderId: 11\n      });\n      setChatData(newMsg);\n      setMsg('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"chat-widget\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          status: \"online\",\n          className: \"mr-2\",\n          img: chatData.contact.avatar,\n          imgHeight: \"34\",\n          imgWidth: \"34\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: \"Carrie Hawkins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(MoreVertical, {\n        size: 18,\n        className: \"cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-app-window\",\n      children: [/*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        containerRef: function containerRef(el) {\n          return setChatRef(el);\n        },\n        className: \"user-chats scroll-area\",\n        options: {\n          wheelPropagation: false\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chats\",\n          children: renderChats()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"chat-app-form\",\n        onSubmit: function onSubmit(e) {\n          return handleSendMsg(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"input-group-merge mr-1 form-send-message\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"prepend\",\n            children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                className: \"attachment-icon mb-0\",\n                for: \"attach-doc\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  className: \"cursor-pointer text-secondary\",\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"attach-doc\",\n                  hidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            value: msg,\n            className: \"border-0\",\n            onChange: function onChange(e) {\n              return setMsg(e.target.value);\n            },\n            placeholder: \"Type your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"send\",\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(Send, {\n            size: 14,\n            className: \"d-lg-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"d-none d-lg-block\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CardChat, \"Gw1uwuRvKyftiMkkipxhxZ3HlAg=\");\n\n_c = CardChat;\nexport default CardChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardChat\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/ui-elements/cards/advance/CardChat.js"],"names":["classnames","Avatar","useState","useEffect","PerfectScrollbar","MoreVertical","Send","Image","Card","CardHeader","Form","Label","InputGroup","InputGroupAddon","Input","InputGroupText","Button","profilePic","data","chat","id","userId","unseenMsgs","message","time","senderId","contact","fullName","avatar","require","default","status","CardChat","msg","setMsg","chatRef","setChatRef","chatData","setChatData","formattedChatData","chatLog","formattedChatLog","chatMessageSenderId","undefined","msgGroup","messages","forEach","index","push","length","renderChats","map","item","scrollToBottom","scrollTop","Number","MAX_SAFE_INTEGER","handleSendMsg","e","preventDefault","trim","newMsg","Date","el","wheelPropagation","target","value"],"mappings":"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","sourcesContent":["import classnames from 'classnames'\r\nimport Avatar from '@components/avatar'\r\nimport { useState, useEffect } from 'react'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { MoreVertical, Send, Image } from 'react-feather'\r\nimport { Card, CardHeader, Form, Label, InputGroup, InputGroupAddon, Input, InputGroupText, Button } from 'reactstrap'\r\n\r\nimport profilePic from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\nimport '@styles/base/pages/app-chat-list.scss'\r\n\r\nconst data = {\r\n  chat: {\r\n    id: 2,\r\n    userId: 1,\r\n    unseenMsgs: 0,\r\n    chat: [\r\n      {\r\n        message: \"How can we help? We're here for you!\",\r\n        time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\r\n        senderId: 11\r\n      },\r\n      {\r\n        message: 'Hey John, I am looking for the best admin template. Could you please help me to find it out?',\r\n        time: 'Mon Dec 10 2018 07:45:23 GMT+0000 (GMT)',\r\n        senderId: 1\r\n      },\r\n      {\r\n        message: 'It should be Bootstrap 4 compatible.',\r\n        time: 'Mon Dec 10 2018 07:45:55 GMT+0000 (GMT)',\r\n        senderId: 1\r\n      },\r\n      { message: 'Absolutely!', time: 'Mon Dec 10 2018 07:46:00 GMT+0000 (GMT)', senderId: 11 },\r\n      {\r\n        message: 'Modern admin is the responsive bootstrap 4 admin template.!',\r\n        time: 'Mon Dec 10 2018 07:46:05 GMT+0000 (GMT)',\r\n        senderId: 11\r\n      },\r\n      { message: 'Looks clean and fresh UI.', time: 'Mon Dec 10 2018 07:46:23 GMT+0000 (GMT)', senderId: 1 },\r\n      { message: \"It's perfect for my next project.\", time: 'Mon Dec 10 2018 07:46:33 GMT+0000 (GMT)', senderId: 1 },\r\n      { message: 'How can I purchase it?', time: 'Mon Dec 10 2018 07:46:43 GMT+0000 (GMT)', senderId: 1 },\r\n      { message: 'Thanks, from ThemeForest.', time: 'Mon Dec 10 2018 07:46:53 GMT+0000 (GMT)', senderId: 11 },\r\n      { message: 'I will purchase it for sure. üëç', time: '2020-12-08T13:52:38.013Z', senderId: 1 }\r\n    ]\r\n  },\r\n  contact: {\r\n    id: 1,\r\n    fullName: 'Felecia Rower',\r\n    avatar: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default,\r\n    status: 'away'\r\n  }\r\n}\r\n\r\nconst CardChat = () => {\r\n  const [msg, setMsg] = useState('')\r\n  const [chatRef, setChatRef] = useState(null)\r\n  const [chatData, setChatData] = useState(data)\r\n\r\n  //** Formats chat data based on sender\r\n  const formattedChatData = () => {\r\n    let chatLog = []\r\n    if (chatData) {\r\n      chatLog = chatData.chat.chat\r\n    }\r\n\r\n    const formattedChatLog = []\r\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\r\n    let msgGroup = {\r\n      senderId: chatMessageSenderId,\r\n      messages: []\r\n    }\r\n    chatLog.forEach((msg, index) => {\r\n      if (chatMessageSenderId === msg.senderId) {\r\n        msgGroup.messages.push({\r\n          msg: msg.message,\r\n          time: msg.time\r\n        })\r\n      } else {\r\n        chatMessageSenderId = msg.senderId\r\n        formattedChatLog.push(msgGroup)\r\n        msgGroup = {\r\n          senderId: msg.senderId,\r\n          messages: [\r\n            {\r\n              msg: msg.message,\r\n              time: msg.time\r\n            }\r\n          ]\r\n        }\r\n      }\r\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\r\n    })\r\n    return formattedChatLog\r\n  }\r\n\r\n  //** Renders user chat\r\n  const renderChats = () => {\r\n    return formattedChatData().map((item, index) => {\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={classnames('chat', {\r\n            'chat-left': item.senderId !== 11\r\n          })}\r\n        >\r\n          <div className='chat-avatar'>\r\n            <Avatar\r\n              className='box-shadow-1 cursor-pointer'\r\n              img={item.senderId === 11 ? profilePic : chatData.contact.avatar}\r\n            />\r\n          </div>\r\n\r\n          <div className='chat-body'>\r\n            {item.messages.map(chat => (\r\n              <div key={chat.msg} className='chat-content'>\r\n                <p>{chat.msg}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  //** Scroll to chat bottom\r\n  const scrollToBottom = () => {\r\n    chatRef.scrollTop = Number.MAX_SAFE_INTEGER\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (chatRef !== null) {\r\n      scrollToBottom()\r\n    }\r\n  }, [chatRef, chatData.chat.chat.length])\r\n\r\n  const handleSendMsg = e => {\r\n    e.preventDefault()\r\n    if (msg.trim().length) {\r\n      const newMsg = chatData\r\n\r\n      newMsg.chat.chat.push({\r\n        message: msg,\r\n        time: new Date(),\r\n        senderId: 11\r\n      })\r\n\r\n      setChatData(newMsg)\r\n      setMsg('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className='chat-widget'>\r\n      <CardHeader>\r\n        <div className='d-flex align-items-center'>\r\n          <Avatar status='online' className='mr-2' img={chatData.contact.avatar} imgHeight='34' imgWidth='34' />\r\n          <h5 className='mb-0'>Carrie Hawkins</h5>\r\n        </div>\r\n        <MoreVertical size={18} className='cursor-pointer' />\r\n      </CardHeader>\r\n      <div className='chat-app-window'>\r\n        <PerfectScrollbar\r\n          containerRef={el => setChatRef(el)}\r\n          className='user-chats scroll-area'\r\n          options={{ wheelPropagation: false }}\r\n        >\r\n          <div className='chats'>{renderChats()}</div>\r\n        </PerfectScrollbar>\r\n        <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\r\n          <InputGroup className='input-group-merge mr-1 form-send-message'>\r\n            <InputGroupAddon addonType='prepend'>\r\n              <InputGroupText>\r\n                <Label className='attachment-icon mb-0' for='attach-doc'>\r\n                  <Image className='cursor-pointer text-secondary' size={14} />\r\n                  <input type='file' id='attach-doc' hidden />\r\n                </Label>\r\n              </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input\r\n              value={msg}\r\n              className='border-0'\r\n              onChange={e => setMsg(e.target.value)}\r\n              placeholder='Type your message'\r\n            />\r\n          </InputGroup>\r\n          <Button className='send' color='primary'>\r\n            <Send size={14} className='d-lg-none' />\r\n            <span className='d-none d-lg-block'>Send</span>\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardChat\r\n"]},"metadata":{},"sourceType":"module"}