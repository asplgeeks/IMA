{"ast":null,"code":"import _objectSpread from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shree\\\\Downloads\\\\newproject\\\\full-version\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\horizontal-menu\\\\HorizontalNavMenuGroup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'; // ** Utils\n\nimport { isNavGroupActive } from '@layouts/utils'; // ** Horizontal Menu Items Component\n\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar HorizontalNavMenuGroup = function HorizontalNavMenuGroup(props) {\n  _s();\n\n  // ** Props\n  var item = props.item,\n      submenu = props.submenu,\n      groupActive = props.groupActive,\n      _onMouseEnter = props.onMouseEnter,\n      _onMouseLeave = props.onMouseLeave,\n      openDropdown = props.openDropdown,\n      setGroupActive = props.setGroupActive,\n      activeItem = props.activeItem,\n      setActiveItem = props.setActiveItem,\n      routerProps = props.routerProps,\n      setOpenDropdown = props.setOpenDropdown,\n      currentActiveItem = props.currentActiveItem; // ** URL Var\n\n  var currentURL = useLocation().pathname; // ** Dropdown menu modifiers\n\n  var menuModifiers = {\n    setMaxHeight: {\n      enabled: true,\n      fn: function fn(data) {\n        var pageHeight = window.innerHeight,\n            ddTop = data.instance.reference.getBoundingClientRect().top,\n            ddHeight = data.popper.height;\n        var maxHeight, stylesObj; // ** Calculate and set height\n\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\n          maxHeight = pageHeight - ddTop - 25;\n          stylesObj = {\n            maxHeight: maxHeight,\n            overflowY: 'auto'\n          };\n        }\n\n        var ddRef = data.instance.popper.getBoundingClientRect(); // ** If there is not space left to open sub menu open it to the right\n\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n          data.instance.popper.closest('.dropdown').classList.add('openLeft');\n        }\n\n        return _objectSpread(_objectSpread({}, data), {}, {\n          styles: _objectSpread({}, stylesObj)\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    tag: \"li\",\n    className: classnames({\n      'nav-item': submenu === false,\n      'dropdown-submenu': submenu === true,\n      'sidebar-group-active active': isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\n    }),\n    isOpen: openDropdown.includes(item.id),\n    toggle: function toggle() {\n      return _onMouseEnter(item.id);\n    },\n    onMouseEnter: function onMouseEnter() {\n      return _onMouseEnter(item.id);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return _onMouseLeave(item.id);\n    },\n    children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n      to: \"/\",\n      tag: Link,\n      className: classnames('dropdown-toggle d-flex align-items-center', {\n        'dropdown-item': submenu === true,\n        'nav-link': submenu === false\n      }),\n      onClick: function onClick(e) {\n        return e.preventDefault();\n      },\n      children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      tag: \"ul\",\n      modifiers: menuModifiers,\n      children: /*#__PURE__*/_jsxDEV(HorizontalNavMenuItems, {\n        submenu: true,\n        parentItem: item,\n        items: item.children,\n        activeItem: activeItem,\n        groupActive: groupActive,\n        routerProps: routerProps,\n        openDropdown: openDropdown,\n        onMouseEnter: _onMouseEnter,\n        onMouseLeave: _onMouseLeave,\n        setActiveItem: setActiveItem,\n        setGroupActive: setGroupActive,\n        isChild: true,\n        setOpenDropdown: setOpenDropdown,\n        currentActiveItem: currentActiveItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(HorizontalNavMenuGroup, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\n_c = HorizontalNavMenuGroup;\nexport default HorizontalNavMenuGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalNavMenuGroup\");","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js"],"names":["Link","useLocation","classnames","FormattedMessage","Dropdown","DropdownMenu","DropdownToggle","isNavGroupActive","HorizontalNavMenuItems","HorizontalNavMenuGroup","props","item","submenu","groupActive","onMouseEnter","onMouseLeave","openDropdown","setGroupActive","activeItem","setActiveItem","routerProps","setOpenDropdown","currentActiveItem","currentURL","pathname","menuModifiers","setMaxHeight","enabled","fn","data","pageHeight","window","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","ddHeight","popper","height","maxHeight","stylesObj","overflowY","ddRef","left","width","innerWidth","closest","classList","add","styles","children","includes","id","e","preventDefault","icon","title"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { FormattedMessage } from 'react-intl'\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\n\n// ** Utils\nimport { isNavGroupActive } from '@layouts/utils'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const {\n    item,\n    submenu,\n    groupActive,\n    onMouseEnter,\n    onMouseLeave,\n    openDropdown,\n    setGroupActive,\n    activeItem,\n    setActiveItem,\n    routerProps,\n    setOpenDropdown,\n    currentActiveItem\n  } = props\n\n  // ** URL Var\n  const currentURL = useLocation().pathname\n\n  // ** Dropdown menu modifiers\n  const menuModifiers = {\n    setMaxHeight: {\n      enabled: true,\n      fn: data => {\n        const pageHeight = window.innerHeight,\n          ddTop = data.instance.reference.getBoundingClientRect().top,\n          ddHeight = data.popper.height\n        let maxHeight, stylesObj\n\n        // ** Calculate and set height\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\n          maxHeight = pageHeight - ddTop - 25\n          stylesObj = {\n            maxHeight,\n            overflowY: 'auto'\n          }\n        }\n\n        const ddRef = data.instance.popper.getBoundingClientRect()\n\n        // ** If there is not space left to open sub menu open it to the right\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\n        }\n\n        return {\n          ...data,\n          styles: {\n            ...stylesObj\n          }\n        }\n      }\n    }\n  }\n  return (\n    <Dropdown\n      tag='li'\n      className={classnames({\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active':\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\n      })}\n      isOpen={openDropdown.includes(item.id)}\n      toggle={() => onMouseEnter(item.id)}\n      onMouseEnter={() => onMouseEnter(item.id)}\n      onMouseLeave={() => onMouseLeave(item.id)}\n    >\n      <DropdownToggle\n        to='/'\n        tag={Link}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n        onClick={e => e.preventDefault()}\n      >\n        {item.icon}\n        <span>\n          <FormattedMessage id={item.title} />\n        </span>\n      </DropdownToggle>\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\n        <HorizontalNavMenuItems\n          submenu={true}\n          parentItem={item}\n          items={item.children}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          openDropdown={openDropdown}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          isChild={true}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n"]},"metadata":{},"sourceType":"module"}