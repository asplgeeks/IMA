{"ast":null,"code":"import _toConsumableArray from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment,useState,useEffect}from'react';import axios from'axios';import*as Icon from'react-feather';import classnames from'classnames';import{Link,useParams}from'react-router-dom';import Breadcrumbs from'@components/breadcrumbs';import KnowledgeBaseHeader from'./KnowledgeBaseHeader';import{Row,Col,Card,CardBody,ListGroup,ListGroupItem}from'reactstrap';import'@styles/base/pages/page-knowledge-base.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var KnowledgeBaseCategory=function KnowledgeBaseCategory(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1],_useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filteredData=_useState4[0],setFilteredData=_useState4[1],_useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchTerm=_useState6[0],setSearchTerm=_useState6[1];useEffect(function(){axios.get('/faq/data/category').then(function(res){return setData(res.data);});},[]);var params=useParams();var Content=function Content(_ref){var item=_ref.item;var IconTag=Icon[item.icon];return/*#__PURE__*/_jsx(Col,{className:\"kb-search-content\",md:\"4\",sm:\"6\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"kb-title\",children:[/*#__PURE__*/_jsx(IconTag,{size:20,className:classnames('mr-50',_defineProperty({},item.iconColor,item.iconColor))}),/*#__PURE__*/_jsxs(\"span\",{children:[item.title,\" \",\"(\".concat(item.questions.length,\")\")]})]}),/*#__PURE__*/_jsx(ListGroup,{className:\"list-group-circle mt-2\",children:item.questions.map(function(listItem){return/*#__PURE__*/_jsx(ListGroupItem,{tag:Link,to:\"/pages/knowledge-base/\".concat(params.category,\"/\").concat(listItem.slug),className:\"text-body\",children:listItem.question},listItem.id);})})]})})});};var renderContent=function renderContent(){var dataToMap=searchTerm.length?filteredData:data;return dataToMap.map(function(item){return/*#__PURE__*/_jsx(Content,{item:item},item.id);});};var handleFilter=function handleFilter(e){var value=e.target.value,knowledgeBaseSearchQueryLower=e.target.value.toLowerCase();setSearchTerm(e.target.value);var arr=[];if(value.length){arr=data.filter(function(item){return item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower)||item.questions.filter(function(queObj){return queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower);}).length;});}setFilteredData(_toConsumableArray(arr));};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Breadcrumbs,{breadCrumbTitle:\"Knowledge Base\",breadCrumbParent:\"Pages\",breadCrumbParent2:\"Knowledge Base\",breadCrumbActive:\"Category\"}),/*#__PURE__*/_jsx(KnowledgeBaseHeader,{searchTerm:searchTerm,setSearchTerm:setSearchTerm,handleFilter:handleFilter}),data!==null?/*#__PURE__*/_jsx(\"div\",{id:\"knowledge-base-category\",children:/*#__PURE__*/_jsx(Row,{className:\"kb-search-content-info match-height\",children:renderContent()})}):null]});};export default KnowledgeBaseCategory;","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/pages/knowledge-base/KnowledgeBaseCategory.js"],"names":["Fragment","useState","useEffect","axios","Icon","classnames","Link","useParams","Breadcrumbs","KnowledgeBaseHeader","Row","Col","Card","CardBody","ListGroup","ListGroupItem","KnowledgeBaseCategory","data","setData","filteredData","setFilteredData","searchTerm","setSearchTerm","get","then","res","params","Content","item","IconTag","icon","iconColor","title","questions","length","map","listItem","category","slug","question","id","renderContent","dataToMap","handleFilter","e","value","target","knowledgeBaseSearchQueryLower","toLowerCase","arr","filter","includes","queObj"],"mappings":"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","sourcesContent":["import { Fragment, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\r\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\nimport '@styles/base/pages/page-knowledge-base.scss'\r\n\r\nconst KnowledgeBaseCategory = () => {\r\n  const [data, setData] = useState(null),\r\n    [filteredData, setFilteredData] = useState([]),\r\n    [searchTerm, setSearchTerm] = useState('')\r\n\r\n  useEffect(() => {\r\n    axios.get('/faq/data/category').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const params = useParams()\r\n\r\n  const Content = ({ item }) => {\r\n    const IconTag = Icon[item.icon]\r\n    return (\r\n      <Col className='kb-search-content' md='4' sm='6'>\r\n        <Card>\r\n          <CardBody>\r\n            <h6 className='kb-title'>\r\n              <IconTag\r\n                size={20}\r\n                className={classnames('mr-50', {\r\n                  [item.iconColor]: item.iconColor\r\n                })}\r\n              />\r\n              <span>\r\n                {item.title} {`(${item.questions.length})`}\r\n              </span>\r\n            </h6>\r\n            <ListGroup className='list-group-circle mt-2'>\r\n              {item.questions.map(listItem => (\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to={`/pages/knowledge-base/${params.category}/${listItem.slug}`}\r\n                  className='text-body'\r\n                  key={listItem.id}\r\n                >\r\n                  {listItem.question}\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n\r\n  const renderContent = () => {\r\n    const dataToMap = searchTerm.length ? filteredData : data\r\n\r\n    return dataToMap.map(item => <Content key={item.id} item={item} />)\r\n  }\r\n\r\n  const handleFilter = e => {\r\n    const value = e.target.value,\r\n      knowledgeBaseSearchQueryLower = e.target.value.toLowerCase()\r\n\r\n    setSearchTerm(e.target.value)\r\n\r\n    let arr = []\r\n\r\n    if (value.length) {\r\n      arr = data.filter(item => {\r\n        return (\r\n          item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) ||\r\n          item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length\r\n        )\r\n      })\r\n    }\r\n\r\n    setFilteredData([...arr])\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        breadCrumbTitle='Knowledge Base'\r\n        breadCrumbParent='Pages'\r\n        breadCrumbParent2='Knowledge Base'\r\n        breadCrumbActive='Category'\r\n      />\r\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} handleFilter={handleFilter} />\r\n      {data !== null ? (\r\n        <div id='knowledge-base-category'>\r\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default KnowledgeBaseCategory\r\n"]},"metadata":{},"sourceType":"module"}