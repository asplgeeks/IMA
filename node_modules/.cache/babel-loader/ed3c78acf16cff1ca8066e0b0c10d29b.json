{"ast":null,"code":"import _toConsumableArray from \"D:/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\IMA\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\vertical-menu\\\\VerticalNavMenuGroup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { Collapse, Badge } from 'reactstrap';\nimport { FormattedMessage } from 'react-intl'; // ** Vertical Menu Items Component\n\nimport VerticalNavMenuItems from './VerticalNavMenuItems'; // ** Utils\n\nimport { isNavGroupActive, getAllParents } from '@layouts/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar VerticalNavMenuGroup = function VerticalNavMenuGroup(_ref) {\n  _s();\n\n  var item = _ref.item,\n      groupActive = _ref.groupActive,\n      setGroupActive = _ref.setGroupActive,\n      activeItem = _ref.activeItem,\n      setActiveItem = _ref.setActiveItem,\n      groupOpen = _ref.groupOpen,\n      setGroupOpen = _ref.setGroupOpen,\n      parentItem = _ref.parentItem,\n      menuCollapsed = _ref.menuCollapsed,\n      menuHover = _ref.menuHover,\n      routerProps = _ref.routerProps,\n      currentActiveItem = _ref.currentActiveItem;\n  // ** Current Val\n  var currentURL = useLocation().pathname; //currentTitle\n\n  console.log(groupActive[1]);\n  localStorage.setItem('myTitle', groupActive[1]); // ** Toggles Open Group\n\n  var toggleOpenGroup = function toggleOpenGroup(item, parentItem) {\n    var openArr = groupOpen;\n    var allParents;\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id');\n      allParents.pop();\n    } // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\n\n\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item);\n    } else {\n      openArr = [];\n\n      if (!groupOpen.includes(item)) {\n        openArr.push(item);\n      }\n    } // ** Set Open Group\n\n\n    setGroupOpen(_toConsumableArray(openArr));\n  }; // ** Toggle Active Group\n\n\n  var toggleActiveGroup = function toggleActiveGroup(item, parentItem) {\n    var activeArr = groupActive;\n    var allParents;\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id');\n      activeArr = allParents;\n    } else {\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item);\n    } // ** Set open group removing any activegroup item present in opengroup state\n\n\n    var openArr = groupOpen.filter(function (val) {\n      return !activeArr.includes(val);\n    });\n    setGroupOpen(_toConsumableArray(openArr)); // **  Set Active Group\n\n    setGroupActive(_toConsumableArray(activeArr));\n  }; // ** On Group Item Click\n\n\n  var onCollapseClick = function onCollapseClick(e, item) {\n    if (groupActive && groupActive.includes(item.id) || isNavGroupActive(item.children, currentURL, routerProps)) {\n      toggleActiveGroup(item.id);\n    } else {\n      toggleOpenGroup(item.id, parentItem);\n    }\n\n    e.preventDefault();\n  }; // ** Returns condition to add open class\n\n\n  var openClassCondition = function openClassCondition(id) {\n    if (menuCollapsed && menuHover || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\n        return true;\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false;\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames('nav-item has-sub', {\n      open: openClassCondition(item.id),\n      'menu-collapsed-open': groupActive.includes(item.id),\n      'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"d-flex align-items-center\",\n      to: \"/\",\n      onClick: function onClick(e) {\n        return onCollapseClick(e, item);\n      },\n      children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"menu-title text-truncate\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, _this), item.badge && item.badgeText ? /*#__PURE__*/_jsxDEV(Badge, {\n        className: \"ml-auto mr-1\",\n        color: item.badge,\n        pill: true,\n        children: item.badgeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"menu-content\",\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        isOpen: groupActive && groupActive.includes(item.id) || groupOpen && groupOpen.includes(item.id),\n        children: /*#__PURE__*/_jsxDEV(VerticalNavMenuItems, {\n          items: item.children,\n          groupActive: groupActive,\n          setGroupActive: setGroupActive,\n          groupOpen: groupOpen,\n          setGroupOpen: setGroupOpen,\n          toggleActiveGroup: toggleActiveGroup,\n          parentItem: item,\n          menuCollapsed: menuCollapsed,\n          menuHover: menuHover,\n          routerProps: routerProps,\n          currentActiveItem: currentActiveItem,\n          activeItem: activeItem,\n          setActiveItem: setActiveItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(VerticalNavMenuGroup, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\n_c = VerticalNavMenuGroup;\nexport default VerticalNavMenuGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalNavMenuGroup\");","map":{"version":3,"sources":["D:/IMA/src/@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js"],"names":["Link","useLocation","classnames","Collapse","Badge","FormattedMessage","VerticalNavMenuItems","isNavGroupActive","getAllParents","VerticalNavMenuGroup","item","groupActive","setGroupActive","activeItem","setActiveItem","groupOpen","setGroupOpen","parentItem","menuCollapsed","menuHover","routerProps","currentActiveItem","currentURL","pathname","console","log","localStorage","setItem","toggleOpenGroup","openArr","allParents","pop","includes","splice","indexOf","push","toggleActiveGroup","activeArr","filter","val","onCollapseClick","e","id","children","preventDefault","openClassCondition","open","icon","title","badge","badgeText"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Collapse, Badge } from 'reactstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  parentItem,\r\n  menuCollapsed,\r\n  menuHover,\r\n  routerProps,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n  //currentTitle\r\n  console.log(groupActive[1])\r\n localStorage.setItem('myTitle', groupActive[1])\r\n  // ** Toggles Open Group\r\n  const toggleOpenGroup = (item, parentItem) => {\r\n    let openArr = groupOpen\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      allParents.pop()\r\n    }\r\n\r\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\r\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\r\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\r\n    } else {\r\n      openArr = []\r\n      if (!groupOpen.includes(item)) {\r\n        openArr.push(item)\r\n      }\r\n    }\r\n\r\n    // ** Set Open Group\r\n    setGroupOpen([...openArr])\r\n  }\r\n\r\n  // ** Toggle Active Group\r\n  const toggleActiveGroup = (item, parentItem) => {\r\n    let activeArr = groupActive\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      activeArr = allParents\r\n    } else {\r\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\r\n    }\r\n\r\n    // ** Set open group removing any activegroup item present in opengroup state\r\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\r\n    setGroupOpen([...openArr])\r\n\r\n    // **  Set Active Group\r\n    setGroupActive([...activeArr])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\r\n      toggleActiveGroup(item.id)\r\n    } else {\r\n      toggleOpenGroup(item.id, parentItem)\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\r\n        return true\r\n      }\r\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\r\n      })}\r\n    >\r\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n        \r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\r\n          <VerticalNavMenuItems\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            toggleActiveGroup={toggleActiveGroup}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            routerProps={routerProps}\r\n            currentActiveItem={currentActiveItem}\r\n            activeItem={activeItem}\r\n            setActiveItem={setActiveItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n"]},"metadata":{},"sourceType":"module"}