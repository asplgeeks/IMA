{"ast":null,"code":"import axios from'axios';// ** Get Bookmarks Array from @fakeDB\nexport var getBookmarks=function getBookmarks(){return function(dispatch){return axios.get('/api/bookmarks/data').then(function(response){dispatch({type:'GET_BOOKMARKS',data:response.data.suggestions,bookmarks:response.data.bookmarks});});};};// ** Update & Get Updated Bookmarks Array\nexport var updateBookmarked=function updateBookmarked(id){return function(dispatch){return axios.post('/api/bookmarks/update',{id:id}).then(function(){dispatch({type:'UPDATE_BOOKMARKED',id:id});});};};// ** Handle Bookmarks & Main Search Queries\nexport var handleSearchQuery=function handleSearchQuery(val){return function(dispatch){return dispatch({type:'HANDLE_SEARCH_QUERY',val:val});};};","map":{"version":3,"sources":["D:/nodejs/IMA/src/redux/actions/navbar/index.js"],"names":["axios","getBookmarks","dispatch","get","then","response","type","data","suggestions","bookmarks","updateBookmarked","id","post","handleSearchQuery","val"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAChC,MAAO,UAAAC,QAAQ,CAAI,CACjB,MAAOF,CAAAA,KAAK,CAACG,GAAN,CAAU,qBAAV,EAAiCC,IAAjC,CAAsC,SAAAC,QAAQ,CAAI,CACvDH,QAAQ,CAAC,CACPI,IAAI,CAAE,eADC,CAEPC,IAAI,CAAEF,QAAQ,CAACE,IAAT,CAAcC,WAFb,CAGPC,SAAS,CAAEJ,QAAQ,CAACE,IAAT,CAAcE,SAHlB,CAAD,CAAR,CAKD,CANM,CAAP,CAOD,CARD,CASD,CAVM,CAYP;AACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,EAAE,CAAI,CACpC,MAAO,UAAAT,QAAQ,CAAI,CACjB,MAAOF,CAAAA,KAAK,CAACY,IAAN,CAAW,uBAAX,CAAoC,CAAED,EAAE,CAAFA,EAAF,CAApC,EAA4CP,IAA5C,CAAiD,UAAM,CAC5DF,QAAQ,CAAC,CAAEI,IAAI,CAAE,mBAAR,CAA6BK,EAAE,CAAFA,EAA7B,CAAD,CAAR,CACD,CAFM,CAAP,CAGD,CAJD,CAKD,CANM,CAQP;AACA,MAAO,IAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,GAAG,QAAI,UAAAZ,QAAQ,QAAIA,CAAAA,QAAQ,CAAC,CAAEI,IAAI,CAAE,qBAAR,CAA+BQ,GAAG,CAAHA,GAA/B,CAAD,CAAZ,EAAZ,EAA7B","sourcesContent":["import axios from 'axios'\r\n\r\n// ** Get Bookmarks Array from @fakeDB\r\nexport const getBookmarks = () => {\r\n  return dispatch => {\r\n    return axios.get('/api/bookmarks/data').then(response => {\r\n      dispatch({\r\n        type: 'GET_BOOKMARKS',\r\n        data: response.data.suggestions,\r\n        bookmarks: response.data.bookmarks\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Update & Get Updated Bookmarks Array\r\nexport const updateBookmarked = id => {\r\n  return dispatch => {\r\n    return axios.post('/api/bookmarks/update', { id }).then(() => {\r\n      dispatch({ type: 'UPDATE_BOOKMARKED', id })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Handle Bookmarks & Main Search Queries\r\nexport const handleSearchQuery = val => dispatch => dispatch({ type: 'HANDLE_SEARCH_QUERY', val })\r\n"]},"metadata":{},"sourceType":"module"}