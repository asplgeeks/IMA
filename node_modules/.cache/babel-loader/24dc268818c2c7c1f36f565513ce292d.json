{"ast":null,"code":"import _slicedToArray from\"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// ** React Imports\nimport{Fragment,useEffect,useState}from'react';import{useParams}from'react-router-dom';// ** Email App Component Imports\nimport Mails from'./Mails';import Sidebar from'./Sidebar';// import Navbar from './Navbar'\n// ** Third Party Components\nimport classnames from'classnames';// ** Store & Actions\nimport{useDispatch,useSelector}from'react-redux';import{getTopics,selectMail,updateMails,paginateMail,selectAllMail,resetSelectedMail,selectCurrentMail,updateMailLabel,gettreads}from'./store/actions';// ** Styles\nimport'@styles/react/apps/app-email.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmailApp=function EmailApp(){// ** States\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),sidebarOpen=_useState4[0],setSidebarOpen=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),composeOpen=_useState6[0],setComposeOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),reloadthread=_useState8[0],setReloadthread=_useState8[1];// ** Toggle Compose Function\nvar toggleCompose=function toggleCompose(){return setComposeOpen(!composeOpen);};// ** Store Variables\nvar dispatch=useDispatch();var store=useSelector(function(state){return state.email;});// ** Vars\nvar params=useParams();// ** UseEffect: GET initial data on Mount\nuseEffect(function(){// params.folder \ndispatch(getTopics({q:query||'',folder:params.folder||'inbox',label:params.label||''}));},[query,params.folder,params.label]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Sidebar,{store:store,dispatch:dispatch,getTopics:getTopics,gettreads:gettreads,sidebarOpen:sidebarOpen,toggleCompose:toggleCompose,setSidebarOpen:setSidebarOpen,resetSelectedMail:resetSelectedMail,setReloadthread:setReloadthread,reloadthread:reloadthread}),/*#__PURE__*/_jsx(\"div\",{className:\"content-right\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-body\",children:[/*#__PURE__*/_jsx(\"div\",{// className={classnames('body-content-overlay', {\n//   show: sidebarOpen\n// })}\nonClick:function onClick(){return setSidebarOpen(false);}}),/*#__PURE__*/_jsx(Mails,{store:store,query:query,setQuery:setQuery,dispatch:dispatch,getTopics:getTopics,selectMail:selectMail,updateMails:updateMails,composeOpen:composeOpen,paginateMail:paginateMail,selectAllMail:selectAllMail,toggleCompose:toggleCompose,setSidebarOpen:setSidebarOpen,updateMailLabel:updateMailLabel,selectCurrentMail:selectCurrentMail,resetSelectedMail:resetSelectedMail,setReloadthread:setReloadthread,reloadthread:reloadthread})]})})]});};export default EmailApp;","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/apps/email/index.js"],"names":["Fragment","useEffect","useState","useParams","Mails","Sidebar","classnames","useDispatch","useSelector","getTopics","selectMail","updateMails","paginateMail","selectAllMail","resetSelectedMail","selectCurrentMail","updateMailLabel","gettreads","EmailApp","query","setQuery","sidebarOpen","setSidebarOpen","composeOpen","setComposeOpen","reloadthread","setReloadthread","toggleCompose","dispatch","store","state","email","params","q","folder","label"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// ** Email App Component Imports\r\nimport Mails from './Mails'\r\nimport Sidebar from './Sidebar'\r\n// import Navbar from './Navbar'\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getTopics,\r\n  selectMail,\r\n  updateMails,\r\n  paginateMail,\r\n  selectAllMail,\r\n  resetSelectedMail,\r\n  selectCurrentMail,\r\n  updateMailLabel,\r\n  gettreads\r\n} from './store/actions'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-email.scss'\r\n\r\nconst EmailApp = () => {\r\n  // ** States\r\n  const [query, setQuery] = useState('')\r\n  const [sidebarOpen, setSidebarOpen] = useState(true)\r\n  const [composeOpen, setComposeOpen] = useState(false)\r\n\r\n  const [reloadthread, setReloadthread] = useState(false)\r\n  // ** Toggle Compose Function\r\n  const toggleCompose = () => setComposeOpen(!composeOpen)\r\n\r\n  // ** Store Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.email)\r\n\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** UseEffect: GET initial data on Mount\r\n  useEffect(() => {\r\n   \r\n    // params.folder \r\n    dispatch(getTopics({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\r\n  }, [query, params.folder, params.label])\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Navbar /> */}\r\n      <Sidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        getTopics={getTopics}\r\n        gettreads={gettreads}\r\n        sidebarOpen={sidebarOpen}\r\n        toggleCompose={toggleCompose}\r\n        setSidebarOpen={setSidebarOpen}\r\n        resetSelectedMail={resetSelectedMail}\r\n        setReloadthread={setReloadthread}\r\n        reloadthread={reloadthread}\r\n\r\n        \r\n  />\r\n  \r\n      <div className='content-right'>\r\n        <div className='content-body'>\r\n          <div\r\n            // className={classnames('body-content-overlay', {\r\n            //   show: sidebarOpen\r\n            // })}\r\n            onClick={() => setSidebarOpen(false)}>\r\n\r\n          </div>\r\n          <Mails\r\n            store={store}\r\n            query={query}\r\n            setQuery={setQuery}\r\n            dispatch={dispatch}\r\n            getTopics={getTopics}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            composeOpen={composeOpen}\r\n            paginateMail={paginateMail}\r\n            selectAllMail={selectAllMail}\r\n            toggleCompose={toggleCompose}\r\n            setSidebarOpen={setSidebarOpen}\r\n            updateMailLabel={updateMailLabel}\r\n            selectCurrentMail={selectCurrentMail}\r\n            resetSelectedMail={resetSelectedMail}\r\n            setReloadthread={setReloadthread}\r\n            reloadthread={reloadthread}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmailApp\r\n"]},"metadata":{},"sourceType":"module"}