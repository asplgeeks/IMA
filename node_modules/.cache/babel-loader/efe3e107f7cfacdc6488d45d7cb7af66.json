{"ast":null,"code":"import _slicedToArray from \"D:/nodejs/IMA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodejs\\\\IMA\\\\src\\\\views\\\\components\\\\popovers\\\\PopoverControlled.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PopoverControlled = function PopoverControlled() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      popoverOpen = _useState2[0],\n      setPopoverOpen = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button.Ripple, {\n      color: \"primary\",\n      outline: true,\n      id: \"controlledPopover\",\n      children: \"Controlled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n      placement: \"top\",\n      target: \"controlledPopover\",\n      isOpen: popoverOpen,\n      toggle: function toggle() {\n        return setPopoverOpen(!popoverOpen);\n      },\n      children: [/*#__PURE__*/_jsxDEV(PopoverHeader, {\n        children: \"Controlled Popover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n        children: \"Macaroon chocolate candy. I love carrot cake gingerbread cake lemon drops. Muffin sugar plum marzipan pie.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PopoverControlled, \"r9jPo8Itcl3CH1RRAlp5f8wU2pw=\");\n\n_c = PopoverControlled;\nexport default PopoverControlled;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopoverControlled\");","map":{"version":3,"sources":["D:/nodejs/IMA/src/views/components/popovers/PopoverControlled.js"],"names":["Fragment","useState","Button","Popover","PopoverHeader","PopoverBody","PopoverControlled","popoverOpen","setPopoverOpen"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,YAA5D;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAC9B,kBAAsCL,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOM,WAAP;AAAA,MAAoBC,cAApB;;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,KAAK,EAAC,SAArB;AAA+B,MAAA,OAAO,MAAtC;AAAuC,MAAA,EAAE,EAAC,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,MAAM,EAAC,mBAFT;AAGE,MAAA,MAAM,EAAED,WAHV;AAIE,MAAA,MAAM,EAAE;AAAA,eAAMC,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,OAJV;AAAA,8BAME,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CArBD;;GAAMD,iB;;KAAAA,iB;AAsBN,eAAeA,iBAAf","sourcesContent":["import { Fragment, useState } from 'react'\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap'\r\n\r\nconst PopoverControlled = () => {\r\n  const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button.Ripple color='primary' outline id='controlledPopover'>\r\n        Controlled\r\n      </Button.Ripple>\r\n      <Popover\r\n        placement='top'\r\n        target='controlledPopover'\r\n        isOpen={popoverOpen}\r\n        toggle={() => setPopoverOpen(!popoverOpen)}\r\n      >\r\n        <PopoverHeader>Controlled Popover</PopoverHeader>\r\n        <PopoverBody>\r\n          Macaroon chocolate candy. I love carrot cake gingerbread cake lemon drops. Muffin sugar plum marzipan pie.\r\n        </PopoverBody>\r\n      </Popover>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default PopoverControlled\r\n"]},"metadata":{},"sourceType":"module"}