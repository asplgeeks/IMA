{"ast":null,"code":"import _slicedToArray from \"C:/Users/Shree/Downloads/newproject/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Shree\\\\Downloads\\\\newproject\\\\full-version\\\\src\\\\views\\\\apps\\\\todo\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // ** Third Party Components\n\nimport classnames from 'classnames'; // ** Todo App Components\n\nimport Tasks from './Tasks';\nimport Sidebar from './Sidebar';\nimport TaskSidebar from './TaskSidebar'; // ** Store & Actions\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTasks, updateTask, selectTask, addTask, deleteTask, reOrderTasks } from './store/actions'; // ** Styles\n\nimport '@styles/react/apps/app-todo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TODO = function TODO() {\n  _s();\n\n  // ** States\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      sort = _useState2[0],\n      setSort = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mainSidebar = _useState6[0],\n      setMainSidebar = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      openTaskSidebar = _useState8[0],\n      setOpenTaskSidebar = _useState8[1]; // ** Store Vars\n\n\n  var dispatch = useDispatch();\n  var store = useSelector(function (state) {\n    return state.todo;\n  }); // ** URL Params\n\n  var paramsURL = useParams();\n  var params = {\n    filter: paramsURL.filter || '',\n    q: query || '',\n    sortBy: sort || '',\n    tag: paramsURL.tag || ''\n  }; // ** Function to handle Left sidebar & Task sidebar\n\n  var handleMainSidebar = function handleMainSidebar() {\n    return setMainSidebar(!mainSidebar);\n  };\n\n  var handleTaskSidebar = function handleTaskSidebar() {\n    return setOpenTaskSidebar(!openTaskSidebar);\n  }; // ** Get Tasks on mount & based on dependency change\n\n\n  useEffect(function () {\n    dispatch(getTasks({\n      filter: paramsURL.filter || '',\n      q: query || '',\n      sortBy: sort || '',\n      tag: paramsURL.tag || ''\n    }));\n  }, [store.tasks.length, paramsURL.filter, paramsURL.tag, query, sort]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      store: store,\n      params: params,\n      getTasks: getTasks,\n      dispatch: dispatch,\n      mainSidebar: mainSidebar,\n      urlFilter: paramsURL.filter,\n      setMainSidebar: setMainSidebar,\n      handleTaskSidebar: handleTaskSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames('body-content-overlay', {\n              show: mainSidebar === true\n            }),\n            onClick: handleMainSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this), store ? /*#__PURE__*/_jsxDEV(Tasks, {\n            store: store,\n            tasks: store.tasks,\n            sort: sort,\n            query: query,\n            params: params,\n            setSort: setSort,\n            setQuery: setQuery,\n            dispatch: dispatch,\n            getTasks: getTasks,\n            paramsURL: paramsURL,\n            updateTask: updateTask,\n            selectTask: selectTask,\n            reOrderTasks: reOrderTasks,\n            handleMainSidebar: handleMainSidebar,\n            handleTaskSidebar: handleTaskSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, _this) : null, /*#__PURE__*/_jsxDEV(TaskSidebar, {\n            store: store,\n            params: params,\n            addTask: addTask,\n            dispatch: dispatch,\n            open: openTaskSidebar,\n            updateTask: updateTask,\n            selectTask: selectTask,\n            deleteTask: deleteTask,\n            handleTaskSidebar: handleTaskSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TODO, \"VSLY+xxWED+O3Tx3yMeCpl6jOQk=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n\n_c = TODO;\nexport default TODO;\n\nvar _c;\n\n$RefreshReg$(_c, \"TODO\");","map":{"version":3,"sources":["C:/Users/Shree/Downloads/newproject/full-version/src/views/apps/todo/index.js"],"names":["Fragment","useState","useEffect","useParams","classnames","Tasks","Sidebar","TaskSidebar","useDispatch","useSelector","getTasks","updateTask","selectTask","addTask","deleteTask","reOrderTasks","TODO","sort","setSort","query","setQuery","mainSidebar","setMainSidebar","openTaskSidebar","setOpenTaskSidebar","dispatch","store","state","todo","paramsURL","params","filter","q","sortBy","tag","handleMainSidebar","handleTaskSidebar","tasks","length","show"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Todo App Components\nimport Tasks from './Tasks'\nimport Sidebar from './Sidebar'\nimport TaskSidebar from './TaskSidebar'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getTasks, updateTask, selectTask, addTask, deleteTask, reOrderTasks } from './store/actions'\n\n// ** Styles\nimport '@styles/react/apps/app-todo.scss'\n\nconst TODO = () => {\n  // ** States\n  const [sort, setSort] = useState('')\n  const [query, setQuery] = useState('')\n  const [mainSidebar, setMainSidebar] = useState(false)\n  const [openTaskSidebar, setOpenTaskSidebar] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.todo)\n\n  // ** URL Params\n  const paramsURL = useParams()\n  const params = {\n    filter: paramsURL.filter || '',\n    q: query || '',\n    sortBy: sort || '',\n    tag: paramsURL.tag || ''\n  }\n\n  // ** Function to handle Left sidebar & Task sidebar\n  const handleMainSidebar = () => setMainSidebar(!mainSidebar)\n  const handleTaskSidebar = () => setOpenTaskSidebar(!openTaskSidebar)\n\n  // ** Get Tasks on mount & based on dependency change\n  useEffect(() => {\n    dispatch(\n      getTasks({\n        filter: paramsURL.filter || '',\n        q: query || '',\n        sortBy: sort || '',\n        tag: paramsURL.tag || ''\n      })\n    )\n  }, [store.tasks.length, paramsURL.filter, paramsURL.tag, query, sort])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        params={params}\n        getTasks={getTasks}\n        dispatch={dispatch}\n        mainSidebar={mainSidebar}\n        urlFilter={paramsURL.filter}\n        setMainSidebar={setMainSidebar}\n        handleTaskSidebar={handleTaskSidebar}\n      />\n      <div className='content-right'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <div\n              className={classnames('body-content-overlay', {\n                show: mainSidebar === true\n              })}\n              onClick={handleMainSidebar}\n            ></div>\n\n            {store ? (\n              <Tasks\n                store={store}\n                tasks={store.tasks}\n                sort={sort}\n                query={query}\n                params={params}\n                setSort={setSort}\n                setQuery={setQuery}\n                dispatch={dispatch}\n                getTasks={getTasks}\n                paramsURL={paramsURL}\n                updateTask={updateTask}\n                selectTask={selectTask}\n                reOrderTasks={reOrderTasks}\n                handleMainSidebar={handleMainSidebar}\n                handleTaskSidebar={handleTaskSidebar}\n              />\n            ) : null}\n\n            <TaskSidebar\n              store={store}\n              params={params}\n              addTask={addTask}\n              dispatch={dispatch}\n              open={openTaskSidebar}\n              updateTask={updateTask}\n              selectTask={selectTask}\n              deleteTask={deleteTask}\n              handleTaskSidebar={handleTaskSidebar}\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default TODO\n"]},"metadata":{},"sourceType":"module"}